{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apontamento/apontamento-list/apontamento-list.component.css","webpack:///./src/app/apontamento/apontamento-list/apontamento-list.component.html","webpack:///./src/app/apontamento/apontamento-list/apontamento-list.component.ts","webpack:///./src/app/apontamento/apontamento-novo/apontamento-novo.component.css","webpack:///./src/app/apontamento/apontamento-novo/apontamento-novo.component.html","webpack:///./src/app/apontamento/apontamento-novo/apontamento-novo.component.ts","webpack:///./src/app/apontamento/popup/popup.component.css","webpack:///./src/app/apontamento/popup/popup.component.html","webpack:///./src/app/apontamento/popup/popup.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.css","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.html","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.ts","webpack:///./src/app/cliente/cliente-list/cliente-list.component.css","webpack:///./src/app/cliente/cliente-list/cliente-list.component.html","webpack:///./src/app/cliente/cliente-list/cliente-list.component.ts","webpack:///./src/app/cliente/cliente-novo/cliente-model.ts","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.css","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.html","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.ts","webpack:///./src/app/cliente/cliente-show/cliente-show.component.css","webpack:///./src/app/cliente/cliente-show/cliente-show.component.html","webpack:///./src/app/cliente/cliente-show/cliente-show.component.ts","webpack:///./src/app/cliente/cliente.service.ts","webpack:///./src/app/financeiro/financeiro.component.css","webpack:///./src/app/financeiro/financeiro.component.html","webpack:///./src/app/financeiro/financeiro.component.ts","webpack:///./src/app/global-error-handler.service.ts","webpack:///./src/app/global-error/global-error.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/pagina-nao-encontrada/pagina-nao-encontrada.component.ts","webpack:///./src/app/projeto/popup/popup.component.css","webpack:///./src/app/projeto/popup/popup.component.html","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.css","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.html","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.ts","webpack:///./src/app/projeto/projeto-list/projeto-list.component.css","webpack:///./src/app/projeto/projeto-list/projeto-list.component.html","webpack:///./src/app/projeto/projeto-list/projeto-list.component.ts","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.css","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.html","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.ts","webpack:///./src/app/projeto/projeto-show/projeto-show.component.css","webpack:///./src/app/projeto/projeto-show/projeto-show.component.html","webpack:///./src/app/projeto/projeto-show/projeto-show.component.ts","webpack:///./src/app/projeto/projeto.service.ts","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.css","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.html","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.ts","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.css","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.html","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.ts","webpack:///./src/app/usuario/usuario-list/usuario-list.component.css","webpack:///./src/app/usuario/usuario-list/usuario-list.component.html","webpack:///./src/app/usuario/usuario-list/usuario-list.component.ts","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.css","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.html","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.ts","webpack:///./src/app/usuario/usuario-show/usuario-show.component.css","webpack:///./src/app/usuario/usuario-show/usuario-show.component.html","webpack:///./src/app/usuario/usuario-show/usuario-show.component.ts","webpack:///./src/app/usuario/usuario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"box\\\">\\n  <nav class=\\\"level\\\">\\n    <div class=\\\"level-left\\\">\\n        <div class=\\\"title is-4\\\">Apontamentos Projeto</div> \\n    </div>\\n    <div class=\\\"level-right\\\">\\n        <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/apontamento/novo']\\\">Novo apontamento</button>\\n    </div> \\n  </nav>\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-3\\\">Código</th>\\n                  <th class=\\\"col-3\\\">Descrição</th>\\n                  <th class=\\\"col-2\\\">Início</th>\\n                  <th class=\\\"col-2\\\">Fim</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <!-- <th class=\\\"col-1\\\"> </th> -->\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let a of apontamentos\\\" class=\\\"d-flex\\\">\\n                   <!-- apontamento: {{ a }} -->\\n                  <td class=\\\"col-3\\\">{{ a['codigo'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ a['descricao'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ a['hora']['inicio'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ a['hora']['fim'] }}</td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [disabled]=\\\"a['hora']['fim']!=''\\\" (click)=\\\"openDialog(projeto)\\\" class=\\\"button is-warning\\\">Encerrar atendimento</button></td>\\n                  <!-- <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/', projeto['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td> -->\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n  </div>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../../projeto/projeto.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\n\n@Component({\n  selector: 'app-apontamento-list',\n  templateUrl: './apontamento-list.component.html',\n  styleUrls: ['./apontamento-list.component.css']\n})\nexport class ApontamentoListComponent implements OnInit {\n  usuario: any;\n  apontamentos: any; \n  \n  ap = [{\n    descricao: \"\",\n    usuario: \"\",\n    hora: {\n      inicio: \"\",\n      fim: \"\"\n      },\n    despesa: {\n      descricao: \"\",\n      valor: 0\n    }\n  }];\n\n  projeto: any;\n  \n  constructor(\n    private _projetoService: ProjetoService,\n    private _usuarioService: UsuarioService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.getUserLoggedIn();\n    this.obterListaApontamento();\n  }\n\n  obterListaApontamento(){\n    console.log('ApontamentoListComponent > obterListaApontamento()', this.usuario)\n    const apontObservable = this._projetoService.obterApontamentos();\n    apontObservable.subscribe(\n      (apontamentos) => {\n        this.apontamentos = apontamentos.json();\n        console.log('JSON apontamentos in obterApontamentos()', this.apontamentos);\n        // this.ap.push(this.apontamentos);\n        for (var i = 0; i < this.apontamentos.length; i++) {\n          this.obterProjeto(this.apontamentos[i]._projeto, i);\n        } \n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterProjeto(id, i) {\n    console.log('ApontamentoNovoComponent > obterProjeto()')\n    const observable = this._projetoService.obterProjetoById(id);\n    observable.subscribe(\n      (response) => {\n        this.projeto = response.json();\n        console.log(' descricao do projeto in obterProjeto()', this.projeto, this.ap);\n        this.apontamentos[i].descricao = this.projeto.descricao;\n        this.apontamentos[i].codigo = this.projeto.codigo;\n        // this.obterClienteNomeFantasia(this.projeto._clienteId);\n        // this.obterClientes();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n\n  openDialog(projeto): void {\n    console.log('ProjetoListComponent > openDialog(projeto) > encerrar()')\n    let dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: {\n        id: projeto._id,\n        codigo: projeto.codigo,\n        descricao: projeto.descricao,\n        usuario: this.usuario\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n        console.log('The dialog was closed');\n        this.obterListaApontamento();\n    });\n  }\n\n\n\n\n}\n\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: '../popup/popup.component.html',\n  styleUrls: ['../popup/popup.component.css']\n})\n\nexport class Dialog {\n\n  constructor(private _projetoService: ProjetoService, \n    private _router: Router, \n    public dialogRef: MatDialogRef<Dialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  encerrarAtendinmento(id) {\n    console.log('Dialog >  encerrarAtendimento(id) ', id)\n    const dialogObservable = this._projetoService.encerrarApontamento(id);\n    dialogObservable.subscribe(\n      (res) => { \n        console.log('The dialog called encerrar apontamento!', res);\n        this.dialogRef.close();\n      },\n      (err) => { },\n        () => { }\n    )\n    // console.log('The dialog called delete projeto!');\n    // this.dialogRef.close();\n  }\n\n}\n\n","module.exports = \"button {\\n    margin: 10px;\\n}\\n.purple {\\n    color: purple;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n<h3>  {{today | date:'short' }} </h3>\\n<form  #formData=\\\"ngForm\\\" id=\\\"newDespesaForm\\\">\\n  <h3>Projeto</h3>\\n  <div class=\\\"select is-multiple\\\">\\n    <select name=\\\"projeto\\\" [(ngModel)]=\\\"projetoSelecionado\\\" required>\\n        <option *ngFor=\\\"let p of projetos\\\" [value]=\\\"p._id\\\">\\n          {{ p.codigo }} {{ p.descricao }}\\n        </option>\\n    </select>\\n\\n    <!-- <div *ngIf=\\\"!apontamento.projeto.valid\\\" class=\\\"purple\\\"> * Selecione um projeto!</div> -->\\n  \\n  </div>\\n\\n  <h3>Tipo de apontamento</h3>\\n  <div class=\\\"select is-multiple\\\">\\n      <select name=\\\"tipo\\\" [(ngModel)]=\\\"tipo\\\">\\n        <option>Hora </option>\\n        <option>Despesa </option>\\n      </select>\\n      <!-- <div *ngIf=\\\"!apontamento.tipo.valid\\\" class=\\\"purple\\\"> * Selecione um tipo de apontamento!</div> -->\\n  \\n      <!-- Tipo de Apontamento: Despesa -->\\n      <div class=\\\"control\\\" *ngIf=\\\"(tipo=='Despesa')\\\">\\n        <div class=\\\"field is-horizontal\\\" style=\\\"margin-top: 20px;\\\" >\\n          <select name=\\\"opcaoDespesa\\\" [(ngModel)]=\\\"opcaoDespesa\\\" > \\n            <option>alimentação </option>\\n            <option>hospedagem </option>\\n            <option>pedágio </option>\\n            <option>transporte </option>\\n            <option>outros </option>\\n          </select>\\n          <!-- <div *ngIf=\\\"!apontamento.opcaoDespesa.valid\\\" class=\\\"purple\\\"> * Selecione uma opção de despesa!</div> -->\\n\\n        </div>\\n            <div class=\\\"control\\\" *ngIf=\\\"opcaoDespesa=='outros'\\\">\\n            <div class=\\\"field is-horizontal\\\">\\n              <p class=\\\"control\\\">\\n                <textarea \\n                class=\\\"textarea is-warning\\\" \\n                type=\\\"text\\\" \\n                rows=\\\"2\\\"\\n                name=\\\"descricao\\\" \\n                placeholder=\\\"Descrição da despesa\\\"\\n                [(ngModel)]=\\\"apontamento.despesa.descricao\\\"\\n                #descricao=\\\"ngModel\\\">\\n                </textarea>\\n              </p>\\n            </div>\\n        </div>\\n        <div class=\\\"field is-horizontal\\\" >\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input\\\" \\n                type=\\\"text\\\" \\n                name=\\\"valor\\\" \\n                [(ngModel)]=\\\"apontamento.despesa.valor\\\"\\n                #valor=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- Tipo de Apontamento: Hora -->\\n      <div *ngIf=\\\"(tipo=='Hora')\\\">\\n          <!-- <div style=\\\"border: solid 2px green; margin-top: 10px;  padding: 10px;\\\"> -->\\n            <select name=\\\"inicio\\\" [(ngModel)]=\\\"apontamento.hora.inicio\\\" > \\n                <option>{{today | date:\\\"MMM d, y H:mm\\\"}}</option>\\n              </select>\\n              \\n          <!-- </div> -->\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setApontamento()\\\" [disabled]=\\\"formData.invalid\\\">Confirma</button>\\n\\n    </div>\\n  </form>\\n\\n\\n<!-- <div style=\\\"margin-top: 15px; width: 50%;\\\">\\n        <ngbd-datepicker-popup></ngbd-datepicker-popup>\\n    </div> -->\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n// import { NgbdDatepickerPopup } from './datepicker-popup';\nimport { ProjetoService } from '../../projeto/projeto.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { Router } from '../../../../node_modules/@angular/router';\nimport { getLocaleDateTimeFormat } from '../../../../node_modules/@angular/common';\n\n@Component({\n  selector: 'app-apontamento-novo',\n  templateUrl: './apontamento-novo.component.html',\n  styleUrls: ['./apontamento-novo.component.css']\n})\nexport class ApontamentoNovoComponent implements OnInit {\n  usuario: any;;\n\n  today = new Date();\n  \n  projetos: any[];\n  projetoSelecionado: Number;\n \n  id: any;\n  tipo: any;\n  opcaoDespesa: any;\n\n  apontamento: any = {\n    usuario: \"\",\n    hora: {\n      inicio: \"\",\n      fim: \"\"\n      },\n    despesa: {\n      descricao: \"\",\n      valor: 0\n    }\n  }\n  \n  // apontamentos: any[];\n\n  constructor(\n    private _projetoService: ProjetoService,\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.getUserLoggedIn();\n    console.log(' usuario in apontamento:', this.usuario);\n    this.obterListaProjeto();\n  }\n  \n  obterListaProjeto() {\n    console.log('ApontamentoNovoComponent > obterListaProjeto()')\n    const projetoObservable = this._projetoService.obterTodos();\n    projetoObservable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n        console.log('projetos in List apontamentos:', this.projetos);\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  setApontamento() {\n    console.log('ApontamentoNovoComponent > setApontamento() ', this.apontamento, this.projetoSelecionado);\n    if (this.tipo != 'Hora') {\n    this.apontamento.hora.inicio = \"\";\n    this.apontamento.hora.fim = \"\";\n    }\n    if (this.opcaoDespesa != 'outros') {\n      this.apontamento.despesa.descricao = this.opcaoDespesa;\n    }\n    this.apontamento.usuario = this.usuario.email;   // arrumar essa mess\n    const Observable = this._projetoService.apontamentoNovo(this.projetoSelecionado, this.apontamento);\n    Observable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n        this._router.navigate(['/apontamentos']);\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  cancel() {\n    this._router.navigate(['/apontamentos']);\n  }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  popup works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.css']\n})\nexport class PopupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { FinanceiroComponent } from './financeiro/financeiro.component';\nimport { UsuarioNovoComponent } from './usuario/usuario-novo/usuario-novo.component';\nimport { UsuarioEditComponent } from './usuario/usuario-edit/usuario-edit.component';\nimport { UsuarioShowComponent } from './usuario/usuario-show/usuario-show.component';\nimport { UsuarioListComponent } from './usuario/usuario-list/usuario-list.component';\nimport { ProjetoListComponent } from './projeto/projeto-list/projeto-list.component';\nimport { ProjetoNovoComponent } from './projeto/projeto-novo/projeto-novo.component';\nimport { ProjetoEditComponent } from './projeto/projeto-edit/projeto-edit.component';\nimport { ProjetoShowComponent } from './projeto/projeto-show/projeto-show.component';\nimport { ClienteListComponent } from './cliente/cliente-list/cliente-list.component';\nimport { ClienteNovoComponent } from './cliente/cliente-novo/cliente-novo.component';\nimport { ClienteEditComponent } from './cliente/cliente-edit/cliente-edit.component';\nimport { ClienteShowComponent } from './cliente/cliente-show/cliente-show.component';\nimport { ApontamentoListComponent } from './apontamento/apontamento-list/apontamento-list.component';\nimport { ApontamentoNovoComponent } from './apontamento/apontamento-novo/apontamento-novo.component';\nimport { PaginaNaoEncontradaComponent } from './pagina-nao-encontrada/pagina-nao-encontrada.component';\nimport { RelatorioFinanceiroComponent } from './relatorio/relatorio-financeiro/relatorio-financeiro.component';\nimport { GlobalErrorComponent } from './global-error/global-error.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'apontamento/novo',\n    component: ApontamentoNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'apontamentos',\n    component: ApontamentoListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'financeiro',\n    component: FinanceiroComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'relatorio/financeiro',\n    component: RelatorioFinanceiroComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/show/:id',\n    component: UsuarioShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/novo',\n    component: UsuarioNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/edit/:id',\n    component: UsuarioEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuarios',\n    component: UsuarioListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'clientes',\n    component: ClienteListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/novo',\n    component: ClienteNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/edit/:id',\n    component: ClienteEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/show/:id',\n    component: ClienteShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projetos',\n    component: ProjetoListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/novo',\n    component: ProjetoNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/edit/:id',\n    component: ProjetoEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/show/:id',\n    component: ProjetoShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'error',\n    component: GlobalErrorComponent\n },\n  { \n    path: 'reset',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PaginaNaoEncontradaComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<figure class=\\\"image is-128x128\\\">\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</figure>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'boilerplate';\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\nimport { GlobalErrorComponent } from './global-error/global-error.component';\n\nimport { ProjetoService } from './projeto/projeto.service';\nimport { UsuarioService } from './usuario/usuario.service';\nimport { ClienteService } from './cliente/cliente.service';\nimport { GlobalErrorHandlerService } from './global-error-handler.service';\n\n// import { NgbdDatepickerPopup } from './apontamento/datepicker-popup';\n// import { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n// import { ApontamentoComponent } from './apontamento/apontamento.component';\nimport { ApontamentoListComponent } from './apontamento/apontamento-list/apontamento-list.component';\nimport { ClienteEditComponent } from './cliente/cliente-edit/cliente-edit.component';\nimport { ClienteNovoComponent } from './cliente/cliente-novo/cliente-novo.component';\nimport { ClienteShowComponent } from './cliente/cliente-show/cliente-show.component';\nimport { UsuarioListComponent } from './usuario/usuario-list/usuario-list.component';\nimport { UsuarioEditComponent } from './usuario/usuario-edit/usuario-edit.component';\nimport { UsuarioNovoComponent } from './usuario/usuario-novo/usuario-novo.component';\nimport { UsuarioShowComponent } from './usuario/usuario-show/usuario-show.component';\nimport { LoginComponent } from './login/login.component';\nimport { FinanceiroComponent } from './financeiro/financeiro.component';\nimport { ProjetoListComponent } from './projeto/projeto-list/projeto-list.component';\nimport { ProjetoNovoComponent } from './projeto/projeto-novo/projeto-novo.component';\nimport { ProjetoShowComponent } from './projeto/projeto-show/projeto-show.component';\nimport { ProjetoEditComponent } from './projeto/projeto-edit/projeto-edit.component';\nimport { ClienteListComponent } from './cliente/cliente-list/cliente-list.component';\nimport { RelatorioFinanceiroComponent } from './relatorio/relatorio-financeiro/relatorio-financeiro.component';\nimport { PaginaNaoEncontradaComponent } from './pagina-nao-encontrada/pagina-nao-encontrada.component';\nimport { ApontamentoNovoComponent } from './apontamento/apontamento-novo/apontamento-novo.component';\nimport { Dialog } from './projeto//projeto-list/projeto-list.component';\nimport { PopupComponent } from './apontamento/popup/popup.component';\nimport { MaterialModule } from './material';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ApontamentoListComponent,\n    FinanceiroComponent,\n    ClienteListComponent,\n    ClienteNovoComponent,\n    ClienteEditComponent,\n    ClienteShowComponent,\n    UsuarioListComponent,\n    UsuarioEditComponent,\n    UsuarioNovoComponent,\n    UsuarioShowComponent,\n    ProjetoListComponent,\n    ProjetoNovoComponent,\n    ProjetoShowComponent,\n    ProjetoEditComponent,\n    RelatorioFinanceiroComponent,\n    PaginaNaoEncontradaComponent,\n    GlobalErrorComponent,\n    ApontamentoNovoComponent,\n    Dialog,\n    PopupComponent\n    // NgbdDatepickerPopup,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MaterialModule\n    // NgbModule,\n    // NgbModule.forRoot()\n  ],\n  entryComponents:[Dialog],\n  providers: [\n    ProjetoService,\n    UsuarioService,\n    ClienteService,\n    GlobalErrorHandlerService,\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService }    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"button {\\n    margin: 10px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 175px;\\n}\\n.errors {\\n    color: brown;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/clientes']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  \\n  <div class=\\\"container\\\">\\n  \\n      Dados básicos: \\n  \\n      <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n        <p *ngIf=\\\"errors.cnpj\\\" >  {{ errors['cnpj'].message }} </p>\\n        <p *ngIf=\\\"errors.razaoSocial\\\" >  {{ errors['razaoSocial'].message }} </p>\\n        <p *ngIf=\\\"errors.nomeFantasia\\\" >  {{ errors['nomeFantasia'].message }} </p>\\n        <p *ngIf=\\\"errors.endereco\\\" >  {{ errors['endereco'].message }} </p>   \\n        <!-- <p *ngIf=\\\"errors.contatos\\\" >  {{ errors['contatos'].message }} </p>        -->\\n      </div>\\n  \\n  \\n    <form [formGroup] = \\\"clienteForm\\\" (submit)=\\\"editarCliente(clienteForm)\\\">\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">CNPJ</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input is-focused\\\" \\n              type=\\\"text\\\"\\n              formControlName=\\\"cnpj\\\" \\n              name=\\\"cnpj\\\"\\n              minlength=11\\n              required\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!cnpj?.valid\\\" class=\\\"purple\\\">CNPJ precisar ter no mínimo 11 caracteres!</div> -->\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Razão Social</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              formControlName=\\\"razaoSocial\\\" \\n              name=\\\"razaoSocial\\\"\\n              minlength=8\\n              required\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!razaoSocial?.valid\\\" class=\\\"purple\\\">Razão Social do cliente precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n          <div class=\\\"field-label is-normal\\\">\\n            <label class=\\\"label\\\">Nome Fantasia</label>\\n          </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input\\\" \\n                type=\\\"text\\\" \\n                formControlName=\\\"nomeFantasia\\\"  \\n                name=\\\"nomeFantasia\\\"\\n                minlength=2\\n                required\\n                />\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- <div *ngIf=\\\"!nomeFantasia?.valid\\\" class=\\\"purple\\\">Nome fantasia do cliente precisar ter no mínimo 2 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Endereço</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\"\\n              formControlName=\\\"endereco\\\" \\n              name=\\\"endereco\\\"  \\n              minlength=6\\n              required\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!endereco?.valid\\\" class=\\\"purple\\\">Endereço do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n  \\n      Dados comerciais:\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Valor h/h</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\"\\n              formControlName=\\\"valorHH\\\" \\n              name=\\\"valorHH\\\"  \\n              required\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!valorHH?.valid\\\" class=\\\"purple\\\">Valor HH do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Prazo Pagamento</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\"\\n              formControlName=\\\"prazoPgto\\\" \\n              name=\\\"prazoPgto\\\"  \\n              required\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!prazoPgto?.valid\\\" class=\\\"purple\\\">Prazo pgto do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      Contatos: \\n      <div  class=\\\"tile is-ancestor\\\">\\n        <div class=\\\"tile is-vertical is-content\\\">\\n          <div class=\\\"tile\\\">\\n            <div class=\\\"tile is-parent is-vertical\\\">\\n              <article class=\\\"tile is-child notification is-primary\\\">\\n  \\n                <div  formArrayName=\\\"contatos\\\" *ngFor=\\\"let brand of clienteForm.controls.contatos.controls; let i = index;\\\">\\n                  <div formGroupName =\\\"{{i}}\\\">\\n                    <div class=\\\"field is-horizontal\\\">\\n                      <div class=\\\"field-label is-normal\\\">\\n                        {{brand.get('title').value}}\\n                      </div>\\n                      <div class=\\\"field-body\\\">\\n                        <div class=\\\"field\\\">\\n                          <p class=\\\"control\\\">\\n                            <input\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"value\\\" \\n                            >\\n                          </p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n  \\n                <!-- <a style=\\\"margin-left: 150px;\\\" class=\\\"button is-warning is-rounded is-small\\\" (click)=\\\"addContato()\\\">+</a> -->\\n  \\n              </article>\\n            </div>\\n  \\n            <div class=\\\"tile is-parent\\\">\\n                <article class=\\\"tile is-child notification is-info\\\">\\n                  {{ contato.nome }}  {{ contato.email }}  {{ contato.telefone }}  {{ contato.skype }}\\n                </article>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n   \\n  \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"clienteForm.invalid\\\">Confirma</button>\\n        \\n  \\n    </form>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgForm, FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ClienteService } from '../cliente.service';\nimport { Contato } from '../cliente-novo/cliente-model';\n\n@Component({\n  selector: 'app-cliente-edit',\n  templateUrl: './cliente-edit.component.html',\n  styleUrls: ['./cliente-edit.component.css']\n})\nexport class ClienteEditComponent implements OnInit {\n  usuario: any;\n  errors: any;\n  cliente = {\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: 0,\n    prazoPgto: 0,\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n  contato = new Contato;\n\n  contatosArray = [];\n  flContato: Boolean = false;\n  clienteForm = new FormGroup({\n      cnpj: new FormControl(),\n      razaoSocial: new FormControl(),\n      nomeFantasia: new FormControl(),\n      endereco: new FormControl(),\n      valorHH: new FormControl(),\n      prazoPgto: new FormControl(),\n      contatos: new FormControl()\n  });\n\n  contatosCliente=[\n    {\n      'brand': \"nome\"\n    },\n    {\n      'brand': \"email\"\n    },\n    {\n      'brand': \"telefone\"\n    },\n    {\n      'brand': \"skype\"\n    }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoEditComponent > usuario: ', this.usuario);\n    this.obterCliente(this._route.snapshot.params['id']);\n  }\n  \n  // ngOnChanges() {\n  //   this.rebuildForm();\n  // }\n\n  // rebuildForm() {\n  //   this.clienteForm.reset({\n  //     // cnpj: this.contato.nome,\n  //     // contatos: this.cliente.contatos[1] || new Contato()\n  //   });\n  //   // this.setContatos(this.cliente.contatos);\n  // }\n\n  createForm(contatosCliente) {\n    var arr = [];\n    for (var i=0; i < contatosCliente.length; i++ ) {\n      arr.push(this.buildContato(contatosCliente[i]));\n    }\n    return this.clienteForm = this.formBuilder.group({\n      cnpj: [this.cliente.cnpj, Validators.required ],\n      razaoSocial: [this.cliente.razaoSocial, Validators.required ],\n      nomeFantasia: [this.cliente.nomeFantasia, Validators.required ],\n      endereco: [this.cliente.endereco, Validators.required ],\n      valorHH: this.cliente.valorHH,\n      prazoPgto: this.cliente.prazoPgto, \n      contatos: this.formBuilder.array(arr)\n      })\n  }\n\n  obterCliente(id){\n    console.log('ClienteEditComponent > obterCliente'); \n      const observable = this._clienteService.obterClienteById(id);\n      observable.subscribe(\n        (response) => {\n          this.cliente = response.json();\n          console.log('in ClienteEditComponent >>>>:', this.cliente);\n          // this.clienteForm = this.cliente;\n          this.createForm(this.contatosCliente);\n        },\n        (err) => { },\n          () => { }\n      )\n  }\n\n  buildContato(product): FormGroup {\n    return this.formBuilder.group({\n      title: [product.brand],\n      value: ['']\n    });\n  }\n\n\n  editarCliente(clienteForm: NgForm) {\n    if (!this.flContato) { this._router.navigate(['/cliente/edit']) };\n    console.log('ClienteEditarComponent > editarCliente(clienteForm)', clienteForm); \n    this._clienteService.editarCliente(this.cliente['_id'], clienteForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu editando cliente ', this.errors);\n          this._router.navigate(['/cliente/edit/' + this.cliente['_id'] ]);\n        } else {\n          this._router.navigate(['/clientes']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    this.createForm(this.contatosCliente);\n  }\n\n  cancel() {\n    this._router.navigate(['/clientes']);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n      <nav class=\\\"level\\\">\\n        <div class=\\\"level-left\\\">\\n            <div class=\\\"title is-4\\\">Cliente</div> \\n        </div>\\n        <div class=\\\"level-right\\\">\\n            <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/cliente/novo']\\\">Novo cliente</button>\\n        </div> \\n      </nav>\\n    <article class=\\\"media\\\">\\n      <div class=\\\"media-content\\\">\\n        <div class=\\\"content\\\">\\n  \\n          <br>\\n          <div id=\\\"scroll\\\">\\n            <table class=\\\"table table-hover is-one-third\\\" align=\\\"left\\\">\\n              <thead>\\n                  <tr class=\\\"table-primary d-flex\\\">\\n                    <th class=\\\"col-2\\\">Nome Fantasia</th>\\n                    <th class=\\\"col-1\\\">Valor H/H</th>\\n                    <th class=\\\"col-1\\\">Prazo Pgto</th>\\n                    <th class=\\\"col-2\\\">Primeiro Contato </th>\\n                    <th class=\\\"col-3\\\">E-mail </th>\\n                    <th class=\\\"col-2\\\">Fone </th>\\n                    <th class=\\\"col-1\\\">Ação</th>\\n                    <th class=\\\"col-2\\\"> </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let cliente of clientes\\\" class=\\\"d-flex is-small\\\">\\n                    <td class=\\\"col-2\\\">{{ cliente['nomeFantasia'] }}</td>\\n                    <td class=\\\"col-1\\\">{{ cliente['valorHH'] }}</td>\\n                    <td class=\\\"col-1\\\">{{ cliente['prazoPgto'] }}</td>\\n                    <td class=\\\"col-2\\\">{{ cliente.contatos[0].value }}</td>\\n                    <td class=\\\"col-3\\\">{{ cliente.contatos[1].value }}</td>\\n                    <td class=\\\"col-2\\\">{{ cliente.contatos[2].value }}</td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/cliente/edit/', cliente['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                    <td class=\\\"col-2\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/cliente/show', cliente['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td>\\n                  </tr>\\n                </tbody>\\n              </table> \\n            </div>    \\n          </div>\\n        </div>\\n      </article>\\n  </div>\\n    \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ClienteService } from '../cliente.service';\n\n@Component({\n  selector: 'app-cliente-list',\n  templateUrl: './cliente-list.component.html',\n  styleUrls: ['./cliente-list.component.css']\n})\nexport class ClienteListComponent implements OnInit {\n  clientes: any;\n\n  constructor(\n    private _clienteService: ClienteService\n  ) { }\n\n  ngOnInit() {\n    this.obterClientes();\n  }\n\n  obterClientes() {\n    console.log('ClienteListComponent > obterClienteList()')\n    const clienteObservable = this._clienteService.obterTodos();\n    clienteObservable.subscribe(\n      (clientes) => { \n        console.log('clientes in obterClientes list:', clientes.json());\n        this.clientes = clientes.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n}\n","export class Cliente {\n    cnpj = '';\n    razaoSocial = '';\n    nomeFantasia = '';\n    endereco = '';\n    contatos: Contato[];\n  }\n  \n  export class Contato {\n    nome     = '';\n    email    = '';\n    telefone = '';\n    skype    = '';\n  }","module.exports = \"button {\\n    margin: 10px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 175px;\\n}\\n.errors {\\n    color: brown;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/clientes']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container\\\">\\n\\n    Dados básicos: \\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.cnpj\\\" >  {{ errors['cnpj'].message }} </p>\\n      <p *ngIf=\\\"errors.razaoSocial\\\" >  {{ errors['razaoSocial'].message }} </p>\\n      <p *ngIf=\\\"errors.nomeFantasia\\\" >  {{ errors['nomeFantasia'].message }} </p>\\n      <p *ngIf=\\\"errors.endereco\\\" >  {{ errors['endereco'].message }} </p>   \\n      <!-- <p *ngIf=\\\"errors.contatos\\\" >  {{ errors['contatos'].message }} </p>        -->\\n    </div>\\n\\n\\n  <form  [formGroup] = \\\"clienteForm\\\" (submit)=\\\"criarCliente(clienteForm)\\\">\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">CNPJ</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input is-focused\\\" \\n            type=\\\"text\\\"\\n            formControlName=\\\"cnpj\\\" \\n            name=\\\"cnpj\\\"\\n            minlength=11\\n            required\\n            /> \\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!cnpj?.valid\\\" class=\\\"purple\\\">CNPJ precisar ter no mínimo 11 caracteres!</div> -->\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Razão Social</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\" \\n            formControlName=\\\"razaoSocial\\\" \\n            name=\\\"razaoSocial\\\"\\n            minlength=8\\n            required\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!razaoSocial?.valid\\\" class=\\\"purple\\\">Razão Social do cliente precisar ter no mínimo 8 caracteres!</div> -->\\n\\n    <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Nome Fantasia</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              formControlName=\\\"nomeFantasia\\\"  \\n              name=\\\"nomeFantasia\\\"\\n              minlength=2\\n              required\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!nomeFantasia?.valid\\\" class=\\\"purple\\\">Nome fantasia do cliente precisar ter no mínimo 2 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Endereço</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\"\\n            formControlName=\\\"endereco\\\" \\n            name=\\\"endereco\\\"  \\n            minlength=6\\n            required\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!endereco?.valid\\\" class=\\\"purple\\\">Endereço do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n\\n    Dados comerciais:\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor h/h</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\"\\n            formControlName=\\\"valorHH\\\" \\n            name=\\\"valorHH\\\"  \\n            required\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!valorHH?.valid\\\" class=\\\"purple\\\">Valor HH do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Prazo Pagamento</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\"\\n            formControlName=\\\"prazoPgto\\\" \\n            name=\\\"prazoPgto\\\"  \\n            required\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!prazoPgto?.valid\\\" class=\\\"purple\\\">Prazo pgto do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    Contatos: \\n\\n    <div  class=\\\"tile is-ancestor\\\">\\n      <div class=\\\"tile is-vertical is-content\\\">\\n        <div class=\\\"tile\\\">\\n          <div class=\\\"tile is-parent is-vertical\\\">\\n            <article class=\\\"tile is-child notification is-primary\\\">\\n\\n              <div  formArrayName=\\\"contatos\\\" *ngFor=\\\"let brand of clienteForm.controls.contatos.controls; let i = index;\\\">\\n                <div formGroupName =\\\"{{i}}\\\">\\n                  <div class=\\\"field is-horizontal\\\">\\n                    <div class=\\\"field-label is-normal\\\">\\n                      {{brand.get('title').value}}\\n                    </div>\\n                    <div class=\\\"field-body\\\">\\n                      <div class=\\\"field\\\">\\n                        <p class=\\\"control\\\">\\n                          <input\\n                          type=\\\"text\\\"\\n                          formControlName=\\\"value\\\" \\n                          >\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <a style=\\\"margin-left: 150px;\\\" class=\\\"button is-warning is-rounded is-small\\\" (click)=\\\"addContato()\\\">+</a>\\n\\n            </article>\\n          </div>\\n\\n          <div class=\\\"tile is-parent\\\">\\n            <div *ngFor=\\\"let c of contatosArray; let i = index; \\\">\\n              <article class=\\\"tile is-child notification is-info\\\">\\n                  {{ c[0].value }}  {{ c[1].value }}  {{ c[2].value}}  {{ c[3].value }}\\n                <!-- {{ contato.nome }}  {{ contato.email }}  {{ contato.telefone }}  {{ contato.skype }} -->\\n              </article>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n \\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"clienteForm.invalid\\\">Confirma</button>\\n      \\n\\n  </form>\\n\\n</div>\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm, FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { ClienteService } from '../cliente.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { Contato } from './cliente-model';\n\n@Component({\n  selector: 'app-cliente-novo',\n  templateUrl: './cliente-novo.component.html',\n  styleUrls: ['./cliente-novo.component.css']\n})\nexport class ClienteNovoComponent implements OnInit, OnChanges {\n  usuario: any;\n  errors: any;\n  // cliente = {\n  //   cnpj: 0,\n  //   razaoSocial: \"\",\n  //   nomeFantasia: \"\",\n  //   endereco: \"\",\n  //   valorHH: 0,\n  //   prazoPgto: 0,\n  //   contatos:  [{ \n  //     nome: \"\",\n  //     email: \"\",\n  //     telefone: 0,\n  //     skype: \"\"}]\n  // }\n  contato = new Contato;\n\n  contatosArray = [];\n  flContato: Boolean = false;\n  clienteForm: FormGroup;\n  index: any = 0;\n\n  clienteContatos=[\n    {\n      'brand': \"nome\"\n    },\n    {\n      'brand': \"email\"\n    },\n    {\n      'brand': \"telefone\"\n    },\n    {\n      'brand': \"skype\"\n    }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _router: Router\n  ) { \n    // this.contactForm = this.createFormGroup();\n  }\n\n  ngOnInit() {\n    console.log('contato in ngOnInit:', this.contato);\n    this.usuario = this._usuarioService.usuario;\n    console.log(' ClienteNovoComponent > ', this.usuario);\n    this.createForm(this.clienteContatos);\n  }\n\n  ngOnChanges() {\n    this.rebuildForm();\n  }\n\n  rebuildForm() {\n    this.clienteForm.reset({\n      // cnpj: this.contato.nome,\n      // contatos: this.cliente.contatos[1] || new Contato()\n    });\n    // this.setContatos(this.cliente.contatos);\n  }\n\n  createForm(clienteContatos) {\n    var arr = [];\n    for (var i=0; i < clienteContatos.length; i++ ) {\n      arr.push(this.buildContato(clienteContatos[i]));\n    }\n    return this.clienteForm = this.formBuilder.group({\n      cnpj: ['', Validators.required ],\n      razaoSocial: ['', Validators.required ],\n      nomeFantasia: ['', Validators.required ],\n      endereco: ['', Validators.required ],\n      valorHH: '',\n      prazoPgto: '', \n      contatos: this.formBuilder.array(arr)\n  })\n  } \n\n  addContato() {\n    console.log('ClienteNovoComponent > >>>>>>> addContato() ', this.clienteForm.controls.contatos.value);\n    this.flContato = true;\n    this.contatosArray.push(this.clienteForm.controls.contatos.value);\n    this.contato.nome = this.contatosArray[this.index][0].value;\n    this.contato.email = this.contatosArray[this.index][1].value;\n    this.contato.telefone = this.contatosArray[this.index][2].value;\n    this.contato.skype = this.contatosArray[this.index][3].value;\n    console.log('contatos antes >>> contatosArray :', this.contatosArray );\n    this.createContatos()\n    this.index += 1;\n  }\n\n  createContatos() {\n    console.log('ClienteNovoComponent >  createContatos() '); \n    var arr = [];\n    for (var i=0; i < this.clienteContatos.length; i++ ) {\n      arr.push(this.buildContato(this.clienteContatos[i]));\n    }\n    // return this.clienteForm = this.formBuilder.group({\n    //   contatos: this.formBuilder.array(arr)\n    //   })\n  } \n\n  buildContato(clienteContatos): FormGroup {\n    return this.formBuilder.group({\n      title: [clienteContatos.brand],\n      value: ['']\n    });\n  }\n\n  criarCliente(clienteForm: NgForm) {\n    console.log('ClienteNovoComponent > criarCliente(clienteForm: NgForm)', clienteForm.controls.contatos.value); \n    if (!this.flContato) { this._router.navigate(['/cliente/novo']) };\n    this._clienteService.criarCliente(clienteForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu salvando cliente ', this.errors);\n          this._router.navigate(['/cliente/novo']);\n        } else {\n          this._router.navigate(['/clientes']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    this.createForm(this.clienteContatos);\n  }\n\n  cancel() {\n    this._router.navigate(['/clientes']);\n  }\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\n.down-10 {\\n    margin-top: 30px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/clientes']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  \\n  <div class=\\\"container\\\">\\n  \\n      Dados básicos: \\n  \\n    <form [formGroup] = \\\"clienteForm\\\" (submit)=\\\"excluirCliente(clienteForm)\\\">\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">CNPJ</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.cnpj }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!cnpj?.valid\\\" class=\\\"purple\\\">CNPJ precisar ter no mínimo 11 caracteres!</div> -->\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Razão Social</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.razaoSocial }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!razaoSocial?.valid\\\" class=\\\"purple\\\">Razão Social do cliente precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n          <div class=\\\"field-label is-one-third\\\">\\n            <label class=\\\"label\\\">Nome Fantasia</label>\\n          </div>\\n          <div class=\\\"field-body\\\">\\n            {{ cliente.nomeFantasia }}\\n          </div>\\n        </div>\\n        <!-- <div *ngIf=\\\"!nomeFantasia?.valid\\\" class=\\\"purple\\\">Nome fantasia do cliente precisar ter no mínimo 2 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Endereço</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.endereco }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!endereco?.valid\\\" class=\\\"purple\\\">Endereço do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n  \\n      Dados comerciais:\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Valor h/h</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.valorHH }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!valorHH?.valid\\\" class=\\\"purple\\\">Valor HH do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Prazo Pagamento</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.prazoPgto }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!prazoPgto?.valid\\\" class=\\\"purple\\\">Prazo pgto do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      Contatos: \\n      <div  class=\\\"tile is-ancestor\\\">\\n        <div class=\\\"tile is-vertical is-content\\\">\\n          <div class=\\\"tile\\\">\\n            <div class=\\\"tile is-parent is-vertical\\\">\\n              <article class=\\\"tile is-child notification is-primary\\\">\\n  \\n                <div  formArrayName=\\\"contatos\\\" *ngFor=\\\"let brand of clienteForm.controls.contatos.controls; let i = index;\\\">\\n                  <div formGroupName =\\\"{{i}}\\\">\\n                    <div class=\\\"field is-horizontal\\\">\\n                      <div class=\\\"field-label is-normal\\\">\\n                        {{brand.get('title').value}}\\n                      </div>\\n                      <div class=\\\"field-body\\\">\\n                        <div class=\\\"field\\\">\\n                          <p class=\\\"control\\\">\\n\\n\\n                            <!-- <input\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"value\\\" \\n                            > -->\\n                          </p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n  \\n                <a style=\\\"margin-left: 150px;\\\" class=\\\"button is-warning is-rounded is-small\\\" (click)=\\\"addContato()\\\">+</a>\\n  \\n              </article>\\n            </div>\\n  \\n            <div class=\\\"tile is-parent\\\">\\n                <article class=\\\"tile is-child notification is-info\\\">\\n                  {{ contato.nome }}  {{ contato.email }}  {{ contato.telefone }}  {{ contato.skype }}\\n                </article>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n   \\n  \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"button is-danger\\\" [disabled]=\\\"clienteForm.valid\\\">Excluir</button>\\n        \\n  \\n    </form>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, NgForm, FormControl, FormBuilder } from '@angular/forms';\nimport { Contato } from '../cliente-novo/cliente-model';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ClienteService } from '../cliente.service';\nimport { ActivatedRoute, Router } from '../../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-cliente-show',\n  templateUrl: './cliente-show.component.html',\n  styleUrls: ['./cliente-show.component.css']\n})\nexport class ClienteShowComponent implements OnInit {\n  usuario: any;\n  errors: any;\n  cliente = {\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: 0,\n    prazoPgto: 0,\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n  contato = new Contato;\n\n  contatosArray = [];\n  flContato: Boolean = false;\n  clienteForm = new FormGroup({\n      cnpj: new FormControl(),\n      razaoSocial: new FormControl(),\n      nomeFantasia: new FormControl(),\n      endereco: new FormControl(),\n      valorHH: new FormControl(),\n      prazoPgto: new FormControl(),\n      contatos: new FormControl()\n  });\n\n  contatosCliente=[\n    {\n      'brand': \"nome\"\n    },\n    {\n      'brand': \"email\"\n    },\n    {\n      'brand': \"telefone\"\n    },\n    {\n      'brand': \"skype\"\n    }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoEditComponent > usuario: ', this.usuario);\n    this.obterCliente(this._route.snapshot.params['id']);\n  }\n  \n  // ngOnChanges() {\n  //   this.rebuildForm();\n  // }\n\n  // rebuildForm() {\n  //   this.clienteForm.reset({\n  //     // cnpj: this.contato.nome,\n  //     // contatos: this.cliente.contatos[1] || new Contato()\n  //   });\n  //   // this.setContatos(this.cliente.contatos);\n  // }\n\n  createForm(contatosCliente) {\n    var arr = [];\n    for (var i=0; i < contatosCliente.length; i++ ) {\n      arr.push(this.buildContato(contatosCliente[i]));\n    }\n    return this.clienteForm = this.formBuilder.group({\n      cnpj: this.cliente.cnpj,\n      razaoSocial: this.cliente.razaoSocial,\n      nomeFantasia: this.cliente.nomeFantasia,\n      endereco: this.cliente.endereco,\n      valorHH: this.cliente.valorHH,\n      prazoPgto: this.cliente.prazoPgto, \n      contatos: this.formBuilder.array(arr)\n      })\n  }\n\n  obterCliente(id){\n    console.log('ClienteEditComponent > obterCliente'); \n      const observable = this._clienteService.obterClienteById(id);\n      observable.subscribe(\n        (response) => {\n          this.cliente = response.json();\n          this.createForm(this.contatosCliente);\n        },\n        (err) => { },\n          () => { }\n      )\n  }\n\n  buildContato(product): FormGroup {\n    return this.formBuilder.group({\n      title: [product.brand],\n      value: ['']\n    });\n  }\n\n  excluirCliente(clienteForm: NgForm) {\n    console.log('ClienteEditComponent > excluirCliente', clienteForm); \n  }\n\n  // editarCliente(clienteForm: NgForm) {\n  //   if (!this.flContato) { this._router.navigate(['/cliente/edit']) };\n  //   console.log('ClienteEditarComponent > editarCliente(clienteForm)', clienteForm); \n  //   this._clienteService.editarCliente(this.cliente['_id'], clienteForm.value)\n  //     .subscribe(observable => {\n  //       if(observable.json().errors) {\n  //         this.errors = observable.json().errors;\n  //         console.log('Algum erro ocorreu editando cliente ', this.errors);\n  //         this._router.navigate(['/cliente/edit/' + this.cliente['_id'] ]);\n  //       } else {\n  //         this._router.navigate(['/clientes']);\n  //       }\n  //     },\n  //     err => {\n  //       throw err;\n  //     }\n  //   );\n  //   this.createForm(this.contatosCliente);\n  // }\n\n  cancel() {\n    this._router.navigate(['/clientes']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class ClienteService {\n  clientes: any;\n\n  constructor(private _http: Http) { }\n\n  obterTodos() {\n    console.log('ClienteService > obterTodos()');\n    return this._http.get('/clientes');\n  }\n\n  criarCliente(cliente) {\n    console.log('ClienteService > criarCliente(cliente)', cliente);\n    return this._http.post('cliente/novo', cliente);\n  }\n\n  obterClienteById(id) {\n    console.log('ClienteService > obterClienteById', id);\n    return this._http.get('/cliente/' + id );\n  }\n\n  editarCliente(id, cliente) {\n    console.log('ClienteService > editarCliente(cliente)', id, cliente);\n    return this._http.put('cliente/edit/' + id, cliente);\n  }\n\n  // encerrarProjeto(id) {\n  //   this._http.put('/projeto/encerrar,' + id, this.projeto).subscribe(\n  //     (res) => {\n  //       console.log('SUCESSO no encerramento do projeto: ', res.json());\n  //       this.projeto(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERRO no encerramento do projeto: ', err);\n  //     }\n  //   );\n  // }\n\n\n  \n  // getOne(recipie, id) {\n  //   this._http.get('/recipie').subscribe(\n  //   id => id.json());\n  //   console.log('services-recipie in getOne:', id)\n  // }\n\n\n\n  // updateRecipie(ingredients, callback) {\n  //   this._http.put('/recipie/update', ingredients).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS updating recipie: ', res.json());\n  //       callback(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERROR updating recipie: ', err);\n  //     }\n  //   );\n  // }\n\n  // likeRecipie(id, callback) {\n  //   this._http.put('/recipie/like/' + id, this.recipie ).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS Like recipie: ', res.json());\n  //       res.json();\n  //     },\n  //     (err) => {\n  //       console.log('ERROR like recipie: ', err);\n  //     }\n  //   );\n  // }\n\n\n\n  \n}\n\n","module.exports = \"\"","module.exports = \"<p>\\n  financeiro em construção!!!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-financeiro',\n  templateUrl: './financeiro.component.html',\n  styleUrls: ['./financeiro.component.css']\n})\nexport class FinanceiroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, ErrorHandler, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class GlobalErrorHandlerService implements ErrorHandler {\n\n  constructor(private injector: Injector) { }    \n\n  handleError(error: any) {\n    let router = this.injector.get(Router);\n    console.log('URL: ' + router.url);\n    \n    if (error instanceof HttpErrorResponse) {\n        //Backend returns unsuccessful response codes such as 404, 500 etc.\t\t\t\t  \n        console.error('Backend returned status code: ', error.status);\n        console.error('Response body:', error.message);          \t  \n    } else {\n        //A client-side or network error occurred.\t          \n        console.error('Um erro ocorreu:', error.message);          \n    }     \n    router.navigate(['/error']);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n        <h2>Ocorreu um erro...</h2>\n    `\n})\nexport class GlobalErrorComponent {\n}","module.exports = \"\"","module.exports = \"<section class=\\\"hero is-info is-fullheight\\\">\\n  <div class=\\\"hero-body\\\">\\n      <div class=\\\"container has-text-centered\\\">\\n          <div class=\\\"column is-4 is-offset-4\\\">\\n              <!-- <h3 class=\\\"title has-text-grey\\\">Apontador!</h3>\\n              <p class=\\\"subtitle has-text-grey\\\">Digite seus dados para entrar</p> -->\\n              <div class=\\\"box\\\">\\n                  <figure class=\\\"image is-480x480\\\">\\n                      <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n                  </figure>\\n                  <div class=\\\"errors\\\">\\n                    <p *ngIf=\\\"errors.email\\\" >  {{ errors.email.message }} </p>\\n                    <p *ngIf=\\\"errors.senha\\\"> {{ errors.senha.message }} </p>        \\n                  </div>\\n                  <form name=\\\"form\\\" (submit)=\\\"login()\\\" #formData=\\\"ngForm\\\"> \\n                      <div class=\\\"field\\\">\\n                          <div class=\\\"control\\\">\\n                              <input class=\\\"input is-large\\\"\\n                               type=\\\"email\\\" \\n                               placeholder=\\\"Seu Email\\\" \\n                               autofocus=\\\"\\\"\\n                               name=\\\"email\\\" \\n                               required\\n                               [(ngModel)]=\\\"usuario.email\\\" \\n                               #email=\\\"ngModel\\\"  \\n                              />\\n                          </div>\\n                      </div>\\n\\n                      <div class=\\\"field\\\">\\n                          <div class=\\\"control\\\">\\n                              <input class=\\\"input is-large\\\" \\n                              type=\\\"password\\\" \\n                              placeholder=\\\"Sua Senha\\\"\\n                              name=\\\"senha\\\" \\n                              required\\n                              [(ngModel)]=\\\"usuario.senha\\\" \\n                              #senha=\\\"ngModel\\\" \\n                             />\\n                          </div>\\n                      </div>\\n                      <div class=\\\"field\\\">\\n                          <label class=\\\"checkbox\\\">\\n                              <input type=\\\"checkbox\\\">\\n                                  Lembrar a Senha\\n                          </label>\\n                      </div>\\n                  <button type=\\\"submit\\\" class=\\\"button is-block is-info is-large is-fullwidth\\\" [disabled]=\\\"formData.invalid\\\">Entrar</button>\\n                  </form>\\n              </div>\\n              <p class=\\\"has-text-grey\\\">\\n                \\n                  <a href=\\\"../\\\">Esqueci minha Senha</a> &nbsp;·&nbsp;\\n                  <a href=\\\"../\\\">Ajuda?</a>\\n              </p>\\n          </div>\\n      </div>\\n  </div>\\n</section>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from '../usuario/usuario.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public usuario = {\n    email: '',\n    senha: ''\n  };\n  errors: any = {}\n  \n  constructor(\n    private router: Router,\n    private _usuarioService: UsuarioService) {}\n\n\n  ngOnInit() {\n    this.usuario = { email: \"\", senha: \"\"};\n    console.log('usuario logado? ', this._usuarioService.getUserLoggedIn());\n    // if (this.usuario.senha === \"torrenegra123\") {\n    //   this.errors = this.errors.senha.message = 'Primeiro acesso, informar sua nova senha';\n    // }\n  }\n\n  login() {\n    this._usuarioService.login(this.usuario, (res) => { \n      if(res.errors) {\n        console.log('ERRO em login');\n        this.errors = res.errors;\n        this.router.navigate(['/']);\n      } else {\n        console.log('SUCESSO em login');\n        if (this.usuario.email == \"admin@torrenegra.com.br\") {\n          this.router.navigate(['/projetos']);\n        } else {\n          this.router.navigate(['/apontamentos']);\n        }\n      }\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport {MatTableModule} from '@angular/material/table';\n\n@NgModule({\n    imports: [\n        MatTableModule\n\n    ],\n    exports: [\n        MatTableModule\n    ],\n  })\n  export class MaterialModule { }","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  template: `<h2>Pagina não encontrada!</h2>\n             <div>\n                <button [routerLink]=\"['/projetos']\">Retornar</button>\n\t     </div>\n        `\n})\nexport class PaginaNaoEncontradaComponent {\n\tconstructor(private location: Location) { }\n\tgoBack(): void {\n          this.location.back();\n        }\n}","module.exports = \"button {\\n    margin: 10px;\\n}\"","module.exports = \"<h3 mat-dialog-title>Encerrar Projeto </h3>\\n<h4>{{ data.codigo }} {{ data.descricao }}</h4>\\n<br><br>\\n<div mat-dialog-content>\\n  <p>Confirma? </p>\\n</div>\\n<br><br>\\n<div mat-dialog-actions>\\n  <button class=\\\"btn btn-danger btn-sm\\\" mat-button (click)=\\\"onNoClick()\\\"> Não obrigado! </button><br><br>\\n  <button class=\\\"btn btn-danger btn-sm\\\" mat-button (click)=\\\"encerrarProjeto(data.id)\\\" cdkFocusInitial> Ok </button>\\n</div>\"","module.exports = \"button {\\n    margin: 10px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <figure class=\\\"image is-128x128\\\">\\n        <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n    </figure> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.descricao\\\" >  {{ errors['descricao'].message }} </p>\\n      <p *ngIf=\\\"errors.cliente\\\" >  {{ errors['cliente'].message }} </p>\\n      <p *ngIf=\\\"errors.pedido\\\" >  {{ errors['pedido'].message }} </p>   \\n      <p *ngIf=\\\"errors.horasPLC\\\" >  {{ errors['horasPLC'].message }} </p>       \\n      <p *ngIf=\\\"errors.horasIHM\\\" >  {{ errors['horasIHM'].message }} </p>  \\n      <p *ngIf=\\\"errors.valorTerceiros\\\" >  {{ errors['valorTerceiros'].message }} </p>            \\n      <p *ngIf=\\\"errors.valorMateriais\\\" >  {{ errors['valorMateriais'].message }} </p>       \\n      <p *ngIf=\\\"errors.valorViagens\\\" >  {{ errors['valorViagens'].message }} </p>       \\n    </div>\\n\\n    <form (submit)='editarProjeto()' #projForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Código</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p style=\\\"margin-top: 7px;\\\" class=\\\"control\\\">\\n              {{ projeto.codigo }}\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Descrição</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"descricao\\\" \\n              minlength=8\\n              required\\n              [(ngModel)]=\\\"projeto.descricao\\\"\\n              #descricao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Cliente</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <!-- <p style=\\\"margin-top: 6px\\\" > -->\\n              <!-- {{ projeto.nomeFantasiaCliente }} -->\\n            <!-- </p> -->\\n            <div class=\\\"select is-multiple control\\\">\\n              <select name=\\\"_clienteId\\\" [(ngModel)]=\\\"clienteSelecionado\\\" required>\\n                  <option *ngFor=\\\"let c of clientes\\\" [value]=\\\"c._id\\\">\\n                    {{ c.nomeFantasia }}   \\n                  </option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Pedido</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"pedido\\\" \\n              required\\n              [(ngModel)]=\\\"projeto.pedido\\\"\\n              #pedido=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Horas PLC</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"horasPLC\\\" \\n              [(ngModel)]=\\\"projeto.horasPLC\\\"\\n              #horasPLC=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!horasPLC.valid\\\" class=\\\"purple\\\">horasPLC precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Horas IHM</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"horasIHM\\\" \\n              [(ngModel)]=\\\"projeto.horasIHM\\\"\\n              #descricao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!horasIHM.valid\\\" class=\\\"purple\\\">horasIHM do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Valor Terceiros</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorTerceiros\\\" \\n              [(ngModel)]=\\\"projeto.valorTerceiros\\\"\\n              #valorTerceiros=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!valorTerceiros.valid\\\" class=\\\"purple\\\">valorTerceiros precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Materiais</label>\\n        </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input \\\" \\n                type=\\\"text\\\" \\n                name=\\\"valorMateriais\\\" \\n                [(ngModel)]=\\\"projeto.valorMateriais\\\"\\n                #valorMateriais=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Viagens</label>\\n        </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input \\\" \\n                type=\\\"text\\\" \\n                name=\\\"valorViagens\\\" \\n                [(ngModel)]=\\\"projeto.valorViagens\\\"\\n                #valorViagens=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/projetos']\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"projForm.invalid\\\">Confirma</button>\\n    \\n    </form>\\n  </div>  \"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { NgForm } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ProjetoService } from '../projeto.service';\nimport { ClienteService } from '../../cliente/cliente.service';\n\n@Component({\n  selector: 'app-projeto-edit',\n  templateUrl: './projeto-edit.component.html',\n  styleUrls: ['./projeto-edit.component.css']\n})\nexport class ProjetoEditComponent implements OnInit {\n  usuario: any;\n  errors: any;\n  projeto = {\n    codigo: \"\",\n    descricao: \"\",\n    _clienteId:  \"\",\n    nomeFantasiaCliente: \"\",\n    pedido:  \"\",\n    horasPLC:  0,\n    horasIHM:  0,\n    valorTerceiros:  0,\n    valorMateriais:  0,\n    valorViagens:  0\n  };\n  clientes: any;\n  cliente = {\n    _id: \"\",\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: 0,\n    prazoPgto: 0,\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n  clienteSelecionado: any;\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _clienteService: ClienteService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoEditComponent > usuario: ', this.usuario);\n    this.obterProjeto(this._route.snapshot.params['id']);\n  }\n\n  obterProjeto(id){\n    console.log('ProjetoEditComponent > obterProjeto'); \n      const observable = this._projetoService.obterProjetoById(id);\n      observable.subscribe(\n        (response) => {\n          this.projeto = response.json();\n          this.obterClienteNomeFantasia(this.projeto._clienteId);\n          this.obterClientes();\n        },\n        (err) => { },\n          () => { }\n      )\n  }\n\n  obterClienteNomeFantasia(id) {\n    console.log('ProjetoEditComponent > obterCliente()')\n    const clienteObservable = this._clienteService.obterClienteById(id);\n    clienteObservable.subscribe(\n      (cliente) => { \n        this.cliente = cliente.json();\n        this.projeto.nomeFantasiaCliente = this.cliente.nomeFantasia;\n        this.clienteSelecionado = this.cliente._id;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterClientes() {\n    console.log('ProjetoEditComponent  > obterClienteList()')\n    const clienteObservable = this._clienteService.obterTodos();\n    clienteObservable.subscribe(\n      (clientes) => { \n        console.log('clientes in obterClientes ProjetoEditComponent:', clientes.json());\n        this.clientes = clientes.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  editarProjeto() {\n      console.log('ProjetoEditComponent > editarProjeto', this.projeto);\n      this.projeto._clienteId = this.clienteSelecionado; \n      this._projetoService.editarProjeto(this.projeto)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu editando projeto ', this.errors);\n          this._router.navigate(['/projeto/edit/', this.projeto['_id']]);\n        } else {\n          this._router.navigate(['/projetos']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n  }\n\n\n}\n","module.exports = \".right {\\n    text-align: right;\\n}\\np {\\n    font-size: 0.9em;\\n}\\n.errors{\\n    width: inherit;\\n    height: 40px;\\n    display: block;\\n    margin: 0px auto;\\n    color: red;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n  <!-- <figure class=\\\"image is-128x128\\\">\\n      <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</figure> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle  active\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Cadastro\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/usuarios']\\\">Usuário</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/clientes']\\\">Cliente</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/apontamentos']\\\">Apontamento</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/financeiro']\\\">Financeiro</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Relatório\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"\\\">Financeiro</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Total de horas por projeto</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Total de horas por funcionário</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Custo por pedido</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Projetos encerrados</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Buscar</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <nav class=\\\"level\\\">\\n    <div class=\\\"level-left\\\">\\n        <div class=\\\"title is-4\\\">Projetos</div> \\n    </div>\\n    <div class=\\\"level-right\\\">\\n        <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/projeto/novo']\\\">Novo projeto</button>\\n    </div> \\n  </nav>\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n              <tr class=\\\"table-primary d-flex\\\">\\n                <th class=\\\"col-1.5\\\">Código</th>\\n                <th class=\\\"col-3\\\">Descrição</th>\\n                <th class=\\\"col-2\\\">Cliente</th>\\n                <th class=\\\"col-2\\\">Pedido</th>\\n                <th class=\\\"col-1\\\">Ação</th>\\n                <th class=\\\"col-1\\\"> </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                <td class=\\\"col-1.5\\\">{{ projeto['codigo'] }}</td>\\n                <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                <td class=\\\"col-2\\\">{{ projeto['nomeFantasiaCliente'] }}</td>\\n                <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                <td class=\\\"col-1\\\"><button mat-button (click)=\\\"openDialog(projeto)\\\" class=\\\"button is-danger\\\" [disabled]=\\\"projeto['encerrado']\\\">Encerrar</button></td>\\n              </tr>\\n            </tbody>\\n          </table> \\n        </div>    \\n      </div>\\n    </div>\\n  </article>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../projeto.service';\nimport { ClienteService } from '../../cliente/cliente.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-projeto-list',\n  templateUrl: './projeto-list.component.html',\n  styleUrls: ['./projeto-list.component.css']\n})\nexport class ProjetoListComponent implements OnInit {\n  usuario: any;\n  projetos = [{\n    codigo: \"\",\n    descricao: \"\",\n    _clienteId: \"\",\n    nomeFantasiaCliente: \"\",\n    pedido: \"\"\n  }];\n  cliente = {\n    _id: \"\",\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: 0,\n    prazoPgto: 0,\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n\n  constructor(\n    private _projetoService: ProjetoService,\n    private _clienteService: ClienteService,\n    public dialog: MatDialog\n  ) { } \n\n  ngOnInit() {\n    this.obterListaProjeto();\n  }\n\n  obterListaProjeto() {\n    console.log('ProjetoListComponent > obterListaProjeto()')\n    const projetoObservable = this._projetoService.obterTodos();\n    projetoObservable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n        console.log('projetos in List:', this.projetos);\n        for (var i = 0; i < this.projetos.length; i++) {\n          this.obterCliente(this.projetos[i]._clienteId, i);\n        }\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterCliente(id, i) {\n    console.log('ProjetoListComponent > obterCliente()')\n    const clienteObservable = this._clienteService.obterClienteById(id);\n    clienteObservable.subscribe(\n      (cliente) => { \n        this.cliente = cliente.json();\n        this.projetos[i].nomeFantasiaCliente = this.cliente.nomeFantasia;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  openDialog(projeto): void {\n    console.log('ProjetoListComponent > openDialog(projeto) > encerrar()')\n    let dialogRef = this.dialog.open(Dialog, {\n      width: '250px',\n      data: {\n        id: projeto._id,\n        codigo: projeto.codigo,\n        descricao: projeto.descricao,\n        usuario: this.usuario\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n        console.log('The dialog was closed');\n        this.obterListaProjeto();\n    });\n  }\n\n\n\n}\n\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: '../popup/popup.component.html',\n  styleUrls: ['../popup/popup.component.css']\n})\n\nexport class Dialog {\n\n  constructor(private _projetoService: ProjetoService, \n    private _router: Router, \n    public dialogRef: MatDialogRef<Dialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  encerrarProjeto(id) {\n    console.log('Dialog >  encerrarProjeto(id) ', id)\n    const dialogObservable = this._projetoService.encerrarProjeto(id);\n    dialogObservable.subscribe(\n      (res) => { \n        console.log('The dialog called encerrar projeto!', res);\n        this.dialogRef.close();\n      },\n      (err) => { },\n        () => { }\n    )\n    // console.log('The dialog called delete projeto!');\n    // this.dialogRef.close();\n  }\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\nselect {\\n    margin-bottom: 15px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 60px;\\n}\\n.errors {\\n    color: brown;\\n}\\n\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <figure class=\\\"image is-128x128\\\">\\n        <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n    </figure> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n\\n    Dados básicos:\\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.codigo\\\" >  {{ errors['codigo'].message }} </p>\\n      <p *ngIf=\\\"errors.descricao\\\" >  {{ errors['descricao'].message }} </p>\\n      <p *ngIf=\\\"errors.cliente\\\" >  {{ errors['cliente'].message }} </p>\\n      <p *ngIf=\\\"errors.pedido\\\" >  {{ errors['pedido'].message }} </p>   \\n      <p *ngIf=\\\"errors.horasPLC\\\" >  {{ errors['horasPLC'].message }} </p>       \\n    </div>\\n\\n    <form (submit)='criarProjeto(projCreateForm)' #projCreateForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Código</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input is-focused\\\" \\n              type=\\\"text\\\" \\n              name=\\\"codigo\\\" \\n              minlength=4\\n              required\\n              [(ngModel)]=\\\"projeto.codigo\\\"\\n              #codigo=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.codigo.valid\\\" class=\\\"purple\\\">* Código precisar ter 7 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Descrição</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"descricao\\\" \\n            minlength=8\\n            required\\n            [(ngModel)]=\\\"projeto.descricao\\\"\\n            #descricao=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Cliente</label>\\n      </div>\\n\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"select is-multiple control\\\">\\n            <select name=\\\"_clienteId\\\" [(ngModel)]=\\\"clienteSelecionado\\\" required>\\n                <option *ngFor=\\\"let c of clientes\\\" [value]=\\\"c._id\\\">\\n                  {{ c.nomeFantasia }}\\n                </option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"cliente\\\" \\n            minlength=4\\n            required\\n            [(ngModel)]=\\\"projeto.cliente\\\"\\n            #cliente=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div> -->\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Pedido</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\" \\n            name=\\\"pedido\\\" \\n            required\\n            [(ngModel)]=\\\"projeto.pedido\\\"\\n            #pedido=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n  Dados financeiros:\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Horas PLC</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"horasPLC\\\" \\n            [(ngModel)]=\\\"projeto.horasPLC\\\"\\n            #horasPLC=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!horasPLC.valid\\\" class=\\\"purple\\\">horasPLC precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Horas IHM</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"horasIHM\\\" \\n            [(ngModel)]=\\\"projeto.horasIHM\\\"\\n            #descricao=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!horasIHM.valid\\\" class=\\\"purple\\\">horasIHM do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Terceiros</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"valorTerceiros\\\" \\n            [(ngModel)]=\\\"projeto.valorTerceiros\\\"\\n            #valorTerceiros=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!valorTerceiros.valid\\\" class=\\\"purple\\\">valorTerceiros precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Valor Materiais</label>\\n      </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorMateriais\\\" \\n              [(ngModel)]=\\\"projeto.valorMateriais\\\"\\n              #valorMateriais=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Valor Viagens</label>\\n      </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorViagens\\\" \\n              [(ngModel)]=\\\"projeto.valorViagens\\\"\\n              #valorViagens=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n      </div>\\n    </div>\\n  \\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/projetos']\\\">Cancela</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"projCreateForm.invalid\\\">Confirma</button>\\n  \\n    </form>\\n  </div>  \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ProjetoService } from '../projeto.service';\nimport { ClienteService } from '../../cliente/cliente.service';\n\n@Component({\n  selector: 'app-projeto-novo',\n  templateUrl: './projeto-novo.component.html',\n  styleUrls: ['./projeto-novo.component.css']\n})\nexport class ProjetoNovoComponent implements OnInit {\n  usuario: any;\n  clientes: any;\n  errors: any;\n  projetos: any;\n  projeto = {\n    codigo: \"\",\n    descricao: \"\",\n    cliente:  \"\",\n    pedido:  \"\",\n    horasPLC:  0,\n    horasIHM:  0,\n    valorTerceiros:  0,\n    valorMateriais:  0,\n    valorViagens:  0\n  };\n  clienteSelecionado: Number;\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _clienteService: ClienteService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoNovoComponent > ', this.usuario);\n    this.obterListaCliente();\n  }\n\n  obterListaCliente() {\n    console.log('ProjetoNovoComponent > obterListaCliente()')\n    const cliObservable = this._clienteService.obterTodos();\n    cliObservable.subscribe(\n      (clientes) => { \n        this.clientes = clientes.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  criarProjeto(projForm: NgForm) {\n    console.log('ProjetoNovoComponent > novoProjeto(nProjForm)', projForm); \n    this._projetoService.criarProjeto(projForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu salvando projeto ', this.errors);\n          this._router.navigate(['/projeto/novo']);\n        } else {\n          this._router.navigate(['/projetos']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    projForm.resetForm();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <figure class=\\\"image is-128x128\\\">\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n  </figure> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"projeto/list\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-1\\\">Código</th>\\n                  <th class=\\\"col-3\\\">Descrição</th>\\n                  <th class=\\\"col-2\\\">Cliente</th>\\n                  <th class=\\\"col-2\\\">Pedido</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <th class=\\\"col-1\\\"> </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                  <td class=\\\"col-1\\\">{{ projeto['codigo'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['cliente'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/show', projeto['_id'] ]\\\"  class=\\\"button is-danger\\\">Encerrar</button></td>\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"(click)=\\\"encerrar()\\\">Confirma</button>\\n\\n        <!-- <div class=\\\"errors\\\">\\n          <p *ngIf=\\\"errors.name\\\" >  {{ errors.name.message }} </p>\\n          <p *ngIf=\\\"errors.cuisine\\\"> {{ errors.cuisine.message }} </p>        \\n        </div> -->\\n</div>  \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../projeto.service';\n\n@Component({\n  selector: 'app-projeto-show',\n  templateUrl: './projeto-show.component.html',\n  styleUrls: ['./projeto-show.component.css']\n})\nexport class ProjetoShowComponent implements OnInit {\n  projeto: any;\n\n  constructor(\n    private _router: Router,\n    private _projetoService: ProjetoService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // encerrar() {\n  //   console.log('projeto em showProjeto: ', this.projeto); \n  //   this._projetoService.encerrarProjeto(this.projeto, (res) => {\n  //     this._router.navigate(['projeto/list', res]);\n  //   });\n  // }\n\n  cancel() {\n    this._router.navigate(['/projeto/list']);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class ProjetoService {\n  projeto: any;\n  projetos: any;\n  apontamentos: any;\n\n  constructor(private _http: Http) { }\n\n  obterApontamentos() {\n    console.log('ProjetoService > obterApontamentos()');\n    return this._http.get('/apontamentos');\n\n  }\n\n  obterTodos() {\n    console.log('ProjetoService > obterTodos()');\n    return this._http.get('/projetos');\n  }\n\n  criarProjeto(projeto) {\n    console.log('ProjetoService > criarProjeto(projeto)', projeto);\n    return this._http.post('projeto/novo', projeto);\n  }\n\n  editarProjeto(projeto) {\n    console.log('ProjetoService > editarProjeto(projeto)', projeto);\n    return this._http.put('projeto/edit/' + projeto['_id'], projeto);\n  }\n\n  apontamentoNovo(id, apontamento) {\n    console.log('ProjetoService > apontamentoNovo(id, apontamento)', id, apontamento);\n    return this._http.put('apontamento/novo/' + id, apontamento);\n  }\n\n  encerrarProjeto(id) {\n    console.log('ProjetoService > encerrarProjeto(id)', id);\n    return this._http.put('/projeto/encerrar/' + id, this.projeto);\n  }\n\n  obterProjetoById(id) {\n    console.log('ProjetoService > obterProjetoById', id);\n    return this._http.get('/projeto/' + id );\n  }\n\n  encerrarApontamento(id) {\n    console.log('ProjetoService > encerrarApontamento(id)', id);\n    return this._http.put('/apontamento/encerrar/' + id, this.projeto);\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<p>\\n  relatorio-financeiro works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-relatorio-financeiro',\n  templateUrl: './relatorio-financeiro.component.html',\n  styleUrls: ['./relatorio-financeiro.component.css']\n})\nexport class RelatorioFinanceiroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\nselect {\\n    margin-bottom: 15px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 60px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <figure class=\\\"image is-128x128\\\">\\n      <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n    </figure> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n\\n      Dados do usuário:\\n\\n      <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n        <p *ngIf=\\\"errors.nome\\\" >  {{ errors['nome'].message }} </p>\\n        <p *ngIf=\\\"errors.email\\\" >  {{ errors['email'].message }} </p>\\n        <p *ngIf=\\\"errors.funcao\\\" >  {{ errors['funcao'].message }} </p>\\n        <p *ngIf=\\\"errors.custoHora\\\" >  {{ errors['custoHora'].message }} </p>       \\n      </div>\\n\\n    <form (submit)='editarUsuario()' #userForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Nome</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                  <input \\n                  class=\\\"input\\\" \\n                  type=\\\"text\\\" \\n                  name=\\\"nome\\\" \\n                  minlength=4\\n                  required\\n                  [(ngModel)]=\\\"usuario.nome\\\"\\n                  #nome=\\\"ngModel\\\"\\n                  />\\n                </p>\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">E-mail</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"email\\\" \\n              required\\n              [(ngModel)]=\\\"usuario.email\\\"\\n              #email=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Função</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"funcao\\\" \\n              minlength=4\\n              required\\n              [(ngModel)]=\\\"usuario.funcao\\\"\\n              #funcao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Custo/hora</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"custoHora\\\" \\n              required\\n              [(ngModel)]=\\\"usuario.custoHora\\\"\\n              #custoHora=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n          <label class=\\\"checkbox\\\">\\n              <input \\n              type=\\\"checkbox\\\"\\n              name=\\\"admin\\\"\\n              [(ngModel)]=\\\"usuario.admin\\\">\\n            &nbsp; Adminstrador  \\n          </label>\\n        </div>\\n\\n    \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/usuarios']\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"userForm.invalid\\\">Confirma</button>\\n    \\n    </form>\\n  </div>  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-usuario-edit',\n  templateUrl: './usuario-edit.component.html',\n  styleUrls: ['./usuario-edit.component.css']\n})\nexport class UsuarioEditComponent implements OnInit {\n  usuario = { \n    nome: \"\",\n    email: \"\",\n    funcao: \"\",\n    custoHora: 0,\n    admin: false\n  };\n  errors: any;\n  \n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoEditComponent > usuario: ', this.usuario);\n    this.obterUsuario(this._route.snapshot.params['id']);\n  }\n\n  obterUsuario(id){\n    console.log('UsuarioEditComponent > obterUsuario'); \n    const observable = this._usuarioService.obterUsuarioById(id);\n    observable.subscribe((response) => {\n      this.usuario = response.json();\n    });\n  }\n\n  editarUsuario() {\n    console.log('UsuarioEditComponent > obterUsuario()', this.usuario); \n    this._usuarioService.editarUsuario(this.usuario)\n    .subscribe(observable => {\n      if(observable.json().errors) {\n        this.errors = observable.json().errors;\n        console.log('Algum erro ocorreu editando usuario ', this.errors);\n        this._router.navigate(['/usuario/edit/', this.usuario['_id']]);\n      } else {\n        this._router.navigate(['/usuarios']);\n      }\n    },\n    err => {\n      throw err;\n    }\n  );\n}\n\n\n}\n","module.exports = \"img {\\n    max-width: 30%;\\n    height: auto;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <figure class=\\\"image is-128x128\\\">\\n      <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n    </figure> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n      <nav class=\\\"level\\\">\\n        <div class=\\\"level-left\\\">\\n            <div class=\\\"title is-4\\\">Usuário</div> \\n        </div>\\n        <div class=\\\"level-right\\\">\\n            <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/usuario/novo']\\\">Novo usuário</button>\\n        </div> \\n      </nav>\\n    <article class=\\\"media\\\">\\n      <div class=\\\"media-content\\\">\\n        <div class=\\\"content\\\">\\n  \\n          <br>\\n          <div id=\\\"scroll\\\">\\n            <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n              <thead>\\n                  <tr class=\\\"table-primary d-flex\\\">\\n                    <th class=\\\"col-2\\\">Nome</th>\\n                    <th class=\\\"col-3\\\">E-mail</th>\\n                    <th class=\\\"col-2\\\">Função</th>\\n                    <th class=\\\"col-1\\\">Custo/hr</th>\\n                    <th class=\\\"col-1\\\">Admin</th>\\n                    <th class=\\\"col-1\\\">Ação</th>\\n                    <th class=\\\"col-1\\\"> </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let u  of usuarios\\\" class=\\\"d-flex\\\">\\n                    <td class=\\\"col-2\\\">{{ u['nome'] }}</td>\\n                    <td class=\\\"col-3\\\">{{ u['email'] }}</td>\\n                    <td class=\\\"col-2\\\">{{ u['funcao'] }}</td>\\n                    <td class=\\\"col-1\\\">{{ u['custoHora'] | number : '1.2-2' }}</td>\\n                    <td class=\\\"col-1\\\">\\n                    <img [src]=\\\"u['admin'] ? frontPath : backPath\\\"></td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/usuario/edit/', u['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/usuario/show', u['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td>\\n                  </tr>\\n                </tbody>\\n              </table> \\n            </div>    \\n          </div>\\n        </div>\\n      </article>\\n  </div>\\n    \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-usuario-list',\n  templateUrl: './usuario-list.component.html',\n  styleUrls: ['./usuario-list.component.css']\n})\nexport class UsuarioListComponent implements OnInit {\n\n  usuarios: any;\n  frontPath:string = \"../../assets/images/check.png\";\n\n  backPath:string =  \"\";\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.obterListaUsuario();\n  }\n\n  obterListaUsuario() {\n    console.log('ProjetoListComponent > obterListaUsuario()')\n    const usuarioObservable = this._usuarioService.obterTodos();\n    usuarioObservable.subscribe(\n      (usuarios) => { \n        this.usuarios = usuarios.json();\n        console.log('usuarios in UsuariosListComponent:', this.usuarios);\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\nselect {\\n    margin-bottom: 15px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 60px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <figure class=\\\"image is-128x128\\\">\\n      <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n    </figure> -->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/usuarios']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n  \\n\\n  Dados do usuário:\\n\\n  <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n    <p *ngIf=\\\"errors.nome\\\" >  {{ errors['nome'].message }} </p>\\n    <p *ngIf=\\\"errors.email\\\" >  {{ errors['email'].message }} </p>\\n    <p *ngIf=\\\"errors.funcao\\\" >  {{ errors['funcao'].message }} </p>\\n    <p *ngIf=\\\"errors.custoHora\\\" >  {{ errors['custoHora'].message }} </p>       \\n  </div>\\n\\n  <form (submit)=\\\"criarUsuario(userForm)\\\" #userForm='ngForm'>\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Nome</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input is-focused\\\" \\n            type=\\\"text\\\" \\n            name=\\\"nome\\\" \\n            minlength=4\\n            required\\n            [(ngModel)]=\\\"usuario.nome\\\"\\n            #nome=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!codigo.valid\\\" class=\\\"purple\\\">Código precisar ter no mínimo 4 caracteres!</div> -->\\n   \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">e-mail</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\" \\n            name=\\\"email\\\" \\n            required\\n            pattern=\\\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n            [(ngModel)]=\\\"usuario.email\\\"\\n            #email=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n<!-- <div *ngIf=\\\"!codigo.valid\\\" class=\\\"purple\\\">Código precisar ter no mínimo 4 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Função</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"funcao\\\" \\n          minlength=4\\n          required\\n          [(ngModel)]=\\\"usuario.funcao\\\"\\n          #funcao=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!cliente.valid\\\" class=\\\"purple\\\">Função precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n  \\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Custo hora</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"custoHora\\\" \\n          required\\n          [(ngModel)]=\\\"usuario.custoHora\\\"\\n          #custoHora=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"field is-horizontal\\\">\\n    <label class=\\\"checkbox\\\">\\n        <input \\n        type=\\\"checkbox\\\"\\n        name=\\\"admin\\\"\\n        [(ngModel)]=\\\"usuario.admin\\\">\\n       &nbsp; Administrador  \\n    </label>\\n  </div>\\n  \\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"userForm.invalid\\\">Confirma</button>\\n  \\n  </form>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-usuario-novo',\n  templateUrl: './usuario-novo.component.html',\n  styleUrls: ['./usuario-novo.component.css']\n})\nexport class UsuarioNovoComponent implements OnInit {\n  usuarioLogado: any;\n  usuario = { \n    nome: \"\",\n    email: \"\",\n    funcao: \"\",\n    custoHora: 0,\n    admin: false\n  };\n  errors: any;\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.usuario;\n    console.log('UsuarioNovoComponent > ', this.usuarioLogado);\n  }\n\n  criarUsuario(userForm: NgForm) {\n  console.log('UsuarioNovoComponent > criarUsuario(userForm)', userForm); \n  this._usuarioService.criarUsuario(userForm.value)\n    .subscribe(observable => {\n      if(observable.json().errors) {\n        this.errors = observable.json().errors;\n        console.log('Algum erro ocorreu salvando usuario ', this.errors);\n        this._router.navigate(['/usuario/novo']);\n      } else {\n        this._router.navigate(['/usuarios']);\n      }\n    },\n      err => {\n        throw err;\n      }\n    );\n    userForm.resetForm();\n  }\n\n  cancel(){\n    this._router.navigate(['/usuarios']);\n  }\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\nselect {\\n    margin-bottom: 15px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 60px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <figure class=\\\"image is-128x128\\\">\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n  </figure> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n\\n    Dados do usuário:\\n\\n  <form (submit)='excluirUsuario()' #userForm='ngForm'>\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Nome</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.nome }}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">E-mail</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.email }}\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n    \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Função</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.funcao }}\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Custo/hora</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.custoHora }}\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n    <div class=\\\"field is-horizontal\\\">\\n        <label class=\\\"checkbox\\\">\\n          <figure class=\\\"image is-32x32\\\">\\n            <img [src]=\\\"usuario['admin'] ? frontPath : backPath \\\">\\n          </figure>\\n          &nbsp; Adminstrador  \\n        </label>\\n      </div>\\n\\n  \\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/usuarios']\\\">Cancela</button>\\n    <button type=\\\"submit\\\" class=\\\"button is-danger\\\"  [disabled]=\\\"userForm.invalid\\\">Excluir</button>\\n  \\n  </form>\\n</div>  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '../../../../node_modules/@angular/router';\nimport { UsuarioService } from '../usuario.service';\n\n@Component({\n  selector: 'app-usuario-show',\n  templateUrl: './usuario-show.component.html',\n  styleUrls: ['./usuario-show.component.css']\n})\nexport class UsuarioShowComponent implements OnInit {\n  usuario = { \n    nome: \"\",\n    email: \"\",\n    funcao: \"\",\n    custoHora: 0,\n    admin: false\n  };\n  frontPath:string = \"../../assets/images/check.png\";\n\n  backPath:string =  \"\";\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoEditComponent > usuario: ', this.usuario);\n    this.obterUsuario(this._route.snapshot.params['id']);\n  }\n\n  obterUsuario(id){\n    console.log('UsuarioEditComponent > obterUsuario'); \n    const observable = this._usuarioService.obterUsuarioById(id);\n    observable.subscribe((response) => {\n      this.usuario = response.json();\n    });\n  }\n\n  excluirUsuario(id){\n    console.log('excluir Usuario OK!!!');\n  \n  }\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  private isUserLoggedIn;\n  public usuario;\n\n\n  constructor(private _http: Http) { \n    this.isUserLoggedIn = false;\n  }\n\n  login(usuario, callback) {\n    this.usuario = usuario;\n    console.log('LOGIN success: ', this.usuario);\n    callback(this.usuario.email);\n  }\n\n  setUserLoggedIn() {\n    this.isUserLoggedIn = true;\n  }\n\n  getUserLoggedIn() {\n    return this.usuario;\n    // return this.isUserLoggedIn;\n  }\n\n\n  obterTodos() {\n    console.log('UsuarioService > obterTodos()');\n    return this._http.get('/usuarios');\n  }\n\n  obterUsuarioById(id) {\n    console.log('UsuarioService > obterUsuarioById', id);\n    return this._http.get('/usuario/' + id );\n  }\n\n  criarUsuario(usuario) {\n    console.log('UsuarioService > criarUsuario(usuario)', usuario);\n    return this._http.post('usuario/novo', usuario);\n  }\n\n  editarUsuario(usuario) {\n    console.log('UsuarioService > editarUsuario(usuario)', usuario);\n    return this._http.put('usuario/edit/' + usuario['_id'], usuario);\n  }\n\n  // login(user, callback) {\n  //   this._http.post('/login/', user).subscribe(\n  //     (res) => {\n  //       if (!callback) {\n  //         console.log('Email nao cadastrado, tente novamente!');\n  //       } else {\n  //         console.log('SUCCESS in login: ', res);\n  //         callback(res.json());\n  //       }\n  //     },\n  //     (err) => {\n  //       console.log('ERROR in login: ', err.json());\n  //     }\n  //   );\n  // }\n\n\n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}