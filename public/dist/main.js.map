{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apontamento/apontamento-dashboard/apontamento-dashboard.component.html","webpack:///./src/app/apontamento/apontamento-dashboard/apontamento-dashboard.component.scss","webpack:///./src/app/apontamento/apontamento-dashboard/apontamento-dashboard.component.ts","webpack:///./src/app/apontamento/apontamento-lista-despesa/apontamento-lista-despesa.component.html","webpack:///./src/app/apontamento/apontamento-lista-despesa/apontamento-lista-despesa.component.scss","webpack:///./src/app/apontamento/apontamento-lista-despesa/apontamento-lista-despesa.component.ts","webpack:///./src/app/apontamento/apontamento-lista-hora/apontamento-lista-hora.component.html","webpack:///./src/app/apontamento/apontamento-lista-hora/apontamento-lista-hora.component.scss","webpack:///./src/app/apontamento/apontamento-lista-hora/apontamento-lista-hora.component.ts","webpack:///./src/app/apontamento/apontamento-novo/apontamento-novo.component.html","webpack:///./src/app/apontamento/apontamento-novo/apontamento-novo.component.scss","webpack:///./src/app/apontamento/apontamento-novo/apontamento-novo.component.ts","webpack:///./src/app/apontamento/popup/popup.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.html","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.scss","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.ts","webpack:///./src/app/cliente/cliente-list/cliente-list.component.html","webpack:///./src/app/cliente/cliente-list/cliente-list.component.scss","webpack:///./src/app/cliente/cliente-list/cliente-list.component.ts","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.html","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.scss","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.ts","webpack:///./src/app/cliente/cliente-novo/cliente.ts","webpack:///./src/app/cliente/cliente-show/cliente-show.component.html","webpack:///./src/app/cliente/cliente-show/cliente-show.component.scss","webpack:///./src/app/cliente/cliente-show/cliente-show.component.ts","webpack:///./src/app/cliente/cliente.service.ts","webpack:///./src/app/financeiro/financeiro.component.html","webpack:///./src/app/financeiro/financeiro.component.scss","webpack:///./src/app/financeiro/financeiro.component.ts","webpack:///./src/app/global-error-handler.service.ts","webpack:///./src/app/global-error/global-error.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/pagina-nao-encontrada/pagina-nao-encontrada.component.ts","webpack:///./src/app/projeto/popup/popup.component.html","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.html","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.scss","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.ts","webpack:///./src/app/projeto/projeto-list/projeto-list.component.html","webpack:///./src/app/projeto/projeto-list/projeto-list.component.scss","webpack:///./src/app/projeto/projeto-list/projeto-list.component.ts","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.html","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.scss","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.ts","webpack:///./src/app/projeto/projeto-show/projeto-show.component.html","webpack:///./src/app/projeto/projeto-show/projeto-show.component.scss","webpack:///./src/app/projeto/projeto-show/projeto-show.component.ts","webpack:///./src/app/projeto/projeto.service.ts","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.html","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.scss","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.ts","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.html","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.scss","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.ts","webpack:///./src/app/usuario/usuario-list/usuario-list.component.html","webpack:///./src/app/usuario/usuario-list/usuario-list.component.scss","webpack:///./src/app/usuario/usuario-list/usuario-list.component.ts","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.html","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.scss","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.ts","webpack:///./src/app/usuario/usuario-show/usuario-show.component.html","webpack:///./src/app/usuario/usuario-show/usuario-show.component.scss","webpack:///./src/app/usuario/usuario-show/usuario-show.component.ts","webpack:///./src/app/usuario/usuario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\"> \\n\\n  <nav class=\\\"level\\\">\\n      <div class=\\\"level-left\\\">\\n          <div class=\\\"title is-4\\\">Apontamentos Projeto</div>\\n      </div>\\n      <div class=\\\"level-right\\\">\\n          <button mat-stroked-button color=\\\"primary\\\" style=\\\"margin-top: 15px;\\\" [routerLink]=\\\"['/apontamento/novo']\\\">Novo apontamento</button>\\n      </div> \\n  </nav>\\n  <p>Olá {{ usuarioLogado }}</p>\\n\\n  <mat-tab-group>\\n    <div class=\\\"container\\\"> \\n      <!-- <mat-tab label=\\\"Hora\\\" *ngIf=\\\"apontamentos.hora.inicio\\\"> -->\\n      <mat-tab label=\\\"Hora\\\">\\n        <apontamento-lista-hora></apontamento-lista-hora>\\n      </mat-tab>\\n      <mat-tab label=\\\"Despesa\\\">\\n          <apontamento-lista-despesa></apontamento-lista-despesa>\\n      </mat-tab>        \\n    </div>\\n  </mat-tab-group>\\n</div>\\n\\n\"","module.exports = \"img {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../../usuario/usuario.service';\n\n@Component({\n  selector: 'apontamento-dashboard',\n  templateUrl: './apontamento-dashboard.component.html',\n  styleUrls: ['./apontamento-dashboard.component.scss']\n})\nexport class ApontamentoDashboardComponent implements OnInit {\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n\n  constructor(private _usuarioService: UsuarioService) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ApontamentoDashboardComponent > usuariologado ',this.usuarioLogado.email)\n  }\n\n}\n","module.exports = \"<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n      \\n      <!-- Codigo Column -->\\n      <ng-container matColumnDef=\\\"codigo\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> código </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codigo}} </td>\\n      </ng-container> \\n \\n      <!-- Descricao Column -->\\n      <ng-container matColumnDef=\\\"descricao\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> descricao </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.descricao}} </td>\\n      </ng-container> \\n \\n      <!-- Despesa Descrição Column -->\\n      <ng-container matColumnDef=\\\"descricaoDespesa\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> despesa </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.despesa.descricao}} </td>\\n      </ng-container> \\n \\n      <!-- Despesa Valor Column -->\\n      <ng-container matColumnDef=\\\"despesaValor\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> valor </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.despesa.valor}} </td>\\n        </ng-container> \\n \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n  \\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\n// import { Router } from '@angular/router';\nimport { ProjetoService } from '../../projeto/projeto.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { MatDialog, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\nexport interface ApontamentoData {\n  codigo: string;\n  descricao: string;\n  despesa: {\n    descricao: string, \n    valor: string}\n}\n\n@Component({\n  selector: 'apontamento-lista-despesa',\n  templateUrl: './apontamento-lista-despesa.component.html',\n  styleUrls: ['./apontamento-lista-despesa.component.scss']\n})\nexport class ApontamentoListaDespesaComponent implements OnInit {\n\n  displayedColumns: string[] = ['codigo', 'descricao', 'descricaoDespesa', 'despesaValor'];\n  dataSource: MatTableDataSource<ApontamentoData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n\n  apontamentos = [{\n    codigo: \"\",\n    descricao: \"\",\n    despesa: {\n      descricao: \"\",\n      valor: \"\"},\n    _projeto: \"\"\n  }] \n\n  projeto: any;\n  \n  constructor(\n    private _projetoService: ProjetoService,\n    private _usuarioService: UsuarioService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ApontamentoListaDespesaComponent > usuariologado',this.usuarioLogado.email)\n    this.obterListaApontamento();\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obterListaApontamento(){\n    console.log('ApontamentoListaDespesaComponent > obterListaApontamento()', this.usuarioLogado)\n    const apontObservable = this._projetoService.obterApontamentosDespesa(this.usuarioLogado);\n    apontObservable.subscribe(\n      (apontamentos) => {\n        this.apontamentos = apontamentos.json();\n        // console.log('ApontamentoListaDespesaComponent > obterListaApontamento() > apontamentos ', this.apontamentos)\n        for (var i = 0; i < this.apontamentos.length; i++) {\n          this.obterProjeto(this.apontamentos[i]._projeto, i);\n        } \n        this.dataSource = new MatTableDataSource(this.apontamentos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterProjeto(id, i) {\n    console.log('ApontamentoListaDespesaComponent > obterProjeto()', id, i)\n    const observable = this._projetoService.obterProjetoById(id);\n    observable.subscribe(\n      (response) => {\n        this.projeto = response.json();\n        // console.log('ApontamentoListaDespesaComponent > obterProjeto() > this.projeto', this.projeto.apontamentos);\n        this.apontamentos[i].codigo = this.projeto.codigo;\n        this.apontamentos[i].descricao = this.projeto.descricao;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n}","module.exports = \"<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  <!-- {{ apontamentos[0] | json }} -->\\n  <div class=\\\"mat-elevation-z8 linha\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n      <!-- Codigo Column -->\\n      <ng-container matColumnDef=\\\"codigo\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> código </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codigo}} </td>\\n      </ng-container>\\n  \\n      <!-- Descricao Column -->\\n      <ng-container matColumnDef=\\\"descricao\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> descricao </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.descricao}} </td>\\n      </ng-container>\\n  \\n      <!-- Inicio Column -->\\n      <ng-container matColumnDef=\\\"inicio\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> início </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.hora.inicio | date:\\\"MMM d, y H:mm:ss\\\"}} </td>\\n      </ng-container>\\n  \\n    <!-- Ação Column -->\\n    <ng-container matColumnDef=\\\"acao\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ação </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> \\n          <div class=\\\"button-row\\\">\\n            <button mat-button color=\\\"warn\\\" style=\\\"margin-top: -15px\\\" (click)=\\\"openDialog(row)\\\">encerrar</button>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n  \\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../../projeto/projeto.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\nexport interface ApontamentoData {\n  codigo: string;\n  descricao: string;\n  hora : {\n    inicio: string};\n  acao: string;\n}\n\n\n@Component({\n  selector: 'apontamento-lista-hora',\n  templateUrl: './apontamento-lista-hora.component.html',\n  styleUrls: ['./apontamento-lista-hora.component.scss']\n})\nexport class ApontamentoListaHoraComponent implements OnInit {\n\n  displayedColumns: string[] = ['codigo', 'descricao', 'inicio', 'acao'];\n  dataSource: MatTableDataSource<ApontamentoData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n\n  apontamentos = [{\n    _id: \"\", \n    _projeto: \"\",\n    usuario: \"\",\n    codigo: \"\",\n    descricao: \"\",\n    hora: {\n      inicio: \"\"},\n    acao: \"\"\n  }] \n  \n\n  projeto: any;\n  \n  \n  constructor(\n    private _projetoService: ProjetoService,\n    private _usuarioService: UsuarioService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ApontamentoListaHoraComponent > usuariologado ',this.usuarioLogado.email)\n    this.obterListaApontamento();\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obterListaApontamento(){\n    console.log('ApontamentoListaHoraComponent > obterListaApontamento()', this.usuarioLogado)\n    const apontObservable = this._projetoService.obterApontamentosHora(this.usuarioLogado);\n    apontObservable.subscribe(\n      (apontamentos) => {\n        this.apontamentos = apontamentos.json();\n        // console.log('ApontamentoListaHoraComponent > obterListaApontamento() > apontamentos ', this.apontamentos)\n        for (var i = 0; i < this.apontamentos.length; i++) {\n          this.obterProjeto(this.apontamentos[i]._projeto, i);\n        } \n        // console.log('D E P O I S >>>> >>>> >>>ApontamentoListaHoraComponent > obterListaApontamento() > apontamentos ', this.apontamentos)\n        this.dataSource = new MatTableDataSource(this.apontamentos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterProjeto(id, i) {\n    console.log('ApontamentoListaHoraComponent > obterProjeto()')\n    const observable = this._projetoService.obterProjetoById(id);\n    observable.subscribe(\n      (response) => {\n        this.projeto = response.json();\n        // console.log('ApontamentoListaHoraComponent > obterProjeto() > this.projeto', this.projeto.apontamentos.length, this.projeto );\n        this.apontamentos[i].descricao = this.projeto.descricao;\n        this.apontamentos[i].codigo = this.projeto.codigo;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  openDialog(projeto): void {\n    console.log('ApontamentoListaHoraComponent > openDialog(projeto)', projeto)\n    let dialogRef = this.dialog.open(DialogApontamentoHora, {\n      width: '250px',\n\n      data: {\n        id: projeto._id,\n        codigo: projeto.codigo,\n        descricao: projeto.descricao,\n        inicio: projeto.hora.inicio,\n        fim: new Date(),\n        usuario: this.usuarioLogado\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n        console.log('The dialog was closed');\n        this.obterListaApontamento();\n    });\n  }\n\n}\n\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: '../popup/popup.component.html'\n})\n\nexport class DialogApontamentoHora {\n\n  constructor(private _projetoService: ProjetoService, \n    private _router: Router, \n    public dialogRef: MatDialogRef<DialogApontamentoHora>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  encerrarApontamento(data) {\n    console.log('DialogApontamentoHora >  encerrarApontamento(data) ', data)\n    const dialogObservable = this._projetoService.encerrarApontamento(data);\n    dialogObservable.subscribe(\n      (res) => { \n        console.log('The dialog called encerrar apontamento!', res);\n        this.dialogRef.close();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n<div class=\\\"level-left\\\">\\n    <div style=\\\"margin: 20px, 0px, 20px, 0px;\\\" class=\\\"title is-4\\\">Apontamento</div> \\n</div>\\n\\n\\n<form  #formData=\\\"ngForm\\\" [formGroup]=\\\"options\\\">\\n\\n\\n  <div class=\\\"example-container\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Selecione o projeto\\\" name=\\\"projeto\\\" formControlName=\\\"projeto\\\" required>\\n          <mat-option value=\\\"option\\\" *ngFor=\\\"let p of projetos\\\" [value]=\\\"p._id\\\"> {{ p.codigo }} {{ p.descricao }}</mat-option>\\n        </mat-select>\\n        <mat-hint align=\\\"end\\\"></mat-hint>\\n      </mat-form-field>\\n\\n        <div>\\n          <mat-radio-group formControlName=\\\"tipo\\\" [value]=\\\"tipo\\\">\\n            <mat-radio-button value=\\\"hora\\\">hora</mat-radio-button>&nbsp;\\n            <mat-radio-button value=\\\"despesa\\\">despesa</mat-radio-button>\\n          </mat-radio-group>&nbsp;&nbsp;\\n\\n          <mat-form-field *ngIf=\\\"(options.get('tipo').value=='despesa')\\\">\\n              <mat-select placeholder=\\\"Selecione o tipo\\\"  formControlName=\\\"opDespesa\\\">\\n                <mat-option value=\\\"alimentacao\\\"> alimentação</mat-option>\\n                <mat-option value=\\\"hospedagem\\\"> hospedagem</mat-option>\\n                <mat-option value=\\\"pedagio\\\"> pedágio</mat-option>\\n                <mat-option value=\\\"transporte\\\"> transporte</mat-option>\\n                <mat-option value=\\\"outros\\\"> outros</mat-option>\\n              </mat-select>\\n              <mat-hint align=\\\"end\\\"></mat-hint>\\n          </mat-form-field>&nbsp;&nbsp;\\n\\n          <mat-form-field *ngIf=\\\"options.get('opDespesa').value=='outros'\\\" hintLabel=\\\"Max 20 caracteres\\\">\\n              <input matInput formControlName=\\\"descricao\\\" #input maxlength=\\\"20\\\">\\n              <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint>\\n            </mat-form-field>&nbsp;&nbsp;\\n\\n          <mat-form-field *ngIf=\\\"(options.get('tipo').value=='despesa')\\\">\\n            <input \\n            formControlName=\\\"valor\\\"\\n            matInput \\n            placeholder=\\\"Valor\\\" \\n            type=\\\"number\\\" \\n            class=\\\"example-right-align\\\">\\n            <span matPrefix>$&nbsp;</span>\\n            <span matSuffix>.00</span>\\n          </mat-form-field>&nbsp;&nbsp;\\n\\n          <mat-form-field *ngIf=\\\"(options.get('tipo').value=='hora')\\\" >\\n            <mat-select placeholder=\\\"início\\\" formControlName=\\\"inicio\\\" > \\n                <mat-option value=\\\"{{ today }}\\\">{{today | date:\\\"MMM d, y H:mm:ss\\\"}}</mat-option>\\n              <!-- <mat-option value=\\\"{{ today | date:'MMM d, y H:mm' }}\\\">{{today | date:\\\"MMM d, y H:mm\\\"}}</mat-option> -->\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </div>\\n\\n\\n          <!-- <mat-form-field *ngIf=\\\"(valueTipo=='despesa')\\\"\\n            formControlName=\\\"despesaValor\\\">\\n            <input \\n              matInput \\n              placeholder=\\\"Valor\\\" \\n              required\\n              >\\n          </mat-form-field> -->\\n          <!-- {{ valueDespesa }} -->\\n\\n\\n      <!-- </form> -->\\n\\n    </div>\\n  </form>\\n\\n\\n\\n\\n<!-- <div style=\\\"margin-top: 15px; width: 50%;\\\">\\n        <ngbd-datepicker-popup></ngbd-datepicker-popup>\\n    </div> -->\\n\\n\\n\\n\\n    <!-- <h3>Tipo de apontamento</h3> -->\\n    <!-- <div class=\\\"select is-multiple\\\"> -->\\n        <!-- <select name=\\\"tipo\\\" [(ngModel)]=\\\"tipo\\\">\\n          <option>Hora </option>\\n          <option>Despesa </option>\\n        </select> -->\\n       \\n    \\n        <!-- Tipo de Apontamento: Despesa -->\\n        <!-- <div class=\\\"control\\\" *ngIf=\\\"(tipo=='Despesa')\\\">\\n          <div class=\\\"field is-horizontal\\\" style=\\\"margin-top: 20px;\\\" > -->\\n            <!-- <select name=\\\"opcaoDespesa\\\" [(ngModel)]=\\\"opcaoDespesa\\\" > \\n              <option>alimentação </option>\\n              <option>hospedagem </option>\\n              <option>pedágio </option>\\n              <option>transporte </option>\\n              <option>outros </option>\\n            </select> -->\\n           \\n  \\n          <!-- </div> -->\\n              <!-- <div class=\\\"control\\\" *ngIf=\\\"opcaoDespesa=='outros'\\\">\\n              <div class=\\\"field is-horizontal\\\">\\n                <p class=\\\"control\\\">\\n                  <textarea \\n                  class=\\\"textarea is-warning\\\" \\n                  type=\\\"text\\\" \\n                  rows=\\\"2\\\"\\n                  name=\\\"descricao\\\" \\n                  placeholder=\\\"Descrição da despesa\\\"\\n                  [(ngModel)]=\\\"apontamento.despesa.descricao\\\"\\n                  #descricao=\\\"ngModel\\\">\\n                  </textarea>\\n                </p>\\n              </div>\\n          </div> -->\\n          <!-- <div class=\\\"field is-horizontal\\\" >\\n            <div class=\\\"field-body\\\">\\n              <div class=\\\"field\\\">\\n                <p class=\\\"control\\\">\\n                  <input \\n                  class=\\\"input\\\" \\n                  type=\\\"text\\\" \\n                  name=\\\"valor\\\" \\n                  [(ngModel)]=\\\"apontamento.despesa.valor\\\"\\n                  #valor=\\\"ngModel\\\"\\n                  />\\n                </p>\\n              </div>\\n            </div>\\n          </div> -->\\n        <!-- </div> -->\\n        <!-- Tipo de Apontamento: Hora -->\\n        <!-- <div *ngIf=\\\"(tipo=='Hora')\\\"> -->\\n            <!-- <div style=\\\"border: solid 2px green; margin-top: 10px;  padding: 10px;\\\"> -->\\n              <!-- <select name=\\\"inicio\\\" [(ngModel)]=\\\"apontamento.hora.inicio\\\" > \\n                  <option>{{today | date:\\\"MMM d, y H:mm\\\"}}</option>\\n                </select> -->\\n                \\n            <!-- </div> -->\\n        <!-- </div> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setApontamento()\\\" [disabled]=\\\"formData.invalid\\\">Confirma</button>\\n  \\n      </div>\\n\\n\\n\\n\\n\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\nbutton {\\n  margin: 10px; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n// import { NgbdDatepickerPopup } from './datepicker-popup';\nimport { ProjetoService } from '../../projeto/projeto.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n// import { getLocaleDateTimeFormat } from '../../../../node_modules/@angular/common';\n\n@Component({\n  selector: 'app-apontamento-novo',\n  templateUrl: './apontamento-novo.component.html',\n  styleUrls: ['./apontamento-novo.component.scss']\n})\nexport class ApontamentoNovoComponent implements OnInit {\n\n  panelColor = new FormControl('green');\n\n  options: FormGroup;\n  tipo: string = 'hora';\n  projeto: string = '';\n  opDespesa: string = '';\n  descricao: string = '';\n  inicio: string = '';\n  fim: string = '';\n  valor: number = 0;\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n\n  today = new Date();\n  // today = moment(new Date()).format('MM/DD/YYYY h:mm a');\n\n  projetos: any[];\n  projetoSelecionado: Number;\n \n  id: any;\n  // tipo: any;\n  opcaoDespesa: any;\n\n  apontamento: any = {\n    tipo: \"\",\n    usuario: \"\",\n    hora: {\n      inicio: \"\",\n      fim: \"\"\n      },\n    despesa: {\n      descricao: \"\",\n      valor: 0\n    }\n  }\n  \n  constructor(\n    private fb: FormBuilder,\n    private _projetoService: ProjetoService,\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) {  \n    this.options = fb.group({\n      tipo: ['hora'],\n      projeto: [null],\n      opDespesa: [null],\n      descricao: [null],\n      inicio: [null],\n      fim: [null],\n      valor: [null]\n    });\n  }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log(' ApontamentoNovoComponent > usuarioLogado ', this.usuarioLogado.email);\n    this.apontamento.usuario = this.usuarioLogado;\n    this.obterListaProjeto();\n  }\n  \n  obterListaProjeto() {\n    console.log('ApontamentoNovoComponent > obterListaProjeto()')\n    const projetoObservable = this._projetoService.obterTodos();\n    projetoObservable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n        console.log('projetos in List apontamentos:', this.projetos);\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n  setApontamento() {\n    console.log('debug: - tipo ',  this.options.value, this.options.controls.tipo.value );\n    this.apontamento.tipo = this.options.controls.tipo.value;\n    if (this.options.controls.tipo.value != 'hora') {\n      this.apontamento.hora.inicio = \"\";\n      this.apontamento.hora.fim = \"\";\n    } else {\n      this.apontamento.hora.inicio = this.options.controls.inicio.value;\n      this.apontamento.hora.fim = \"\";\n    }\n    if (this.options.controls.tipo.value == 'despesa' && this.options.controls.opDespesa.value != 'outros') {\n      this.apontamento.despesa.descricao = this.options.controls.opDespesa.value;\n      this.apontamento.despesa.valor = this.options.controls.valor.value;\n    }\n    if (this.options.controls.tipo.value == 'despesa' && this.options.controls.opDespesa.value == 'outros') {\n      this.apontamento.despesa.descricao = this.options.controls.descricao.value;\n      this.apontamento.despesa.valor = this.options.controls.valor.value;\n    }\n    console.log('ApontamentoNovoComponent > setApontamento() >  this.apontamento, this.options', this.apontamento );\n    const Observable = this._projetoService.apontamentoNovo(this.options.controls.projeto.value, this.apontamento);\n    Observable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n        this._router.navigate(['/apontamentos']);\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  cancel() {\n    this._router.navigate(['/apontamentos']);\n  }\n\n\n\n\n}\n","module.exports = \"<h3 mat-dialog-title>Encerrar Apontamento </h3>\\n<h5>{{ data.usuario }}</h5>\\n<p>{{ data.codigo }} {{ data.descricao }}</p>\\n<p>Inicio: {{ data.inicio | date:\\\"MMM d, y H:mm:ss\\\" }}</p>\\n<p>Fim: {{ data.fim | date:\\\"MMM d, y H:mm:ss\\\" }}</p>\\n<br><br>\\n<div mat-dialog-content>\\n  <p>Confirma? </p>\\n</div>\\n<br><br>\\n<div mat-dialog-actions>\\n    <div class=\\\"button-row\\\">\\n      <button style=\\\"margin: 10px;\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"> não </button>\\n      <button style=\\\"margin: 10px;\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"encerrarApontamento(data)\\\" cdkFocusInitial> sim </button>\\n    </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { FinanceiroComponent } from './financeiro/financeiro.component';\nimport { UsuarioNovoComponent } from './usuario/usuario-novo/usuario-novo.component';\nimport { UsuarioEditComponent } from './usuario/usuario-edit/usuario-edit.component';\nimport { UsuarioShowComponent } from './usuario/usuario-show/usuario-show.component';\nimport { UsuarioListComponent } from './usuario/usuario-list/usuario-list.component';\nimport { ProjetoListComponent } from './projeto/projeto-list/projeto-list.component';\nimport { ProjetoNovoComponent } from './projeto/projeto-novo/projeto-novo.component';\nimport { ProjetoEditComponent } from './projeto/projeto-edit/projeto-edit.component';\nimport { ProjetoShowComponent } from './projeto/projeto-show/projeto-show.component';\nimport { ClienteListComponent } from './cliente/cliente-list/cliente-list.component';\nimport { ClienteNovoComponent } from './cliente/cliente-novo/cliente-novo.component';\nimport { ClienteEditComponent } from './cliente/cliente-edit/cliente-edit.component';\nimport { ClienteShowComponent } from './cliente/cliente-show/cliente-show.component';\nimport { ApontamentoNovoComponent } from './apontamento/apontamento-novo/apontamento-novo.component';\nimport { PaginaNaoEncontradaComponent } from './pagina-nao-encontrada/pagina-nao-encontrada.component';\nimport { RelatorioFinanceiroComponent } from './relatorio/relatorio-financeiro/relatorio-financeiro.component';\nimport { GlobalErrorComponent } from './global-error/global-error.component';\nimport { ApontamentoDashboardComponent } from './apontamento/apontamento-dashboard/apontamento-dashboard.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'apontamento/novo',\n    component: ApontamentoNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'apontamentos',\n    component: ApontamentoDashboardComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'financeiro',\n    component: FinanceiroComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'relatorio/financeiro',\n    component: RelatorioFinanceiroComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/show/:id',\n    component: UsuarioShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/novo',\n    component: UsuarioNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/edit/:id',\n    component: UsuarioEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuarios',\n    component: UsuarioListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'clientes',\n    component: ClienteListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/novo',\n    component: ClienteNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/edit/:id',\n    component: ClienteEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/show/:id',\n    component: ClienteShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projetos',\n    component: ProjetoListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/novo',\n    component: ProjetoNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/edit/:id',\n    component: ProjetoEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/show/:id',\n    component: ProjetoShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'error',\n    component: GlobalErrorComponent\n },\n  { \n    path: 'reset',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PaginaNaoEncontradaComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!-- <figure class=\\\"image is-128x128\\\">\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</figure> -->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'boilerplate';\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatRadioModule } from '@angular/material';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { GlobalErrorComponent } from './global-error/global-error.component';\n\nimport { ProjetoService } from './projeto/projeto.service';\nimport { UsuarioService } from './usuario/usuario.service';\nimport { ClienteService } from './cliente/cliente.service';\nimport { GlobalErrorHandlerService } from './global-error-handler.service';\n\n// import { NgbdDatepickerPopup } from './apontamento/datepicker-popup';\n// import { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ClienteEditComponent } from './cliente/cliente-edit/cliente-edit.component';\nimport { ClienteNovoComponent } from './cliente/cliente-novo/cliente-novo.component';\nimport { ClienteShowComponent } from './cliente/cliente-show/cliente-show.component';\nimport { UsuarioListComponent } from './usuario/usuario-list/usuario-list.component';\nimport { UsuarioEditComponent } from './usuario/usuario-edit/usuario-edit.component';\nimport { UsuarioNovoComponent } from './usuario/usuario-novo/usuario-novo.component';\nimport { UsuarioShowComponent } from './usuario/usuario-show/usuario-show.component';\nimport { LoginComponent } from './login/login.component';\nimport { FinanceiroComponent } from './financeiro/financeiro.component';\nimport { ProjetoListComponent, DialogProjeto } from './projeto/projeto-list/projeto-list.component';\nimport { ProjetoNovoComponent } from './projeto/projeto-novo/projeto-novo.component';\nimport { ProjetoShowComponent } from './projeto/projeto-show/projeto-show.component';\nimport { ProjetoEditComponent } from './projeto/projeto-edit/projeto-edit.component';\nimport { ClienteListComponent } from './cliente/cliente-list/cliente-list.component';\nimport { RelatorioFinanceiroComponent } from './relatorio/relatorio-financeiro/relatorio-financeiro.component';\nimport { PaginaNaoEncontradaComponent } from './pagina-nao-encontrada/pagina-nao-encontrada.component';\nimport { ApontamentoNovoComponent } from './apontamento/apontamento-novo/apontamento-novo.component';\nimport { MaterialModule } from './material';\nimport { ApontamentoDashboardComponent } from './apontamento/apontamento-dashboard/apontamento-dashboard.component';\nimport { ApontamentoListaDespesaComponent } from './apontamento/apontamento-lista-despesa/apontamento-lista-despesa.component';\nimport { ApontamentoListaHoraComponent, DialogApontamentoHora } from './apontamento/apontamento-lista-hora/apontamento-lista-hora.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FinanceiroComponent,\n    ClienteListComponent,\n    ClienteNovoComponent,\n    ClienteEditComponent,\n    ClienteShowComponent,\n    UsuarioListComponent,\n    UsuarioEditComponent,\n    UsuarioNovoComponent,\n    UsuarioShowComponent,\n    ProjetoListComponent,\n    ProjetoNovoComponent,\n    ProjetoShowComponent,\n    ProjetoEditComponent,\n    RelatorioFinanceiroComponent,\n    PaginaNaoEncontradaComponent,\n    GlobalErrorComponent,\n    ApontamentoNovoComponent,\n    DialogProjeto,\n    DialogApontamentoHora,\n    ApontamentoDashboardComponent,\n    ApontamentoListaDespesaComponent,\n    ApontamentoListaHoraComponent\n    // NgbdDatepickerPopup,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    HttpModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MaterialModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatCardModule,\n    MatToolbarModule\n    // NgbModule,\n    // NgbModule.forRoot()\n  ],\n  entryComponents:[\n    DialogProjeto,\n    DialogApontamentoHora\n  ],\n  providers: [\n    ProjetoService,\n    UsuarioService,\n    ClienteService,\n    GlobalErrorHandlerService,\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService }    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/clientes']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n    Dados básicos: \\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.cnpj\\\" >  {{ errors['cnpj'].message }} </p>\\n      <p *ngIf=\\\"errors.razaoSocial\\\" >  {{ errors['razaoSocial'].message }} </p>\\n      <p *ngIf=\\\"errors.nomeFantasia\\\" >  {{ errors['nomeFantasia'].message }} </p>\\n      <p *ngIf=\\\"errors.endereco\\\" >  {{ errors['endereco'].message }} </p>   \\n      <!-- <p *ngIf=\\\"errors.contatos\\\" >  {{ errors['contatos'].message }} </p>        -->\\n    </div>\\n\\n<div [formGroup] = \\\"clienteForm\\\">\\n\\n  <form class=\\\"example-form\\\" >\\n\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput \\n        placeholder=\\\"cnpj\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"cnpj\\\" \\n        name=\\\"cnpj\\\"\\n        >\\n        <mat-error *ngIf=\\\"cnpj.invalid && cnpj.touched\\\">\\n          cnpj informado não é válido\\n        </mat-error>\\n      </mat-form-field></td>\\n    </tr></table>\\n\\n\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput \\n        placeholder=\\\"razão social\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"razaoSocial\\\" \\n        name=\\\"razaoSocial\\\"\\n        />\\n        <mat-error *ngIf=\\\"razaoSocial.invalid && razaoSocial.touched\\\">\\n            razão social informada não é válida\\n        </mat-error>\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput \\n        placeholder=\\\"nome fantasia\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"nomeFantasia\\\"  \\n        name=\\\"nomeFantasia\\\"\\n        />\\n        <mat-error *ngIf=\\\"nomeFantasia.invalid && nomeFantasia.touched\\\">\\n            nome fantasia informado não é válido\\n        </mat-error>\\n      </mat-form-field></td>\\n    </tr></table>\\n\\n\\n    <p>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <textarea \\n        matInput\\n        placeholder=\\\"endereço\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"endereco\\\" \\n        name=\\\"endereco\\\">   \\n      </textarea>\\n      <mat-error *ngIf=\\\"endereco.invalid && endereco.touched\\\">\\n          endereço informado não é válido\\n      </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <!-- <div *ngIf=\\\"!endereco?.valid\\\" class=\\\"purple\\\">Endereço do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n\\n    Dados comerciais:\\n\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput\\n        placeholder=\\\"valor HH\\\"\\n        type=\\\"number\\\"\\n        formControlName=\\\"valorHH\\\" \\n        name=\\\"valorHH\\\"  \\n        />\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput\\n        placeholder=\\\"prazo pagto\\\"\\n        type=\\\"number\\\"\\n        formControlName=\\\"prazoPgto\\\" \\n        name=\\\"prazoPgto\\\"  \\n        />\\n      </mat-form-field></td>\\n    </tr></table>\\n\\n    Contatos: \\n\\n    <div formArrayName=\\\"contatos\\\">\\n        \\n      <div *ngFor=\\\"let contato of contatoForms.controls; let i = index;\\\" [formGroupName]=\\\"i\\\">\\n\\n        <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n          <td><mat-form-field class=\\\"example-full-width\\\">\\n            <input \\n            matInput\\n            placeholder=\\\"nome\\\"\\n            type=\\\"text\\\"\\n            formControlName=\\\"nome\\\" \\n            name=\\\"nome\\\"  \\n            />\\n          </mat-form-field></td>\\n\\n          <td><mat-form-field class=\\\"example-full-width\\\">\\n              <input \\n              matInput\\n              placeholder=\\\"email\\\"\\n              type=\\\"email\\\"\\n              formControlName=\\\"email\\\" \\n              name=\\\"email\\\"\\n              />\\n            </mat-form-field></td>\\n\\n          <td><mat-form-field class=\\\"example-full-width\\\">\\n              <input \\n              matInput\\n              placeholder=\\\"fone\\\"\\n              type=\\\"number\\\"\\n              formControlName=\\\"fone\\\" \\n              name=\\\"fone\\\"  \\n              />\\n            </mat-form-field></td>\\n\\n            <td><mat-form-field class=\\\"example-full-width\\\">\\n                <input \\n                matInput\\n                placeholder=\\\"skype\\\"\\n                type=\\\"text\\\"\\n                formControlName=\\\"skype\\\" \\n                name=\\\"skype\\\"  \\n                />\\n              </mat-form-field></td>\\n\\n          </tr></table>\\n          <a  mat-mini-fab color=\\\"warn\\\" (click)=\\\"deleteContato(i)\\\">-</a>\\n        </div>\\n\\n      \\n      </div>\\n\\n\\n      <a mat-mini-fab color=\\\"primary\\\" (click)=\\\"addContato()\\\">+</a>\\n\\n\\n    <button mat-raised-button color=\\\"basic\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n\\n    <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"criarCliente(clienteForm)\\\" [disabled]=\\\"clienteForm.invalid\\\">Confirma</button>\\n      \\n\\n  </form>\\n</div>\\n</div>\"","module.exports = \"button {\\n  margin: 10px; }\\n\\n.purple {\\n  color: purple;\\n  margin: 0px 0px 30px 175px; }\\n\\n.errors {\\n  color: brown; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit, createPlatformFactory } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormArray, NgForm } from '@angular/forms';\nimport { ClienteService } from '../cliente.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\n\n@Component({\n  selector: 'app-cliente-edit',\n  templateUrl: './cliente-edit.component.html',\n  styleUrls: ['./cliente-edit.component.scss']\n})\nexport class ClienteEditComponent implements OnInit {\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }  \n  errors: any;\n  cliente: any;\n\n  clienteForm: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder,\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) {}\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log(' ClienteEditComponent > ', this.usuarioLogado.email);\n    this.obterCliente(this._route.snapshot.params['id']);\n    }\n\n  obterCliente(id) {\n    console.log('ClienteEditComponent > obterCliente'); \n      const observable = this._clienteService.obterClienteById(id);\n      observable.subscribe(\n        (response) => {\n          this.cliente = response.json();\n          console.log('in ClienteEditComponent >>>>:', this.cliente);\n          this.newForm();\n          // this.clienteForm = this.cliente;\n        },\n        (err) => { },\n          () => { }\n      )\n  }\n\n  newForm() {\n    this.clienteForm = this.fb.group({\n      cnpj: [this.cliente.cnpj, [ Validators.required, Validators.minLength(11) ]],\n      razaoSocial: [this.cliente.razaoSocial, [ Validators.required ]],\n      nomeFantasia: [this.cliente.nomeFantasia, [ Validators.required ]],\n      endereco: [this.cliente.endereco, [ Validators.required ]],\n      valorHH: this.cliente.valorHH,\n      prazoPgto: this.cliente.prazoPgto,\n      contatos: this.fb.array([this.cliente.contatos])\n    })\n  }\n\n  get cnpj() {\n    return this.clienteForm.get('cnpj');\n  }\n\n  get razaoSocial() {\n    return this.clienteForm.get('razaoSocial');\n  }\n\n  get nomeFantasia() {\n    return this.clienteForm.get('nomeFantasia');\n  }\n\n  get endereco() {\n    return this.clienteForm.get('endereco');\n  }\n\n  get contatoForms() {\n    return this.clienteForm.get('contatos') as FormArray\n  }\n\n  addContato() {\n    const contato = this.fb.group({\n      nome: [],\n      email: [],\n      fone: [],\n      skype: []\n    })\n\n    this.contatoForms.push(contato);\n  }\n\n  deleteContato(i) {\n    this.contatoForms.removeAt(i);\n  }\n\n  editarCliente(clienteForm: NgForm) {\n    console.log('ClienteEditarComponent > editarCliente(clienteForm)', clienteForm); \n    this._clienteService.editarCliente(this.cliente['_id'], clienteForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu editando cliente ', this.errors);\n          this._router.navigate(['/cliente/edit/' + this.cliente['_id'] ]);\n        } else {\n          this._router.navigate(['/clientes']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    // this.createForm(this.contatosCliente);\n  }\n\n  cancel() {\n    this._router.navigate(['/clientes']);\n  }\n}\n","module.exports = \"<mat-toolbar>\\n  <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"level-left\\\">\\n      <div style=\\\"margin-top: 20px;\\\" class=\\\"title is-4\\\">Clientes</div> \\n  </div>\\n  <div class=\\\"level-right\\\">\\n      <button mat-stroked-button color=\\\"primary\\\" [routerLink]=\\\"['/cliente/novo']\\\">Novo cliente</button>\\n  </div> \\n\\n  <mat-form-field>\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtrar\\\">\\n    </mat-form-field>\\n  \\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- nomeFantasia Column -->\\n        <ng-container matColumnDef=\\\"nomeFantasia\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> nome fantasia </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nomeFantasia}} </td>\\n        </ng-container>\\n  \\n        <!-- valorHH Column -->\\n        <ng-container matColumnDef=\\\"valorHH\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> valor HH </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.valorHH}} </td>\\n        </ng-container>\\n  \\n        <!-- prazoPgto Column -->\\n        <ng-container matColumnDef=\\\"prazoPgto\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> prazo pagto </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.prazoPgto}} </td>\\n        </ng-container>\\n  \\n        <!-- contatos Column -->\\n        <ng-container matColumnDef=\\\"nome\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> contato </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.nome}} </td>\\n        </ng-container>\\n  \\n        <!-- email Column -->\\n        <ng-container matColumnDef=\\\"email\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> email </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </td>\\n        </ng-container>\\n\\n        <!-- fone Column -->\\n        <ng-container matColumnDef=\\\"fone\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> fone </th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fone}} </td>\\n        </ng-container>\\n          \\n       <!-- Acao 1 Column -->\\n       <ng-container matColumnDef=\\\"acao1\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ação </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" >\\n            <div class=\\\"button-row\\\">\\n              <button mat-button color=\\\"primary\\\" >editar</button>\\n              <!-- <button mat-button color=\\\"primary\\\" [routerLink]=\\\"['/cliente/edit/', row['_id'] ]\\\">editar</button> -->\\n            </div>\\n          </td>\\n        </ng-container>\\n  \\n       <!-- Acao 2 Column -->\\n       <ng-container matColumnDef=\\\"acao2\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\\n          <td mat-cell *matCellDef=\\\"let row\\\" >\\n            <div class=\\\"button-row\\\">\\n              <button mat-button color=\\\"warn\\\" [routerLink]=\\\"['/cliente/show', row['_id'] ]\\\">detalhes</button>\\n            </div>\\n          </td>\\n        </ng-container>\\n  \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n      </table>\\n  \\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n\\n</div>\"","module.exports = \"img {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ClienteService } from '../cliente.service';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { Cliente } from '../cliente-novo/cliente';\n\nexport interface ClienteData {\n  _id: string;\n  nomeFantasia: string;\n  dvalorHH: string;\n  prazoPgto: string;\n  nome: string,\n  email: string,\n  fone: number\n}\n\n@Component({\n  selector: 'app-cliente-list',\n  templateUrl: './cliente-list.component.html',\n  styleUrls: ['./cliente-list.component.scss']\n})\nexport class ClienteListComponent implements OnInit {\n  \n  clientes: any;\n  cliente: any = new Cliente();\n\n  displayedColumns: string[] = ['nomeFantasia', 'valorHH', 'nome', 'email', 'fone', 'acao1', 'acao2' ];\n  dataSource: MatTableDataSource<ClienteData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(\n    private _clienteService: ClienteService\n  ) { }\n\n  ngOnInit() {\n    this.obterClientes();\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  obterClientes() {\n    console.log('ClienteListComponent > obterClienteList()')\n    const clienteObservable = this._clienteService.obterTodos();\n    clienteObservable.subscribe(\n      (clientes) => { \n        console.log('clientes in obterClientes list:', clientes.json());\n        this.clientes = clientes.json();\n        for(var i=0;i<this.clientes.length;i++){\n          this.clientes[i].nome = this.clientes[i].contatos[0].nome;\n          this.clientes[i].email = this.clientes[i].contatos[0].email;\n          this.clientes[i].fone = this.clientes[i].contatos[0].fone;\n          this.clientes[i].skype = this.clientes[i].contatos[0].skype;\n        }\n        console.log('cliente >>>> >>>> >>>>', this.clientes);\n        this.dataSource = new MatTableDataSource(this.clientes);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/clientes']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n    Dados básicos: \\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.cnpj\\\" >  {{ errors['cnpj'].message }} </p>\\n      <p *ngIf=\\\"errors.razaoSocial\\\" >  {{ errors['razaoSocial'].message }} </p>\\n      <p *ngIf=\\\"errors.nomeFantasia\\\" >  {{ errors['nomeFantasia'].message }} </p>\\n      <p *ngIf=\\\"errors.endereco\\\" >  {{ errors['endereco'].message }} </p>   \\n      <!-- <p *ngIf=\\\"errors.contatos\\\" >  {{ errors['contatos'].message }} </p>        -->\\n    </div>\\n\\n\\n  <form class=\\\"example-form\\\" [formGroup] = \\\"clienteForm\\\">\\n\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput \\n        placeholder=\\\"cnpj\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"cnpj\\\" \\n        name=\\\"cnpj\\\"\\n        >\\n        <mat-error *ngIf=\\\"cnpj.invalid && cnpj.touched\\\">\\n          cnpj informado não é válido\\n        </mat-error>\\n      </mat-form-field></td>\\n    </tr></table>\\n\\n\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput \\n        placeholder=\\\"razão social\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"razaoSocial\\\" \\n        name=\\\"razaoSocial\\\"\\n        />\\n        <mat-error *ngIf=\\\"razaoSocial.invalid && razaoSocial.touched\\\">\\n            razão social informada não é válida\\n        </mat-error>\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput \\n        placeholder=\\\"nome fantasia\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"nomeFantasia\\\"  \\n        name=\\\"nomeFantasia\\\"\\n        />\\n        <mat-error *ngIf=\\\"nomeFantasia.invalid && nomeFantasia.touched\\\">\\n            nome fantasia informado não é válido\\n        </mat-error>\\n      </mat-form-field></td>\\n    </tr></table>\\n\\n\\n    <p>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <textarea \\n        matInput\\n        placeholder=\\\"endereço\\\"\\n        type=\\\"text\\\"\\n        formControlName=\\\"endereco\\\" \\n        name=\\\"endereco\\\">   \\n      </textarea>\\n      <mat-error *ngIf=\\\"endereco.invalid && endereco.touched\\\">\\n          endereço informado não é válido\\n      </mat-error>\\n      </mat-form-field>\\n    </p>\\n\\n    <!-- <div *ngIf=\\\"!endereco?.valid\\\" class=\\\"purple\\\">Endereço do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n\\n    Dados comerciais:\\n\\n    <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput\\n        placeholder=\\\"valor HH\\\"\\n        type=\\\"number\\\"\\n        formControlName=\\\"valorHH\\\" \\n        name=\\\"valorHH\\\"  \\n        />\\n      </mat-form-field></td>\\n      <td><mat-form-field class=\\\"example-full-width\\\">\\n        <input \\n        matInput\\n        placeholder=\\\"prazo pagto\\\"\\n        type=\\\"number\\\"\\n        formControlName=\\\"prazoPgto\\\" \\n        name=\\\"prazoPgto\\\"  \\n        />\\n      </mat-form-field></td>\\n    </tr></table>\\n\\n    Contatos: \\n    <div class=\\\"container\\\">\\n      <div formArrayName=\\\"contatos\\\">\\n          \\n        <div *ngFor=\\\"let contato of contatoForms.controls; let i = index;\\\" [formGroupName]=\\\"i\\\">\\n\\n          <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\"><tr>\\n            <td><mat-form-field class=\\\"example-full-width\\\">\\n              <input \\n              matInput\\n              placeholder=\\\"nome\\\"\\n              type=\\\"text\\\"\\n              formControlName=\\\"nome\\\" \\n              name=\\\"nome\\\"  \\n              />\\n            </mat-form-field></td>\\n\\n            <td><mat-form-field class=\\\"example-full-width\\\">\\n                <input \\n                matInput\\n                placeholder=\\\"email\\\"\\n                type=\\\"email\\\"\\n                formControlName=\\\"email\\\" \\n                name=\\\"email\\\"\\n                />\\n              </mat-form-field></td>\\n\\n            <td><mat-form-field class=\\\"example-full-width\\\">\\n                <input \\n                matInput\\n                placeholder=\\\"fone\\\"\\n                type=\\\"number\\\"\\n                formControlName=\\\"fone\\\" \\n                name=\\\"fone\\\"  \\n                />\\n              </mat-form-field></td>\\n\\n              <td><mat-form-field class=\\\"example-full-width\\\">\\n                  <input \\n                  matInput\\n                  placeholder=\\\"skype\\\"\\n                  type=\\\"text\\\"\\n                  formControlName=\\\"skype\\\" \\n                  name=\\\"skype\\\"  \\n                  />\\n                </mat-form-field></td>\\n                <a  mat-mini-fab color=\\\"warn\\\" (click)=\\\"deleteContato(i)\\\">-</a>\\n            </tr></table>\\n\\n          </div>\\n\\n        \\n        </div>\\n\\n\\n        <a mat-mini-fab color=\\\"primary\\\" (click)=\\\"addContato()\\\">+</a>\\n\\n    </div>\\n    <button mat-raised-button color=\\\"basic\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n\\n    <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"criarCliente(clienteForm)\\\" [disabled]=\\\"clienteForm.invalid\\\">Confirma</button>\\n      \\n\\n  </form>\\n\\n</div>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\\n.errors {\\n  color: purple; }\\n\\na, button {\\n  margin: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators, FormArray, NgForm, FormControl } from '@angular/forms';\nimport { ClienteService } from '../cliente.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\n\n@Component({\n  selector: 'app-cliente-novo',\n  templateUrl: './cliente-novo.component.html',\n  styleUrls: ['./cliente-novo.component.scss']\n})\nexport class ClienteNovoComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }  \n  errors: any;\n\n  clienteForm: FormGroup;\n  \n  constructor(\n    private fb: FormBuilder,\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _router: Router\n  ) {}\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log(' ClienteNovoComponent > ', this.usuarioLogado.email);\n    this.clienteForm = this.fb.group({\n      cnpj: ['', [ Validators.required, Validators.minLength(11) ]],\n      razaoSocial: ['', [ Validators.required ]],\n      nomeFantasia: ['', [ Validators.required ]],\n      endereco: ['', [ Validators.required ]],\n      valorHH: '',\n      prazoPgto: '',\n      contatos: this.fb.array([])\n    })\n  }\n\n  get cnpj() {\n    return this.clienteForm.get('cnpj');\n  }\n\n  get razaoSocial() {\n    return this.clienteForm.get('razaoSocial');\n  }\n\n  get nomeFantasia() {\n    return this.clienteForm.get('nomeFantasia');\n  }\n\n  get endereco() {\n    return this.clienteForm.get('endereco');\n  }\n\n  get contatoForms() {\n    return this.clienteForm.get('contatos') as FormArray\n  }\n\n  addContato() {\n    const contato = this.fb.group({\n      nome: [],\n      email: [],\n      fone: [],\n      skype: []\n    })\n\n    this.contatoForms.push(contato);\n  }\n\n  deleteContato(i) {\n    this.contatoForms.removeAt(i);\n  }\n\n  criarCliente(clienteForm: NgForm) {\n    console.log('ClienteNovoComponent > criarCliente(clienteForm: NgForm)', clienteForm); \n    this._clienteService.criarCliente(clienteForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu salvando cliente ', this.errors);\n          this._router.navigate(['/cliente/novo']);\n        } else {\n          this._router.navigate(['/clientes']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n  }\n\n  cancel() {\n    this._router.navigate(['/clientes']);\n  }\n}\n","export class Cliente {\n    cnpj = '';\n    razaoSocial = '';\n    nomeFantasia = '';\n    endereco = '';\n    contatos: Contato[];\n  }\n  \n  export class Contato {\n    nome     = '';\n    email    = '';\n    telefone = '';\n    skype    = '';\n  }","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/clientes']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n  \\n  \\n  <div class=\\\"container\\\">\\n  \\n      Dados básicos: \\n  \\n    <form [formGroup] = \\\"clienteForm\\\" (submit)=\\\"excluirCliente(clienteForm)\\\">\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">CNPJ</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.cnpj }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!cnpj?.valid\\\" class=\\\"purple\\\">CNPJ precisar ter no mínimo 11 caracteres!</div> -->\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Razão Social</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.razaoSocial }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!razaoSocial?.valid\\\" class=\\\"purple\\\">Razão Social do cliente precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n          <div class=\\\"field-label is-one-third\\\">\\n            <label class=\\\"label\\\">Nome Fantasia</label>\\n          </div>\\n          <div class=\\\"field-body\\\">\\n            {{ cliente.nomeFantasia }}\\n          </div>\\n        </div>\\n        <!-- <div *ngIf=\\\"!nomeFantasia?.valid\\\" class=\\\"purple\\\">Nome fantasia do cliente precisar ter no mínimo 2 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Endereço</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.endereco }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!endereco?.valid\\\" class=\\\"purple\\\">Endereço do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n  \\n      Dados comerciais:\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Valor h/h</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.valorHH }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!valorHH?.valid\\\" class=\\\"purple\\\">Valor HH do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-one-third\\\">\\n          <label class=\\\"label\\\">Prazo Pagamento</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          {{ cliente.prazoPgto }}\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!prazoPgto?.valid\\\" class=\\\"purple\\\">Prazo pgto do cliente precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      Contatos: \\n      <div  class=\\\"tile is-ancestor\\\">\\n        <div class=\\\"tile is-vertical is-content\\\">\\n          <div class=\\\"tile\\\">\\n            <div class=\\\"tile is-parent is-vertical\\\">\\n              <article class=\\\"tile is-child notification is-primary\\\">\\n  \\n                <div  formArrayName=\\\"contatos\\\" *ngFor=\\\"let brand of clienteForm.controls.contatos.controls; let i = index;\\\">\\n                  <div formGroupName =\\\"{{i}}\\\">\\n                    <div class=\\\"field is-horizontal\\\">\\n                      <div class=\\\"field-label is-normal\\\">\\n                        {{brand.get('title').value}}\\n                      </div>\\n                      <div class=\\\"field-body\\\">\\n                        <div class=\\\"field\\\">\\n                          <p class=\\\"control\\\">\\n\\n\\n                            <!-- <input\\n                            type=\\\"text\\\"\\n                            formControlName=\\\"value\\\" \\n                            > -->\\n                          </p>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n  \\n                <!-- <a style=\\\"margin-left: 150px;\\\" class=\\\"button is-warning is-rounded is-small\\\" (click)=\\\"addContato()\\\">+</a> -->\\n  \\n              </article>\\n            </div>\\n  \\n            <div class=\\\"tile is-parent\\\">\\n                <article class=\\\"tile is-child notification is-info\\\">\\n                  {{ contato.nome }}  {{ contato.email }}  {{ contato.telefone }}  {{ contato.skype }}\\n                </article>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n   \\n  \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"button is-danger\\\" [disabled]=\\\"clienteForm.valid\\\">Excluir</button>\\n        \\n  \\n    </form>\\n  \\n  </div>\"","module.exports = \"button {\\n  margin: 10px; }\\n\\n.down-10 {\\n  margin-top: 30px; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, NgForm, FormControl, FormBuilder } from '@angular/forms';\nimport { Contato } from '../cliente-novo/cliente';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ClienteService } from '../cliente.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cliente-show',\n  templateUrl: './cliente-show.component.html',\n  styleUrls: ['./cliente-show.component.scss']\n})\nexport class ClienteShowComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  errors: any;\n  cliente = {\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: 0,\n    prazoPgto: 0,\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n  contato = new Contato;\n\n  contatosArray = [];\n  flContato: Boolean = false;\n  clienteForm = new FormGroup({\n      cnpj: new FormControl(),\n      razaoSocial: new FormControl(),\n      nomeFantasia: new FormControl(),\n      endereco: new FormControl(),\n      valorHH: new FormControl(),\n      prazoPgto: new FormControl(),\n      contatos: new FormControl()\n  });\n\n  contatosCliente=[\n    {\n      'brand': \"nome\"\n    },\n    {\n      'brand': \"email\"\n    },\n    {\n      'brand': \"telefone\"\n    },\n    {\n      'brand': \"skype\"\n    }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ClienteShowComponent > usuario ', this.usuarioLogado.email);\n    this.obterCliente(this._route.snapshot.params['id']);\n  }\n  \n\n  createForm(contatosCliente) {\n    var arr = [];\n    for (var i=0; i < contatosCliente.length; i++ ) {\n      arr.push(this.buildContato(contatosCliente[i]));\n    }\n    return this.clienteForm = this.formBuilder.group({\n      cnpj: this.cliente.cnpj,\n      razaoSocial: this.cliente.razaoSocial,\n      nomeFantasia: this.cliente.nomeFantasia,\n      endereco: this.cliente.endereco,\n      valorHH: this.cliente.valorHH,\n      prazoPgto: this.cliente.prazoPgto, \n      contatos: this.formBuilder.array(arr)\n      })\n  }\n\n  obterCliente(id){\n    console.log('ClienteEditComponent > obterCliente'); \n      const observable = this._clienteService.obterClienteById(id);\n      observable.subscribe(\n        (response) => {\n          this.cliente = response.json();\n          this.createForm(this.contatosCliente);\n        },\n        (err) => { },\n          () => { }\n      )\n  }\n\n  buildContato(product): FormGroup {\n    return this.formBuilder.group({\n      title: [product.brand],\n      value: ['']\n    });\n  }\n\n  excluirCliente(clienteForm: NgForm) {\n    console.log('ClienteEditComponent > excluirCliente', clienteForm); \n  }\n\n  // editarCliente(clienteForm: NgForm) {\n  //   if (!this.flContato) { this._router.navigate(['/cliente/edit']) };\n  //   console.log('ClienteEditarComponent > editarCliente(clienteForm)', clienteForm); \n  //   this._clienteService.editarCliente(this.cliente['_id'], clienteForm.value)\n  //     .subscribe(observable => {\n  //       if(observable.json().errors) {\n  //         this.errors = observable.json().errors;\n  //         console.log('Algum erro ocorreu editando cliente ', this.errors);\n  //         this._router.navigate(['/cliente/edit/' + this.cliente['_id'] ]);\n  //       } else {\n  //         this._router.navigate(['/clientes']);\n  //       }\n  //     },\n  //     err => {\n  //       throw err;\n  //     }\n  //   );\n  //   this.createForm(this.contatosCliente);\n  // }\n\n  cancel() {\n    this._router.navigate(['/clientes']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class ClienteService {\n  clientes: any;\n\n  constructor(private _http: Http) { }\n\n  obterTodos() {\n    console.log('ClienteService > obterTodos()');\n    return this._http.get('/clientes');\n  }\n\n  criarCliente(cliente) {\n    console.log('ClienteService > criarCliente(cliente)', cliente);\n    return this._http.post('cliente/novo', cliente);\n  }\n\n  obterClienteById(id) {\n    console.log('ClienteService > obterClienteById', id);\n    return this._http.get('/cliente/' + id );\n  }\n\n  editarCliente(id, cliente) {\n    console.log('ClienteService > editarCliente(cliente)', id, cliente);\n    return this._http.put('cliente/edit/' + id, cliente);\n  }\n\n  // encerrarProjeto(id) {\n  //   this._http.put('/projeto/encerrar,' + id, this.projeto).subscribe(\n  //     (res) => {\n  //       console.log('SUCESSO no encerramento do projeto: ', res.json());\n  //       this.projeto(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERRO no encerramento do projeto: ', err);\n  //     }\n  //   );\n  // }\n\n\n  \n  // getOne(recipie, id) {\n  //   this._http.get('/recipie').subscribe(\n  //   id => id.json());\n  //   console.log('services-recipie in getOne:', id)\n  // }\n\n\n\n  // updateRecipie(ingredients, callback) {\n  //   this._http.put('/recipie/update', ingredients).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS updating recipie: ', res.json());\n  //       callback(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERROR updating recipie: ', err);\n  //     }\n  //   );\n  // }\n\n  // likeRecipie(id, callback) {\n  //   this._http.put('/recipie/like/' + id, this.recipie ).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS Like recipie: ', res.json());\n  //       res.json();\n  //     },\n  //     (err) => {\n  //       console.log('ERROR like recipie: ', err);\n  //     }\n  //   );\n  // }\n\n\n\n  \n}\n\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<p>\\n  financeiro em construção!!!\\n</p>\\n\"","module.exports = \"img {\\n  width: 20%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-financeiro',\n  templateUrl: './financeiro.component.html',\n  styleUrls: ['./financeiro.component.scss']\n})\nexport class FinanceiroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, ErrorHandler, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class GlobalErrorHandlerService implements ErrorHandler {\n\n  constructor(private injector: Injector) { }    \n\n  handleError(error: any) {\n    let router = this.injector.get(Router);\n    console.log('URL: ' + router.url);\n    \n    if (error instanceof HttpErrorResponse) {\n        //Backend returns unsuccessful response codes such as 404, 500 etc.\t\t\t\t  \n        console.error('Backend returned status code: ', error.status);\n        console.error('Response body:', error.message);          \t  \n    } else {\n        //A client-side or network error occurred.\t          \n        console.error('Um erro ocorreu:', error.message);          \n    }     \n    router.navigate(['/error']);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n        <h2>Ocorreu um erro...</h2>\n    `\n})\nexport class GlobalErrorComponent {\n}","module.exports = \"<div class=\\\"container\\\">\\n   <div class=\\\"row justify-content-center\\\">\\n      <!-- <div class=\\\"media-container-column col-lg-8\\\"> -->\\n\\n        <mat-card class=\\\"example-card\\\">\\n            <mat-card-header>\\n                <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n                <mat-card-title>Torre Negra</mat-card-title>\\n                <mat-card-subtitle>Sistemas</mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <form class=\\\"example-form\\\" [formGroup]=\\\"formLogin\\\" (submit)=\\\"login()\\\"> \\n\\n                    <mat-form-field>\\n\\n                        <input matInput type=\\\"email\\\" placeholder=\\\"email\\\" formControlName=\\\"email\\\" />\\n\\n                    </mat-form-field>\\n\\n                    <mat-form-field>\\n\\n                        <input matInput type=\\\"password\\\" placeholder=\\\"senha\\\" formControlName=\\\"senha\\\" />\\n                    </mat-form-field>\\n                    <mat-card-actions>\\n                            <!-- <p><a href=\\\"#\\\" class=\\\"btn btn-primary\\\" role=\\\"button\\\"> -->\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"formLogin.invalid\\\">Entrar</button>\\n                        <!-- <button type=\\\"submit\\\" class=\\\"button is-block is-info is-large is-fullwidth\\\" [disabled]=\\\"formLogin.invalid\\\">Entrar</button> -->\\n                    </mat-card-actions>\\n                </form>\\n\\n                <div class=\\\"errors\\\">\\n                    <p>{{ errors.message }} </p>      \\n                </div>\\n\\n            </mat-card-content>\\n         </mat-card>\\n     <!-- </div> -->\\n  </div>\\n</div>\\n\"","module.exports = \".errors {\\n  color: red; }\\n\\n.example-card {\\n  max-width: 400px; }\\n\\n.example-header-image {\\n  background-image: url(\\\"/assets/images/TorreNegra-elem-mono-pos.png\\\");\\n  background-size: cover; }\\n\\n.box {\\n  margin: 100px;\\n  display: flex;\\n  justify-content: center; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from '../usuario/usuario.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n// import { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  usuario = {\n    email: '',\n    senha: '',\n    admin: ''\n  };\n  public usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  errors: any = {}\n  \n  formLogin: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private _router: Router,\n    private _usuarioService: UsuarioService\n    // public dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.usuario = { email: \"\", senha: \"\", admin: \"\"};\n    console.log('usuario logado? ', this._usuarioService.getUserLoggedIn());\n    \n    this.formLogin = this.fb.group({\n      email: '',\n      senha: '',\n      admin: ''\n    })\n  }\n\n  login() {\n    console.log('LoginComponent > login()',this.formLogin.controls.email.value)\n    const userObservable = this._usuarioService.login(this.formLogin.controls.email.value);\n    userObservable.subscribe(\n        (usuario) => {\n          this.usuario = usuario.json();\n          console.log('SUCESSO em login');\n          if (this.usuario.admin) {\n            this._router.navigate(['/projetos']);\n          } else {\n            this._router.navigate(['/apontamentos']);\n          }\n        },\n        (err) => { \n          this.errors = err.json();\n          console.log('ERRO em login', this.errors);\n          this._router.navigate(['/']);\n        }\n      )\n      this._usuarioService.setUserLoggedIn(this.usuarioLogado);\n    }\n\n  // openDialog(): void {\n  //   const dialogRef = this.dialog.open(DialogUsuario, {\n  //     width: '450px',\n  //     data: this.formLogin.controls.email.value\n  //   });\n\n  //   dialogRef.afterClosed().subscribe(result => {\n  //     console.log('The dialog was closed');\n  //     this.usuario = result;\n  //   });\n  // }\n\n}\n\n\n// @Component({\n//   selector: 'app-popup',\n//   templateUrl: '../popup/popup.component.html'\n// })\n\n// export class DialogUsuario {\n//   usuario = {\n//     email: '',\n//     senha: '',\n//     admin: ''\n//   };\n//   public usuarioLogado = {\n//     email: '',\n//     admin: ''\n//   }\n//   errors: any = {}\n//   constructor(private _usuarioService: UsuarioService, \n//     private _router: Router, \n//     public dialogRef: MatDialogRef<DialogUsuario>,\n//     @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n//   onNoClick(): void {\n//     this.dialogRef.close();\n//   }\n\n//   login(data) {\n//     console.log('LoginComponent > login()',data)\n//     const userObservable = this._usuarioService.login(data);\n//     userObservable.subscribe(\n//         (usuario) => {\n//           this.usuario = usuario.json();\n//           console.log('SUCESSO em login');\n//           if (this.usuario.admin) {\n//             this._router.navigate(['/projetos']);\n//           } else {\n//             this._router.navigate(['/apontamentos']);\n//           }\n//         },\n//         (err) => { \n//           this.errors = err.json();\n//           console.log('ERRO em login', this.errors);\n//           this._router.navigate(['/']);\n//         }\n//       )\n//       this._usuarioService.setUserLoggedIn(this.usuarioLogado);\n//     }\n\n// }","import { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule, MatButtonModule, MatOptionModule, MatSelectModule, MatRadioModule  } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatTableModule,\n        MatPaginatorModule,\n        MatButtonModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatRadioModule\n\n    ],\n    exports: [\n        MatTableModule,\n        MatPaginatorModule,\n        MatButtonModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatRadioModule\n    ],\n  })\n  export class MaterialModule { }","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  template: `<h2>Pagina não encontrada!</h2>\n             <div>\n                <button [routerLink]=\"['/projetos']\">Retornar</button>\n\t     </div>\n        `\n})\nexport class PaginaNaoEncontradaComponent {\n\tconstructor(private location: Location) { }\n\tgoBack(): void {\n          this.location.back();\n        }\n}","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<h3 mat-dialog-title>Encerrar Projeto </h3>\\n<h4>{{ data.codigo }} {{ data.descricao }}</h4>\\n<br><br>\\n<div mat-dialog-content>\\n  <p>Confirma? </p>\\n</div>\\n<br><br>\\n<div mat-dialog-actions>\\n    <div class=\\\"button-row\\\">\\n      <button style=\\\"margin: 10px;\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"onNoClick()\\\"> não </button>\\n      <button style=\\\"margin: 10px;\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"encerrarProjeto(data.id)\\\" cdkFocusInitial> sim </button>\\n    </div>\\n</div>\"","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.descricao\\\" >  {{ errors['descricao'].message }} </p>\\n      <p *ngIf=\\\"errors.cliente\\\" >  {{ errors['cliente'].message }} </p>\\n      <p *ngIf=\\\"errors.pedido\\\" >  {{ errors['pedido'].message }} </p>   \\n      <p *ngIf=\\\"errors.horasPLC\\\" >  {{ errors['horasPLC'].message }} </p>       \\n      <p *ngIf=\\\"errors.horasIHM\\\" >  {{ errors['horasIHM'].message }} </p>  \\n      <p *ngIf=\\\"errors.valorTerceiros\\\" >  {{ errors['valorTerceiros'].message }} </p>            \\n      <p *ngIf=\\\"errors.valorMateriais\\\" >  {{ errors['valorMateriais'].message }} </p>       \\n      <p *ngIf=\\\"errors.valorViagens\\\" >  {{ errors['valorViagens'].message }} </p>       \\n    </div>\\n\\n    <form (submit)='editarProjeto()' #projForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Código</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p style=\\\"margin-top: 7px;\\\" class=\\\"control\\\">\\n              {{ projeto.codigo }}\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Descrição</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"descricao\\\" \\n              minlength=8\\n              required\\n              [(ngModel)]=\\\"projeto.descricao\\\"\\n              #descricao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Cliente</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <!-- <p style=\\\"margin-top: 6px\\\" > -->\\n              <!-- {{ projeto.nomeFantasiaCliente }} -->\\n            <!-- </p> -->\\n            <div class=\\\"select is-multiple control\\\">\\n              <select name=\\\"_clienteId\\\" [(ngModel)]=\\\"clienteSelecionado\\\" required>\\n                  <option *ngFor=\\\"let c of clientes\\\" [value]=\\\"c._id\\\">\\n                    {{ c.nomeFantasia }}   \\n                  </option>\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Pedido</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"pedido\\\" \\n              required\\n              [(ngModel)]=\\\"projeto.pedido\\\"\\n              #pedido=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Horas PLC</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"horasPLC\\\" \\n              [(ngModel)]=\\\"projeto.horasPLC\\\"\\n              #horasPLC=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!horasPLC.valid\\\" class=\\\"purple\\\">horasPLC precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Horas IHM</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"horasIHM\\\" \\n              [(ngModel)]=\\\"projeto.horasIHM\\\"\\n              #descricao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!horasIHM.valid\\\" class=\\\"purple\\\">horasIHM do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Valor Terceiros</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorTerceiros\\\" \\n              [(ngModel)]=\\\"projeto.valorTerceiros\\\"\\n              #valorTerceiros=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!valorTerceiros.valid\\\" class=\\\"purple\\\">valorTerceiros precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Materiais</label>\\n        </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input \\\" \\n                type=\\\"text\\\" \\n                name=\\\"valorMateriais\\\" \\n                [(ngModel)]=\\\"projeto.valorMateriais\\\"\\n                #valorMateriais=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Viagens</label>\\n        </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input \\\" \\n                type=\\\"text\\\" \\n                name=\\\"valorViagens\\\" \\n                [(ngModel)]=\\\"projeto.valorViagens\\\"\\n                #valorViagens=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/projetos']\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"projForm.invalid\\\">Confirma</button>\\n    \\n    </form>\\n  </div>  \"","module.exports = \"button {\\n  margin: 10px; }\\n\\n.errors {\\n  color: brown; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { NgForm } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ProjetoService } from '../projeto.service';\nimport { ClienteService } from '../../cliente/cliente.service';\n\n@Component({\n  selector: 'app-projeto-edit',\n  templateUrl: './projeto-edit.component.html',\n  styleUrls: ['./projeto-edit.component.scss']\n})\nexport class ProjetoEditComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  errors: any;\n  projeto = {\n    codigo: \"\",\n    descricao: \"\",\n    _clienteId:  \"\",\n    nomeFantasiaCliente: \"\",\n    pedido:  \"\",\n    horasPLC:  0,\n    horasIHM:  0,\n    valorTerceiros:  0,\n    valorMateriais:  0,\n    valorViagens:  0\n  };\n  clientes: any;\n  cliente = {\n    _id: \"\",\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: 0,\n    prazoPgto: 0,\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n  clienteSelecionado: any;\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _clienteService: ClienteService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ProjetoEditComponent > usuario: ', this.usuarioLogado.email);\n    this.obterProjeto(this._route.snapshot.params['id']);\n  }\n\n  obterProjeto(id){\n    console.log('ProjetoEditComponent > obterProjeto'); \n      const observable = this._projetoService.obterProjetoById(id);\n      observable.subscribe(\n        (response) => {\n          this.projeto = response.json();\n          this.obterClienteNomeFantasia(this.projeto._clienteId);\n          this.obterClientes();\n        },\n        (err) => { },\n          () => { }\n      )\n  }\n\n  obterClienteNomeFantasia(id) {\n    console.log('ProjetoEditComponent > obterCliente()')\n    const clienteObservable = this._clienteService.obterClienteById(id);\n    clienteObservable.subscribe(\n      (cliente) => { \n        this.cliente = cliente.json();\n        this.projeto.nomeFantasiaCliente = this.cliente.nomeFantasia;\n        this.clienteSelecionado = this.cliente._id;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterClientes() {\n    console.log('ProjetoEditComponent  > obterClienteList()')\n    const clienteObservable = this._clienteService.obterTodos();\n    clienteObservable.subscribe(\n      (clientes) => { \n        // console.log('clientes in obterClientes ProjetoEditComponent:', clientes.json());\n        this.clientes = clientes.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  editarProjeto() {\n      console.log('ProjetoEditComponent > editarProjeto', this.projeto);\n      this.projeto._clienteId = this.clienteSelecionado; \n      this._projetoService.editarProjeto(this.projeto)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu editando projeto ', this.errors);\n          this._router.navigate(['/projeto/edit/', this.projeto['_id']]);\n        } else {\n          this._router.navigate(['/projetos']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n  }\n\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle  active\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Cadastro\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/usuarios']\\\">Usuário</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/clientes']\\\">Cliente</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/apontamentos']\\\">Apontamento</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/financeiro']\\\">Financeiro</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Relatório\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"\\\">Financeiro</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Total de horas por projeto</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Total de horas por funcionário</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Custo por pedido</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Projetos encerrados</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<!-- <div class=\\\"container\\\">\\n  <nav class=\\\"level\\\">\\n    <div class=\\\"level-left\\\">\\n        <div class=\\\"title is-4\\\">Projetos</div> \\n    </div>\\n    <div class=\\\"level-right\\\">\\n        <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/projeto/novo']\\\">Novo projeto</button>\\n    </div> \\n  </nav>\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n              <tr class=\\\"table-primary d-flex\\\">\\n                <th class=\\\"col-1.5\\\">Código</th>\\n                <th class=\\\"col-3\\\">Descrição</th>\\n                <th class=\\\"col-2\\\">Cliente</th>\\n                <th class=\\\"col-2\\\">Pedido</th>\\n                <th class=\\\"col-1\\\">Ação</th>\\n                <th class=\\\"col-1\\\"> </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                <td class=\\\"col-1.5\\\">{{ projeto['codigo'] }}</td>\\n                <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                <td class=\\\"col-2\\\">{{ projeto['nomeFantasiaCliente'] }}</td>\\n                <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                <td class=\\\"col-1\\\"><button mat-button (click)=\\\"openDialog(projeto)\\\" class=\\\"button is-danger\\\" [disabled]=\\\"projeto['encerrado']\\\">Encerrar</button></td>\\n              </tr>\\n            </tbody>\\n          </table> \\n        </div>    \\n      </div>\\n    </div>\\n  </article>\\n</div> -->\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"level-left\\\">\\n      <div style=\\\"margin-top: 20px;\\\" class=\\\"title is-4\\\">Projetos</div> \\n  </div>\\n  <div class=\\\"level-right\\\">\\n      <button mat-stroked-button color=\\\"primary\\\" [routerLink]=\\\"['/projeto/novo']\\\">Novo projeto</button>\\n  </div> \\n\\n  <mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtrar\\\">\\n  </mat-form-field>\\n\\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n      {{ dataSource }}\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"codigo\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> código </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.codigo}} </td>\\n      </ng-container>\\n\\n      <!-- Progress Column -->\\n      <ng-container matColumnDef=\\\"descricao\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> descrição </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.descricao}} </td>\\n      </ng-container>\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"cliente\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> cliente </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.cliente}} </td>\\n      </ng-container>\\n\\n      <!-- Pedido Column -->\\n      <ng-container matColumnDef=\\\"pedido\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> pedido </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.pedido}} </td>\\n      </ng-container>\\n\\n     <!-- Acao 1 Column -->\\n     <ng-container matColumnDef=\\\"acao1\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ação </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" >\\n          <div class=\\\"button-row\\\">\\n            <button mat-button color=\\\"primary\\\" [routerLink]=\\\"['/projeto/edit/', row['_id'] ]\\\">editar</button>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n     <!-- Acao 2 Column -->\\n     <ng-container matColumnDef=\\\"acao2\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\" >\\n          <div class=\\\"button-row\\\">\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"openDialog(row)\\\" [disabled]=\\\"row['encerrado']\\\">encerrar</button>\\n          </div>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </tr>\\n    </table>\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n</div>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\ntd, th {\\n  width: 25%; }\\n\\n.example-button-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-around; }\\n\\n.example-button-row button,\\n.example-button-row a {\\n  margin-right: 8px; }\\n\\nbutton {\\n  margin-top: -15px; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../projeto.service';\nimport { ClienteService } from '../../cliente/cliente.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\n\n\nexport interface PedidoData {\n  codigo: string;\n  descricao: string;\n  cliente: string;\n  pedido: string;\n  acao: string;\n}\n\n@Component({\n  selector: 'app-projeto-list',\n  templateUrl: './projeto-list.component.html',\n  styleUrls: ['./projeto-list.component.scss']\n})\nexport class ProjetoListComponent implements OnInit {\n\n\n  displayedColumns: string[] = ['codigo', 'descricao', 'cliente', 'pedido', 'acao1', 'acao2'];\n  dataSource: MatTableDataSource<PedidoData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  projetos = [{\n    _id: \"\",\n    codigo: \"\",\n    descricao: \"\",\n    _clienteId: \"\",\n    cliente: \"\",\n    pedido: \"\",\n    acao: \"\",\n    encerrado: \"\"\n  }];\n  cliente = {\n    _id: \"\",\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    valorHH: \"\",\n    prazoPgto: \"\",\n    contatos:  [{ \n      nome: \"\",\n      email: \"\",\n      telefone: 0,\n      skype: \"\"}]\n  }\n\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _clienteService: ClienteService,\n    public dialog: MatDialog\n  ) { } \n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ProjetoListComponent > usuariologado ',this.usuarioLogado.email)\n    this.obterListaProjeto();\n  }\n\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  obterListaProjeto() {\n    console.log('ProjetoListComponent > obterListaProjeto()')\n    const projetoObservable = this._projetoService.obterTodos();\n    projetoObservable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n        for (var i = 0; i < this.projetos.length; i++) {\n          this.obterCliente(this.projetos[i]._clienteId, i);\n        }\n        this.dataSource = new MatTableDataSource(this.projetos);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  obterCliente(id, i) {\n    console.log('ProjetoListComponent > obterCliente()')\n    const clienteObservable = this._clienteService.obterClienteById(id);\n    clienteObservable.subscribe(\n      (cliente) => { \n        this.cliente = cliente.json();\n        this.projetos[i].cliente = this.cliente.nomeFantasia;\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  openDialog(projeto): void {\n    console.log('ProjetoListComponent > openDialog(projeto) ')\n    let dialogRef = this.dialog.open(DialogProjeto, {\n      width: '450px',\n      data: {\n        id: projeto._id,\n        codigo: projeto.codigo,\n        descricao: projeto.descricao,\n        usuario: this.usuarioLogado\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n        console.log('The dialog was closed');\n        this.obterListaProjeto();\n    });\n  }\n\n}\n\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: '../popup/popup.component.html'\n})\n\nexport class DialogProjeto {\n\n  constructor(private _projetoService: ProjetoService, \n    private _router: Router, \n    public dialogRef: MatDialogRef<DialogProjeto>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  encerrarProjeto(id) {\n    console.log('DialogProjeto >  encerrarProjeto(id) ', id)\n    const dialogObservable = this._projetoService.encerrarProjeto(id);\n    dialogObservable.subscribe(\n      (res) => { \n        console.log('The dialog called encerrar projeto!', res);\n        this.dialogRef.close();\n      },\n      (err) => { },\n        () => { }\n    )\n    // console.log('The dialog called delete projeto!');\n    // this.dialogRef.close();\n  }\n\n}\n","module.exports = \"<mat-toolbar>\\n  <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n\\n  Dados básicos:\\n\\n  <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n    <p *ngIf=\\\"errors.codigo\\\" >  {{ errors['codigo'].message }} </p>\\n    <p *ngIf=\\\"errors.descricao\\\" >  {{ errors['descricao'].message }} </p>\\n    <p *ngIf=\\\"errors.cliente\\\" >  {{ errors['cliente'].message }} </p>\\n    <p *ngIf=\\\"errors.pedido\\\" >  {{ errors['pedido'].message }} </p>   \\n    <p *ngIf=\\\"errors.horasPLC\\\" >  {{ errors['horasPLC'].message }} </p>       \\n  </div>\\n\\n  <form (submit)='criarProjeto(projCreateForm)' #projCreateForm='ngForm'>\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Código</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input is-focused\\\" \\n            type=\\\"text\\\" \\n            name=\\\"codigo\\\" \\n            minlength=4\\n            required\\n            [(ngModel)]=\\\"projeto.codigo\\\"\\n            #codigo=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.codigo.valid\\\" class=\\\"purple\\\">* Código precisar ter 7 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Descrição</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input \\\" \\n          type=\\\"text\\\" \\n          name=\\\"descricao\\\" \\n          minlength=8\\n          required\\n          [(ngModel)]=\\\"projeto.descricao\\\"\\n          #descricao=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Cliente</label>\\n    </div>\\n\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <div class=\\\"select is-multiple control\\\">\\n          <select name=\\\"_clienteId\\\" [(ngModel)]=\\\"clienteSelecionado\\\" required>\\n              <option *ngFor=\\\"let c of clientes\\\" [value]=\\\"c._id\\\">\\n                {{ c.nomeFantasia }}\\n              </option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input \\\" \\n          type=\\\"text\\\" \\n          name=\\\"cliente\\\" \\n          minlength=4\\n          required\\n          [(ngModel)]=\\\"projeto.cliente\\\"\\n          #cliente=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div> -->\\n  </div>\\n  <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Pedido</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"pedido\\\" \\n          required\\n          [(ngModel)]=\\\"projeto.pedido\\\"\\n          #pedido=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n\\nDados financeiros:\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Horas PLC</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input \\\" \\n          type=\\\"text\\\" \\n          name=\\\"horasPLC\\\" \\n          [(ngModel)]=\\\"projeto.horasPLC\\\"\\n          #horasPLC=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!horasPLC.valid\\\" class=\\\"purple\\\">horasPLC precisar ter no mínimo 4 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Horas IHM</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input \\\" \\n          type=\\\"text\\\" \\n          name=\\\"horasIHM\\\" \\n          [(ngModel)]=\\\"projeto.horasIHM\\\"\\n          #descricao=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!horasIHM.valid\\\" class=\\\"purple\\\">horasIHM do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Valor Terceiros</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input \\\" \\n          type=\\\"text\\\" \\n          name=\\\"valorTerceiros\\\" \\n          [(ngModel)]=\\\"projeto.valorTerceiros\\\"\\n          #valorTerceiros=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!valorTerceiros.valid\\\" class=\\\"purple\\\">valorTerceiros precisar ter no mínimo 4 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n    <label class=\\\"label\\\">Valor Materiais</label>\\n    </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"valorMateriais\\\" \\n            [(ngModel)]=\\\"projeto.valorMateriais\\\"\\n            #valorMateriais=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n    <label class=\\\"label\\\">Valor Viagens</label>\\n    </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"valorViagens\\\" \\n            [(ngModel)]=\\\"projeto.valorViagens\\\"\\n            #valorViagens=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n    </div>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/projetos']\\\">Cancela</button>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"projCreateForm.invalid\\\">Confirma</button>\\n\\n  </form>\\n</div>  \"","module.exports = \"button {\\n  margin: 10px; }\\n\\nselect {\\n  margin-bottom: 15px; }\\n\\n.purple {\\n  color: purple;\\n  margin: 0px 0px 30px 60px; }\\n\\n.errors {\\n  color: brown; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ProjetoService } from '../projeto.service';\nimport { ClienteService } from '../../cliente/cliente.service';\n\n@Component({\n  selector: 'app-projeto-novo',\n  templateUrl: './projeto-novo.component.html',\n  styleUrls: ['./projeto-novo.component.scss']\n})\nexport class ProjetoNovoComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  clientes: any;\n  errors: any;\n  projetos: any;\n  projeto = {\n    codigo: \"\",\n    descricao: \"\",\n    cliente:  \"\",\n    pedido:  \"\",\n    horasPLC:  0,\n    horasIHM:  0,\n    valorTerceiros:  0,\n    valorMateriais:  0,\n    valorViagens:  0\n  };\n  clienteSelecionado: Number;\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _clienteService: ClienteService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ProjetoNovoComponent > usuarioLogado ', this.usuarioLogado.email);\n    this.obterListaCliente();\n  }\n\n  obterListaCliente() {\n    console.log('ProjetoNovoComponent > obterListaCliente()')\n    const cliObservable = this._clienteService.obterTodos();\n    cliObservable.subscribe(\n      (clientes) => { \n        this.clientes = clientes.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  criarProjeto(projForm: NgForm) {\n    console.log('ProjetoNovoComponent > novoProjeto(nProjForm)', projForm); \n    this._projetoService.criarProjeto(projForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu salvando projeto ', this.errors);\n          this._router.navigate(['/projeto/novo']);\n        } else {\n          this._router.navigate(['/projetos']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    projForm.resetForm();\n  }\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"projeto/list\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-1\\\">Código</th>\\n                  <th class=\\\"col-3\\\">Descrição</th>\\n                  <th class=\\\"col-2\\\">Cliente</th>\\n                  <th class=\\\"col-2\\\">Pedido</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <th class=\\\"col-1\\\"> </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                  <td class=\\\"col-1\\\">{{ projeto['codigo'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['cliente'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/show', projeto['_id'] ]\\\"  class=\\\"button is-danger\\\">Encerrar</button></td>\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"(click)=\\\"encerrar()\\\">Confirma</button>\\n\\n        <!-- <div class=\\\"errors\\\">\\n          <p *ngIf=\\\"errors.name\\\" >  {{ errors.name.message }} </p>\\n          <p *ngIf=\\\"errors.cuisine\\\"> {{ errors.cuisine.message }} </p>        \\n        </div> -->\\n</div>  \"","module.exports = \"img {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../projeto.service';\n\n@Component({\n  selector: 'app-projeto-show',\n  templateUrl: './projeto-show.component.html',\n  styleUrls: ['./projeto-show.component.scss']\n})\nexport class ProjetoShowComponent implements OnInit {\n  projeto: any;\n\n  constructor(\n    private _router: Router,\n    private _projetoService: ProjetoService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // encerrar() {\n  //   console.log('projeto em showProjeto: ', this.projeto); \n  //   this._projetoService.encerrarProjeto(this.projeto, (res) => {\n  //     this._router.navigate(['projeto/list', res]);\n  //   });\n  // }\n\n  cancel() {\n    this._router.navigate(['/projeto/list']);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class ProjetoService {\n  projeto: any;\n  projetos: any;\n  apontamentos: any;\n\n  constructor(private _http: Http) { }\n\n  obterApontamentosHora(usuario) {\n    console.log('ProjetoService > obterApontamentosHora(usuario)', usuario);\n    return this._http.get('/apontamentos/hora/', {params: { usuario: usuario}});\n\n  }\n\n  obterApontamentosDespesa(usuario) {\n    console.log('ProjetoService > obterApontamentosDespesa(usuario)', usuario);\n    return this._http.get('/apontamentos/despesa/', {params: { usuario: usuario}});\n\n  }\n\n  obterTodos() {\n    console.log('ProjetoService > obterTodos()');\n    return this._http.get('/projetos');\n  }\n\n  criarProjeto(projeto) {\n    console.log('ProjetoService > criarProjeto(projeto)', projeto);\n    return this._http.post('projeto/novo', projeto);\n  }\n\n  editarProjeto(projeto) {\n    console.log('ProjetoService > editarProjeto(projeto)', projeto);\n    return this._http.put('projeto/edit/' + projeto['_id'], projeto);\n  }\n\n  apontamentoNovo(id, apontamento) {\n    console.log('ProjetoService > apontamentoNovo(id, apontamento)', id, apontamento);\n    return this._http.put('apontamento/novo/' + id, apontamento);\n  }\n\n  encerrarProjeto(id) {\n    console.log('ProjetoService > encerrarProjeto(id)', id);\n    return this._http.put('/projeto/encerrar/' + id, this.projeto);\n  }\n\n  obterProjetoById(id) {\n    console.log('ProjetoService > obterProjetoById', id);\n    return this._http.get('/projeto/' + id );\n  }\n\n  encerrarApontamento(projeto) {\n    console.log('ProjetoService > encerrarApontamento(projeto)', projeto);\n    return this._http.put('/apontamento/encerrar/' + projeto['id'], projeto);\n  }\n  \n}\n","module.exports = \"<mat-toolbar>\\n  <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n<p>\\n  relatorio-financeiro works!\\n</p>\\n\"","module.exports = \"img {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-relatorio-financeiro',\n  templateUrl: './relatorio-financeiro.component.html',\n  styleUrls: ['./relatorio-financeiro.component.scss']\n})\nexport class RelatorioFinanceiroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n  \\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n\\n      Dados do usuário:\\n\\n      <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n        <p *ngIf=\\\"errors.nome\\\" >  {{ errors['nome'].message }} </p>\\n        <p *ngIf=\\\"errors.email\\\" >  {{ errors['email'].message }} </p>\\n        <p *ngIf=\\\"errors.funcao\\\" >  {{ errors['funcao'].message }} </p>\\n        <p *ngIf=\\\"errors.custoHora\\\" >  {{ errors['custoHora'].message }} </p>       \\n      </div>\\n\\n    <form (submit)='editarUsuario()' #userForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Nome</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                  <input \\n                  class=\\\"input\\\" \\n                  type=\\\"text\\\" \\n                  name=\\\"nome\\\" \\n                  minlength=4\\n                  required\\n                  [(ngModel)]=\\\"usuario.nome\\\"\\n                  #nome=\\\"ngModel\\\"\\n                  />\\n                </p>\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">E-mail</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"email\\\" \\n              required\\n              [(ngModel)]=\\\"usuario.email\\\"\\n              #email=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Função</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"funcao\\\" \\n              minlength=4\\n              required\\n              [(ngModel)]=\\\"usuario.funcao\\\"\\n              #funcao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Custo/hora</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"custoHora\\\" \\n              required\\n              [(ngModel)]=\\\"usuario.custoHora\\\"\\n              #custoHora=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n          <label class=\\\"checkbox\\\">\\n              <input \\n              type=\\\"checkbox\\\"\\n              name=\\\"admin\\\"\\n              [(ngModel)]=\\\"usuario.admin\\\">\\n            &nbsp; Adminstrador  \\n          </label>\\n        </div>\\n\\n    \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/usuarios']\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"userForm.invalid\\\">Confirma</button>\\n    \\n    </form>\\n  </div>  \\n\"","module.exports = \"button {\\n  margin: 10px; }\\n\\nselect {\\n  margin-bottom: 15px; }\\n\\n.purple {\\n  color: purple;\\n  margin: 0px 0px 30px 60px; }\\n\\n.errors {\\n  color: brown; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-usuario-edit',\n  templateUrl: './usuario-edit.component.html',\n  styleUrls: ['./usuario-edit.component.scss']\n})\nexport class UsuarioEditComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  usuario = { \n    nome: \"\",\n    email: \"\",\n    funcao: \"\",\n    custoHora: 0,\n    admin: false\n  };\n  errors: any;\n  \n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('ProjetoEditComponent > usuarioLogado ', this.usuarioLogado.email);\n    this.obterUsuario(this._route.snapshot.params['id']);\n  }\n\n  obterUsuario(id){\n    console.log('UsuarioEditComponent > obterUsuario'); \n    const observable = this._usuarioService.obterUsuarioById(id);\n    observable.subscribe((response) => {\n      this.usuario = response.json();\n    });\n  }\n\n  editarUsuario() {\n    console.log('UsuarioEditComponent > obterUsuario()', this.usuario); \n    this._usuarioService.editarUsuario(this.usuario)\n    .subscribe(observable => {\n      if(observable.json().errors) {\n        this.errors = observable.json().errors;\n        console.log('Algum erro ocorreu editando usuario ', this.errors);\n        this._router.navigate(['/usuario/edit/', this.usuario['_id']]);\n      } else {\n        this._router.navigate(['/usuarios']);\n      }\n    },\n    err => {\n      throw err;\n    }\n  );\n}\n\n\n}\n","module.exports = \"<mat-toolbar>\\n  <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\"> \\n    <nav class=\\\"level\\\">\\n      <div class=\\\"level-left\\\">\\n          <div class=\\\"title is-4\\\">Usuário</div> \\n      </div>\\n      <div class=\\\"level-right\\\">\\n          <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/usuario/novo']\\\">Novo usuário</button>\\n      </div> \\n    </nav>\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-2\\\">Nome</th>\\n                  <th class=\\\"col-3\\\">E-mail</th>\\n                  <th class=\\\"col-2\\\">Função</th>\\n                  <th class=\\\"col-1\\\">Custo/hr</th>\\n                  <th class=\\\"col-1\\\">Admin</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <th class=\\\"col-1\\\"> </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let u  of usuarios\\\" class=\\\"d-flex\\\">\\n                  <td class=\\\"col-2\\\">{{ u['nome'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ u['email'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ u['funcao'] }}</td>\\n                  <td class=\\\"col-1\\\">{{ u['custoHora'] | number : '1.2-2' }}</td>\\n                  <td class=\\\"col-1\\\">\\n                  <img [src]=\\\"u['admin'] ? frontPath : backPath\\\"></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/usuario/edit/', u['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/usuario/show', u['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td>\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n</div>\"","module.exports = \"img {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-usuario-list',\n  templateUrl: './usuario-list.component.html',\n  styleUrls: ['./usuario-list.component.scss']\n})\nexport class UsuarioListComponent implements OnInit {\n\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  usuarios: any;\n  frontPath:string = \"../../assets/images/check.png\";\n\n  backPath:string =  \"\";\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('UsuarioListComponent > usuariologado',this.usuarioLogado.email)\n    this.obterListaUsuario();\n  }\n\n  obterListaUsuario() {\n    console.log('ProjetoListComponent > obterListaUsuario()')\n    const usuarioObservable = this._usuarioService.obterTodos();\n    usuarioObservable.subscribe(\n      (usuarios) => { \n        this.usuarios = usuarios.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/usuarios']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  \\n  Dados do usuário:\\n\\n  <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n    <p *ngIf=\\\"errors.nome\\\" >  {{ errors['nome'].message }} </p>\\n    <p *ngIf=\\\"errors.email\\\" >  {{ errors['email'].message }} </p>\\n    <p *ngIf=\\\"errors.funcao\\\" >  {{ errors['funcao'].message }} </p>\\n    <p *ngIf=\\\"errors.custoHora\\\" >  {{ errors['custoHora'].message }} </p>       \\n  </div>\\n\\n  <form (submit)=\\\"criarUsuario(userForm)\\\" #userForm='ngForm'>\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Nome</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input is-focused\\\" \\n            type=\\\"text\\\" \\n            name=\\\"nome\\\" \\n            minlength=4\\n            required\\n            [(ngModel)]=\\\"usuario.nome\\\"\\n            #nome=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!codigo.valid\\\" class=\\\"purple\\\">Código precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">e-mail</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\" \\n            name=\\\"email\\\" \\n            required\\n            pattern=\\\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n            [(ngModel)]=\\\"usuario.email\\\"\\n            #email=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  <!-- <div *ngIf=\\\"!codigo.valid\\\" class=\\\"purple\\\">Código precisar ter no mínimo 4 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Função</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"funcao\\\" \\n          minlength=4\\n          required\\n          [(ngModel)]=\\\"usuario.funcao\\\"\\n          #funcao=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!cliente.valid\\\" class=\\\"purple\\\">Função precisar ter no mínimo 4 caracteres!</div> -->\\n\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Custo hora</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"custoHora\\\" \\n          required\\n          [(ngModel)]=\\\"usuario.custoHora\\\"\\n          #custoHora=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <label class=\\\"checkbox\\\">\\n        <input \\n        type=\\\"checkbox\\\"\\n        name=\\\"admin\\\"\\n        [(ngModel)]=\\\"usuario.admin\\\">\\n        &nbsp; Administrador  \\n    </label>\\n  </div>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"userForm.invalid\\\">Confirma</button>\\n\\n  </form>\\n  \\n</div>\"","module.exports = \"button {\\n  margin: 10px; }\\n\\nselect {\\n  margin-bottom: 15px; }\\n\\n.purple {\\n  color: purple;\\n  margin: 0px 0px 30px 60px; }\\n\\n.errors {\\n  color: brown; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-usuario-novo',\n  templateUrl: './usuario-novo.component.html',\n  styleUrls: ['./usuario-novo.component.scss']\n})\nexport class UsuarioNovoComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  usuario = { \n    nome: \"\",\n    email: \"\",\n    funcao: \"\",\n    custoHora: 0,\n    admin: false\n  };\n  errors: any;\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('UsuarioNovoComponent > usuariologado ', this.usuarioLogado.email);\n  }\n\n  criarUsuario(userForm: NgForm) {\n  console.log('UsuarioNovoComponent > criarUsuario(userForm)', userForm); \n  this._usuarioService.criarUsuario(userForm.value)\n    .subscribe(observable => {\n      if(observable.json().errors) {\n        this.errors = observable.json().errors;\n        console.log('Algum erro ocorreu salvando usuario ', this.errors);\n        this._router.navigate(['/usuario/novo']);\n      } else {\n        this._router.navigate(['/usuarios']);\n      }\n    },\n      err => {\n        throw err;\n      }\n    );\n    userForm.resetForm();\n  }\n\n  cancel(){\n    this._router.navigate(['/usuarios']);\n  }\n\n}\n","module.exports = \"<mat-toolbar>\\n    <img src=\\\"../assets/images/TorreNegra-logo-comp-horz-cor-pos-bgB.png\\\">\\n</mat-toolbar>\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n\\n    Dados do usuário:\\n\\n  <form (submit)='excluirUsuario()' #userForm='ngForm'>\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Nome</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.nome }}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">E-mail</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.email }}\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n    \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Função</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.funcao }}\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Custo/hora</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        {{ usuario.custoHora }}\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n    <div class=\\\"field is-horizontal\\\">\\n        <label class=\\\"checkbox\\\">\\n          <figure class=\\\"image is-32x32\\\">\\n            <img [src]=\\\"usuario['admin'] ? frontPath : backPath \\\">\\n          </figure>\\n          &nbsp; Adminstrador  \\n        </label>\\n      </div>\\n\\n  \\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/usuarios']\\\">Cancela</button>\\n    <button type=\\\"submit\\\" class=\\\"button is-danger\\\"  [disabled]=\\\"userForm.invalid\\\">Excluir</button>\\n  \\n  </form>\\n</div>  \\n\"","module.exports = \"button {\\n  margin: 10px; }\\n\\nselect {\\n  margin-bottom: 15px; }\\n\\n.purple {\\n  color: purple;\\n  margin: 0px 0px 30px 60px; }\\n\\n.errors {\\n  color: brown; }\\n\\nimg {\\n  width: 18%;\\n  height: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuarioService } from '../usuario.service';\n\n@Component({\n  selector: 'app-usuario-show',\n  templateUrl: './usuario-show.component.html',\n  styleUrls: ['./usuario-show.component.scss']\n})\nexport class UsuarioShowComponent implements OnInit {\n  usuarioLogado = {\n    email: '',\n    admin: ''\n  }\n  usuario = { \n    nome: \"\",\n    email: \"\",\n    funcao: \"\",\n    custoHora: 0,\n    admin: \"\"\n  };\n  frontPath:string = \"../../assets/images/check.png\";\n\n  backPath:string =  \"\";\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.usuarioLogado = this._usuarioService.getUserLoggedIn();\n    console.log('UsuarioShowComponent > usuarioLogado ', this.usuarioLogado.email);\n    this.obterUsuario(this._route.snapshot.params['id']);\n  }\n\n  obterUsuario(id){\n    console.log('UsuarioEditComponent > obterUsuario'); \n    const observable = this._usuarioService.obterUsuarioById(id);\n    observable.subscribe((response) => {\n      this.usuario = response.json();\n    });\n  }\n\n  excluirUsuario(id){\n    console.log('excluir Usuario OK!!!');\n  \n  }\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  private isUserLoggedIn;\n  public usuarioLogado;\n\n\n  constructor(private _http: Http) { \n    this.isUserLoggedIn = false;\n  }\n\n  login(usuario) {\n    console.log('UsuarioService > login(usuario)', usuario);\n    this.usuarioLogado = usuario;\n    return this._http.get('/login/', { params: { usuario: usuario } });\n  }\n\n  setUserLoggedIn(usuario) {\n    this.isUserLoggedIn = true;\n    usuario = this.usuarioLogado;\n  }\n\n  getUserLoggedIn() {\n    this.login(this.usuarioLogado);\n    console.log('getUserLoggedIn() ',this.usuarioLogado);\n    return this.usuarioLogado;\n  }\n\n\n  obterTodos() {\n    console.log('UsuarioService > obterTodos()');\n    return this._http.get('/usuarios');\n  }\n\n  obterUsuarioById(id) {\n    console.log('UsuarioService > obterUsuarioById', id);\n    return this._http.get('/usuario/' + id );\n  }\n\n  criarUsuario(usuario) {\n    console.log('UsuarioService > criarUsuario(usuario)', usuario);\n    return this._http.post('usuario/novo', usuario);\n  }\n\n  editarUsuario(usuario) {\n    console.log('UsuarioService > editarUsuario(usuario)', usuario);\n    return this._http.put('usuario/edit/' + usuario['_id'], usuario);\n  }\n\n  // login(user, callback) {\n  //   this._http.post('/login/', user).subscribe(\n  //     (res) => {\n  //       if (!callback) {\n  //         console.log('Email nao cadastrado, tente novamente!');\n  //       } else {\n  //         console.log('SUCCESS in login: ', res);\n  //         callback(res.json());\n  //       }\n  //     },\n  //     (err) => {\n  //       console.log('ERROR in login: ', err.json());\n  //     }\n  //   );\n  // }\n\n\n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}