{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apontamento/apontamento-list/apontamento-list.component.css","webpack:///./src/app/apontamento/apontamento-list/apontamento-list.component.html","webpack:///./src/app/apontamento/apontamento-list/apontamento-list.component.ts","webpack:///./src/app/apontamento/apontamento.component.css","webpack:///./src/app/apontamento/apontamento.component.html","webpack:///./src/app/apontamento/apontamento.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.css","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.html","webpack:///./src/app/cliente/cliente-edit/cliente-edit.component.ts","webpack:///./src/app/cliente/cliente-list/cliente-list.component.css","webpack:///./src/app/cliente/cliente-list/cliente-list.component.html","webpack:///./src/app/cliente/cliente-list/cliente-list.component.ts","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.css","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.html","webpack:///./src/app/cliente/cliente-novo/cliente-novo.component.ts","webpack:///./src/app/cliente/cliente-show/cliente-show.component.css","webpack:///./src/app/cliente/cliente-show/cliente-show.component.html","webpack:///./src/app/cliente/cliente-show/cliente-show.component.ts","webpack:///./src/app/cliente/cliente.service.ts","webpack:///./src/app/financeiro/financeiro.component.css","webpack:///./src/app/financeiro/financeiro.component.html","webpack:///./src/app/financeiro/financeiro.component.ts","webpack:///./src/app/global-error-handler.service.ts","webpack:///./src/app/global-error/global-error.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/pagina-nao-encontrada/pagina-nao-encontrada.component.ts","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.css","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.html","webpack:///./src/app/projeto/projeto-edit/projeto-edit.component.ts","webpack:///./src/app/projeto/projeto-list/projeto-list.component.css","webpack:///./src/app/projeto/projeto-list/projeto-list.component.html","webpack:///./src/app/projeto/projeto-list/projeto-list.component.ts","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.css","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.html","webpack:///./src/app/projeto/projeto-novo/projeto-novo.component.ts","webpack:///./src/app/projeto/projeto-show/projeto-show.component.css","webpack:///./src/app/projeto/projeto-show/projeto-show.component.html","webpack:///./src/app/projeto/projeto-show/projeto-show.component.ts","webpack:///./src/app/projeto/projeto.service.ts","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.css","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.html","webpack:///./src/app/relatorio/relatorio-financeiro/relatorio-financeiro.component.ts","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.css","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.html","webpack:///./src/app/usuario/usuario-edit/usuario-edit.component.ts","webpack:///./src/app/usuario/usuario-list/usuario-list.component.css","webpack:///./src/app/usuario/usuario-list/usuario-list.component.html","webpack:///./src/app/usuario/usuario-list/usuario-list.component.ts","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.css","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.html","webpack:///./src/app/usuario/usuario-novo/usuario-novo.component.ts","webpack:///./src/app/usuario/usuario-show/usuario-show.component.css","webpack:///./src/app/usuario/usuario-show/usuario-show.component.html","webpack:///./src/app/usuario/usuario-show/usuario-show.component.ts","webpack:///./src/app/usuario/usuario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"box\\\">\\n  <nav class=\\\"level\\\">\\n    <div class=\\\"level-left\\\">\\n        <div class=\\\"title is-4\\\">Apontamentos</div> \\n    </div>\\n    <div class=\\\"level-right\\\">\\n        <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/apontamento']\\\">Novo apontamento</button>\\n    </div> \\n  </nav>\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-1\\\">Id projeto</th>\\n                  <th class=\\\"col-3\\\">Descrição projeto</th>\\n                  <th class=\\\"col-2\\\">Cliente</th>\\n                  <th class=\\\"col-2\\\">Pedido</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <th class=\\\"col-1\\\"> </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                  <td class=\\\"col-1\\\">{{ projeto['_id'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['cliente'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/', projeto['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td>\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProjetoService } from '../../projeto/projeto.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-apontamento-list',\n  templateUrl: './apontamento-list.component.html',\n  styleUrls: ['./apontamento-list.component.css']\n})\nexport class ApontamentoListComponent implements OnInit {\n  apontamentos: any[];\n  \n  constructor(\n    private _projetoService: ProjetoService,\n    private _usuarioService: UsuarioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.obterListaApontamentos();\n  }\n\n  obterListaApontamentos(){\n    this._projetoService.obterApontamentos((res) => {\n      this.apontamentos = res;\n    });\n  }\n\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\n.purple {\\n    color: purple;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n<h3>  {{today | date:'short' }} </h3>\\n<form  #formData=\\\"ngForm\\\" id=\\\"newDespesaForm\\\">\\n  <h3>Projeto</h3>\\n  <div class=\\\"select is-multiple\\\">\\n    <select name=\\\"projeto\\\" [(ngModel)]=\\\"apontamento.projeto\\\" required>\\n        <option *ngFor=\\\"let p of projects\\\">\\n          {{ p.id }} {{ p.descricao }}\\n        </option>\\n    </select>\\n    <div *ngIf=\\\"!apontamento.projeto.valid\\\" class=\\\"purple\\\"> * Selecione um projeto!</div>\\n  \\n  </div>\\n\\n  <h3>Tipo de apontamento</h3>\\n  <div class=\\\"select is-multiple\\\">\\n      <select name=\\\"tipo\\\" [(ngModel)]=\\\"apontamento.tipo\\\">\\n        <option>Hora </option>\\n        <option>Despesa </option>\\n      </select>\\n      <div *ngIf=\\\"!apontamento.tipo.valid\\\" class=\\\"purple\\\"> * Selecione um tipo de apontamento!</div>\\n  \\n      <!-- Tipo de Apontamento: Despesa -->\\n      <div class=\\\"control\\\" *ngIf=\\\"(apontamento.tipo=='Despesa')\\\">\\n        <div class=\\\"field is-horizontal\\\" style=\\\"margin-top: 20px;\\\" >\\n          <select name=\\\"opcaoDespesa\\\" [(ngModel)]=\\\"apontamento.opcaoDespesa\\\" > \\n            <option>alimentação </option>\\n            <option>hospedagem </option>\\n            <option>pedágio </option>\\n            <option>transporte </option>\\n            <option>outros </option>\\n          </select>\\n          <div *ngIf=\\\"!apontamento.opcaoDespesa.valid\\\" class=\\\"purple\\\"> * Selecione uma opção de despesa!</div>\\n\\n        </div>\\n            <div class=\\\"control\\\" *ngIf=\\\"apontamento.opcaoDespesa=='outros'\\\">\\n            <div class=\\\"field is-horizontal\\\">\\n              <p class=\\\"control\\\">\\n                <textarea \\n                class=\\\"textarea is-warning\\\" \\n                type=\\\"text\\\" \\n                rows=\\\"2\\\"\\n                name=\\\"descricao\\\" \\n                placeholder=\\\"Descrição da despesa\\\"\\n                [(ngModel)]=\\\"apontamento.despesa.descricao\\\"\\n                #descricao=\\\"ngModel\\\">\\n                </textarea>\\n              </p>\\n            </div>\\n        </div>\\n        <div class=\\\"field is-horizontal\\\" >\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input\\\" \\n                type=\\\"text\\\" \\n                name=\\\"valor\\\" \\n                [(ngModel)]=\\\"apontamento.despesa.valor\\\"\\n                #valor=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- Tipo de Apontamento: Hora -->\\n      <div *ngIf=\\\"(apontamento.tipo=='Hora')\\\">\\n          <div style=\\\"border: solid 2px green; margin-top: 10px;  padding: 10px;\\\">\\n            <select name=\\\"inicio\\\" [(ngModel)]=\\\"apontamento.hora.inicio\\\" > \\n                <option>{{today | date:'short'}}</option>\\n              </select>\\n              \\n          </div>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTipoApontamento()\\\" [disabled]=\\\"formData.invalid\\\">Confirma</button>\\n\\n      <!-- <div class=\\\"errors\\\">\\n        <p *ngIf=\\\"errors.name\\\" >  {{ errors.name.message }} </p>\\n        <p *ngIf=\\\"errors.cuisine\\\"> {{ errors.cuisine.message }} </p>        \\n      </div> -->\\n\\n    </div>\\n  </form>\\n\\n\\n<!-- <div style=\\\"margin-top: 15px; width: 50%;\\\">\\n        <ngbd-datepicker-popup></ngbd-datepicker-popup>\\n    </div> -->\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { NgbdDatepickerPopup } from './datepicker-popup';\nimport { ProjetoService } from '../projeto/projeto.service';\nimport { UsuarioService } from '../usuario/usuario.service';\n\n@Component({\n  selector: 'app-apontamento',\n  templateUrl: './apontamento.component.html',\n  styleUrls: ['./apontamento.component.css']\n})\nexport class ApontamentoComponent implements OnInit {\nusuario: any;\ntoday = Date.now();\nprojects: any[];\ncurProject: any = this.projects[0];\napontamento: any = {\n  projeto: \"\",\n  tipo: \"\",\n  opcaoDespesa: \"\",\n  hora: {\n    inicio: 0,\n    fim: 0\n    },\n  despesa: {\n    descricao: \"\",\n    valor: 0\n  }\n}\napontamentos: any[];\n\nconstructor(\n  private _projetoService: ProjetoService,\n  private _usuarioService: UsuarioService,\n  private _router: Router\n) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.login;\n    console.log('apontamento:', this.apontamento);\n\n  }\n\n  // setProject(id: any): void {\n  //   console.log('id projeto selecionado:',id);\n  //   this.curProject = this.projects.filter(value => value.id === parseInt(id));\n  //   console.log('curProject in setProject:',this.curProject[0]);\n  // }\n\n  setTipoApontamento(): void {\n    console.log('apontaro:', this.apontamento);\n    if (this.apontamento.tipo != 'Hora') {\n      this.apontamento.hora.inicio = 0;\n      this.apontamento.hora.fim = 0;\n    }\n    if (this.apontamento.opcaoDespesa != 'outros') {\n      this.apontamento.despesa.descricao = this.apontamento.opcaoDespesa;\n    }\n  }\n\n  // setInicioAtendimento() {\n  //   this.apontamento.hora.inicio = this.today;\n  //   console.log('INICIO:', this.apontamento.hora.inicio);\n  // }\n\n  // setTipoDespesa(id: any) {\n  //   if (id === 'outros') {\n  //     this.apontamento.tipo = 'Despesa';\n  //   } else { \n  //     this.apontamento.tipo = id;\n  //   }\n  // }\n\n  cancel() {\n    this._router.navigate(['/projeto/list']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n// import { ApontamentoComponent } from './apontamento/apontamento.component';\nimport { FinanceiroComponent } from './financeiro/financeiro.component';\nimport { UsuarioNovoComponent } from './usuario/usuario-novo/usuario-novo.component';\nimport { UsuarioEditComponent } from './usuario/usuario-edit/usuario-edit.component';\nimport { UsuarioListComponent } from './usuario/usuario-list/usuario-list.component';\nimport { ProjetoListComponent } from './projeto/projeto-list/projeto-list.component';\nimport { ProjetoNovoComponent } from './projeto/projeto-novo/projeto-novo.component';\nimport { ProjetoEditComponent } from './projeto/projeto-edit/projeto-edit.component';\nimport { ProjetoShowComponent } from './projeto/projeto-show/projeto-show.component';\nimport { ClienteListComponent } from './cliente/cliente-list/cliente-list.component';\nimport { ClienteNovoComponent } from './cliente/cliente-novo/cliente-novo.component';\nimport { ClienteEditComponent } from './cliente/cliente-edit/cliente-edit.component';\nimport { ClienteShowComponent } from './cliente/cliente-show/cliente-show.component';\nimport { PaginaNaoEncontradaComponent } from './pagina-nao-encontrada/pagina-nao-encontrada.component';\nimport { RelatorioFinanceiroComponent } from './relatorio/relatorio-financeiro/relatorio-financeiro.component';\nimport { ApontamentoListComponent } from './apontamento/apontamento-list/apontamento-list.component';\nimport { GlobalErrorComponent } from './global-error/global-error.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'apontamentos',\n    component:ApontamentoListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'financeiro',\n    component: FinanceiroComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'relatorio/financeiro',\n    component: RelatorioFinanceiroComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/novo',\n    component: UsuarioNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuario/edit/:id',\n    component: UsuarioEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'usuarios',\n    component: UsuarioListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'clientes',\n    component: ClienteListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/novo',\n    component: ClienteNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/edit/:id',\n    component: ClienteEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'cliente/show/:id',\n    component: ClienteShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projetos',\n    component: ProjetoListComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/novo',\n    component: ProjetoNovoComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/edit/:id',\n    component: ProjetoEditComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'projeto/show/:id',\n    component: ProjetoShowComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'error',\n    component: GlobalErrorComponent\n },\n  { \n    path: 'reset',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: PaginaNaoEncontradaComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'boilerplate';\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalErrorComponent } from './global-error/global-error.component';\n\nimport { ProjetoService } from './projeto/projeto.service';\nimport { UsuarioService } from './usuario/usuario.service';\nimport { ClienteService } from './cliente/cliente.service';\nimport { GlobalErrorHandlerService } from './global-error-handler.service';\n\n// import { NgbdDatepickerPopup } from './apontamento/datepicker-popup';\n// import { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ApontamentoComponent } from './apontamento/apontamento.component';\nimport { ApontamentoListComponent } from './apontamento/apontamento-list/apontamento-list.component';\nimport { ClienteEditComponent } from './cliente/cliente-edit/cliente-edit.component';\nimport { ClienteNovoComponent } from './cliente/cliente-novo/cliente-novo.component';\nimport { ClienteShowComponent } from './cliente/cliente-show/cliente-show.component';\nimport { UsuarioListComponent } from './usuario/usuario-list/usuario-list.component';\nimport { UsuarioEditComponent } from './usuario/usuario-edit/usuario-edit.component';\nimport { UsuarioNovoComponent } from './usuario/usuario-novo/usuario-novo.component';\nimport { UsuarioShowComponent } from './usuario/usuario-show/usuario-show.component';\nimport { LoginComponent } from './login/login.component';\nimport { FinanceiroComponent } from './financeiro/financeiro.component';\nimport { ProjetoListComponent } from './projeto/projeto-list/projeto-list.component';\nimport { ProjetoNovoComponent } from './projeto/projeto-novo/projeto-novo.component';\nimport { ProjetoShowComponent } from './projeto/projeto-show/projeto-show.component';\nimport { ProjetoEditComponent } from './projeto/projeto-edit/projeto-edit.component';\nimport { ClienteListComponent } from './cliente/cliente-list/cliente-list.component';\nimport { RelatorioFinanceiroComponent } from './relatorio/relatorio-financeiro/relatorio-financeiro.component';\nimport { PaginaNaoEncontradaComponent } from './pagina-nao-encontrada/pagina-nao-encontrada.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ApontamentoComponent,\n    ApontamentoListComponent,\n    FinanceiroComponent,\n    ClienteListComponent,\n    ClienteNovoComponent,\n    ClienteEditComponent,\n    ClienteShowComponent,\n    UsuarioListComponent,\n    UsuarioEditComponent,\n    UsuarioNovoComponent,\n    UsuarioShowComponent,\n    ProjetoListComponent,\n    ProjetoNovoComponent,\n    ProjetoShowComponent,\n    ProjetoEditComponent,\n    RelatorioFinanceiroComponent,\n    PaginaNaoEncontradaComponent,\n    GlobalErrorComponent\n    // NgbdDatepickerPopup,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    AppRoutingModule\n    // NgbModule,\n    // NgbModule.forRoot()\n  ],\n  providers: [\n    ProjetoService,\n    UsuarioService,\n    ClienteService,\n    GlobalErrorHandlerService,\n    { provide: ErrorHandler, useClass: GlobalErrorHandlerService }    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  cliente-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cliente-edit',\n  templateUrl: './cliente-edit.component.html',\n  styleUrls: ['./cliente-edit.component.css']\n})\nexport class ClienteEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n      <nav class=\\\"level\\\">\\n        <div class=\\\"level-left\\\">\\n            <div class=\\\"title is-4\\\">Cliente</div> \\n        </div>\\n        <div class=\\\"level-right\\\">\\n            <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/cliente/novo']\\\">Novo cliente</button>\\n        </div> \\n      </nav>\\n    <article class=\\\"media\\\">\\n      <div class=\\\"media-content\\\">\\n        <div class=\\\"content\\\">\\n  \\n          <br>\\n          <div id=\\\"scroll\\\">\\n            <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n              <thead>\\n                  <tr class=\\\"table-primary d-flex\\\">\\n                    <th class=\\\"col-1\\\">CNPJ</th>\\n                    <th class=\\\"col-3\\\">Razão Social</th>\\n                    <th class=\\\"col-3\\\">Primeiro Contato </th>\\n                    <th class=\\\"col-2\\\">e-mail </th>\\n                    <th class=\\\"col-1\\\">Fone </th>\\n                    <th class=\\\"col-1\\\">Ação</th>\\n                    <th class=\\\"col-1\\\"> </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let cliente of clientes\\\" class=\\\"d-flex\\\">\\n                    <td class=\\\"col-1\\\">{{ cliente['cnpj'] }}</td>\\n                    <td class=\\\"col-3\\\">{{ cliente['razaoSocial'] }}</td>\\n                    <td class=\\\"col-2\\\">{{ cliente['contato1'] }}</td>\\n                    <td class=\\\"col-2\\\">{{ cliente['emailContato1'] }}</td>\\n                    <td class=\\\"col-2\\\">{{ cliente['telContato1'] | number : '1.2-2' }}</td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/cliente/edit/', cliente['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/cliente/show', cliente['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td>\\n                  </tr>\\n                </tbody>\\n              </table> \\n            </div>    \\n          </div>\\n        </div>\\n      </article>\\n  </div>\\n    \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ClienteService } from '../cliente.service';\n\n@Component({\n  selector: 'app-cliente-list',\n  templateUrl: './cliente-list.component.html',\n  styleUrls: ['./cliente-list.component.css']\n})\nexport class ClienteListComponent implements OnInit {\n  clientes: any;\n\n  constructor(\n    private _clienteService: ClienteService\n  ) { }\n\n  ngOnInit() {\n    this.obterClientes();\n  }\n\n  obterClientes() {\n    console.log('ClienteListComponent > obterClienteList()')\n    const clienteObservable = this._clienteService.obterTodos();\n    clienteObservable.subscribe(\n      (clientes) => { \n        this.clientes = clientes.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 175px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"projeto/list\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n  \\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.cnpj\\\" >  {{ errors['cnpj'].message }} </p>\\n      <p *ngIf=\\\"errors.razaoSocial\\\" >  {{ errors['razaoSocial'].message }} </p>\\n      <p *ngIf=\\\"errors.nomeFantasia\\\" >  {{ errors['nomeFantasia'].message }} </p>\\n      <p *ngIf=\\\"errors.endereco\\\" >  {{ errors['endereco'].message }} </p>\\n      <p *ngIf=\\\"errors.contato1.nome\\\" >  {{ errors['contato1']['nome'].message }} </p> \\n      <p *ngIf=\\\"errors.contato1.email\\\" >  {{ errors['contato1']['email'].message }} </p>\\n      <p *ngIf=\\\"errors.contato1.telefone\\\" >  {{ errors['contato1']['telefone'].message }} </p>         \\n    </div>\\n\\n    Dados básicos: \\n\\n    <form (submit)=\\\"criarCliente(cliForm)\\\" #cliForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">CNPJ</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input is-focused\\\" \\n              type=\\\"text\\\" \\n              name=\\\"cnpj\\\" \\n              minlength=11\\n              required\\n              [(ngModel)]=\\\"cliente.cnpj\\\"\\n              #cnpj=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!cliente.cnpj.valid\\\" class=\\\"purple\\\">* CNPJ precisar ter no mínimo 11 caracteres!</div>\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Razão Social</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"razaoSocial\\\" \\n              minlength=3\\n              required\\n              [(ngModel)]=\\\"cliente.razaoSocial\\\"\\n              #razaoSocial=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!cliente.razaoSocial.valid\\\" class=\\\"purple\\\">* Razão Social do cliente precisar ter no mínimo 3 caracteres!</div>\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Nome Fantasia</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"nomeFantasia\\\" \\n              minlength=2\\n              required\\n              [(ngModel)]=\\\"cliente.nomeFantasia\\\"\\n              #razaoSocial=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!cliente.nomeFantasia.valid\\\" class=\\\"purple\\\">* Nome Fantasia do cliente precisar ter no mínimo 2 caracteres!</div>\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Endereço</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"endereco\\\" \\n              minlength=6\\n              required\\n              [(ngModel)]=\\\"cliente.endereco\\\"\\n              #endereco=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!cliente.endereco.valid\\\" class=\\\"purple\\\">* Endereço do cliente precisar ter no mínimo 6 caracteres!</div>\\n      \\n      Contatos: \\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Contato 1</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"nome\\\" \\n              required\\n              placeholder=\\\"contato1.nome\\\"\\n              [(ngModel)]=\\\"cliente.contato1.nome\\\"\\n              #contato1.nome=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"contato1.email\\\" \\n              required\\n              placeholder=\\\"e-mail\\\"\\n              [(ngModel)]=\\\"cliente.contato1.email\\\"\\n              #contato1.email=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"contato1.telefone\\\" \\n              required\\n              placeholder=\\\"telefone\\\"\\n              [(ngModel)]=\\\"cliente.contato1.telefone\\\"\\n              #contato1.telefone=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n<!--       \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Contato 2</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"nomeContato2\\\" \\n              required\\n              placeholder=\\\"nome\\\"\\n              [(ngModel)]=\\\"cliente.contato2.nome\\\"\\n              #nomeContato2=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"emailContato2\\\" \\n              required\\n              placeholder=\\\"e-mail\\\"\\n              [(ngModel)]=\\\"cliente.contato2.email\\\"\\n              #emailContato2=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"telContato2\\\" \\n              required\\n              placeholder=\\\"telefone\\\"\\n              [(ngModel)]=\\\"cliente.contato2.telefone\\\"\\n              #telContato2=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Contato 3</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"nomeContato3\\\" \\n              required\\n              placeholder=\\\"nome\\\"\\n              [(ngModel)]=\\\"cliente.contato3.nome\\\"\\n              #nomeContato3=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"emailContato3\\\" \\n              required\\n              placeholder=\\\"e-mail\\\"\\n              [(ngModel)]=\\\"cliente.contato3.email\\\"\\n              #emailContato3=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"telContato3\\\" \\n              required\\n              placeholder=\\\"telefone\\\"\\n              [(ngModel)]=\\\"cliente.contato3.telefone\\\"\\n              #telContato3=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Contato 4</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"nomeContato4\\\" \\n              required\\n              placeholder=\\\"nome\\\"\\n              [(ngModel)]=\\\"cliente.contato4.nome\\\"\\n              #nomeContato4=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"emailContato4\\\" \\n              required\\n              placeholder=\\\"e-mail\\\"\\n              [(ngModel)]=\\\"cliente.contato4.email\\\"\\n              #emailContato4=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"telContato4\\\" \\n              required\\n              placeholder=\\\"telefone\\\"\\n              [(ngModel)]=\\\"cliente.contato4.telefone\\\"\\n              #telContato4=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      \\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Contato 5</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"nomeContato5\\\" \\n              required\\n              placeholder=\\\"nome\\\"\\n              [(ngModel)]=\\\"cliente.contato5.nome\\\"\\n              #nomeContato5=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"emailContato5\\\" \\n              required\\n              placeholder=\\\"e-mail\\\"\\n              [(ngModel)]=\\\"cliente.contato5.email\\\"\\n              #emailContato5=\\\"ngModel\\\"\\n              />\\n      \\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"telContato5\\\" \\n              required\\n              placeholder=\\\"telefone\\\"\\n              [(ngModel)]=\\\"cliente.contato5.telefone\\\"\\n              #telContato5=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div> -->\\n      \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/clientes']\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"cliForm.invalid\\\">Confirma</button>\\n      {{ errors | json }}\\n      \\n    </form>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ClienteService } from '../cliente.service';\nimport { UsuarioService } from '../../usuario/usuario.service';\n\n@Component({\n  selector: 'app-cliente-novo',\n  templateUrl: './cliente-novo.component.html',\n  styleUrls: ['./cliente-novo.component.css']\n})\nexport class ClienteNovoComponent implements OnInit {\n  usuario: any;\n  errors: any;\n  cliente = {\n    cnpj: 0,\n    razaoSocial: \"\",\n    nomeFantasia: \"\",\n    endereco: \"\",\n    contato1: {\n      nome: \"\",\n      email: \"\",\n      telefone: 0\n    }\n    // contato2: {\n    //   nome: \"\",\n    //   email: \"\",\n    //   telefone: 0\n    // },\n    // contato3: {\n    //   nome: \"\",\n    //   email: \"\",\n    //   telefone: 0\n    // },\n    // contato4: {\n    //   nome: \"\",\n    //   email: \"\",\n    //   telefone: 0\n    // },\n    // contato5: {\n    //   nome: \"\",\n    //   email: \"\",\n    //   telefone: 0\n    // }\n  }\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _clienteService: ClienteService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log(' ClienteNovoComponent > ', this.usuario);\n  }\n\n  criarCliente(cliForm: NgForm) {\n    console.log('ClienteNovoComponent > novoProjeto(cliForm)', cliForm); \n    this._clienteService.criarCliente(cliForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu salvando cliente ', this.errors);\n          this._router.navigate(['/cliente/novo']);\n        } else {\n          this._router.navigate(['/clientes']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    cliForm.resetForm();\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  cliente-show works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cliente-show',\n  templateUrl: './cliente-show.component.html',\n  styleUrls: ['./cliente-show.component.css']\n})\nexport class ClienteShowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class ClienteService {\n  clientes: any;\n\n  constructor(private _http: Http) { }\n\n  obterTodos() {\n    console.log('ClienteService > obterTodos()');\n    return this._http.get('/clientes');\n  }\n\n  criarCliente(cliente) {\n    console.log('ClienteService > criarCliente(cliente)', cliente);\n    return this._http.post('cliente/novo', cliente);\n  }\n\n  // editarCliente(cliente) {\n  //   console.log('ProjetoService > editarProjeto(projeto)', projeto);\n  //   return this._http.put('projeto/edit/' + projeto['_id'], projeto);\n  // }\n\n  // encerrarProjeto(id) {\n  //   this._http.put('/projeto/encerrar,' + id, this.projeto).subscribe(\n  //     (res) => {\n  //       console.log('SUCESSO no encerramento do projeto: ', res.json());\n  //       this.projeto(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERRO no encerramento do projeto: ', err);\n  //     }\n  //   );\n  // }\n\n  // obterProjetoById(id) {\n  //   console.log('ProjetoService > obterProjetoById', id);\n  //   return this._http.get('/projeto/' + id );\n  // }\n  \n  // getOne(recipie, id) {\n  //   this._http.get('/recipie').subscribe(\n  //   id => id.json());\n  //   console.log('services-recipie in getOne:', id)\n  // }\n\n\n\n  // updateRecipie(ingredients, callback) {\n  //   this._http.put('/recipie/update', ingredients).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS updating recipie: ', res.json());\n  //       callback(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERROR updating recipie: ', err);\n  //     }\n  //   );\n  // }\n\n  // likeRecipie(id, callback) {\n  //   this._http.put('/recipie/like/' + id, this.recipie ).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS Like recipie: ', res.json());\n  //       res.json();\n  //     },\n  //     (err) => {\n  //       console.log('ERROR like recipie: ', err);\n  //     }\n  //   );\n  // }\n\n\n\n  \n}\n\n","module.exports = \"\"","module.exports = \"<p>\\n  financeiro works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-financeiro',\n  templateUrl: './financeiro.component.html',\n  styleUrls: ['./financeiro.component.css']\n})\nexport class FinanceiroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, ErrorHandler, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class GlobalErrorHandlerService implements ErrorHandler {\n\n  constructor(private injector: Injector) { }    \n\n  handleError(error: any) {\n    let router = this.injector.get(Router);\n    console.log('URL: ' + router.url);\n    \n    if (error instanceof HttpErrorResponse) {\n        //Backend returns unsuccessful response codes such as 404, 500 etc.\t\t\t\t  \n        console.error('Backend returned status code: ', error.status);\n        console.error('Response body:', error.message);          \t  \n    } else {\n        //A client-side or network error occurred.\t          \n        console.error('Um erro ocorreu:', error.message);          \n    }     \n    router.navigate(['/error']);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n        <h2>Ocorreu um erro...</h2>\n    `\n})\nexport class GlobalErrorComponent {\n}","module.exports = \"\"","module.exports = \"<section class=\\\"hero is-info is-fullheight\\\">\\n  <div class=\\\"hero-body\\\">\\n      <div class=\\\"container has-text-centered\\\">\\n          <div class=\\\"column is-4 is-offset-4\\\">\\n              <h3 class=\\\"title has-text-grey\\\">Apontador!</h3>\\n              <p class=\\\"subtitle has-text-grey\\\">Digite seus dados para entrar</p>\\n              <div class=\\\"box\\\">\\n                  <figure class=\\\"avatar\\\">\\n                      <img src=\\\"../assets/images/torrenegra.png\\\">\\n                  </figure>\\n                  <div class=\\\"errors\\\">\\n                    <p *ngIf=\\\"errors.email\\\" >  {{ errors.email.message }} </p>\\n                    <p *ngIf=\\\"errors.senha\\\"> {{ errors.senha.message }} </p>        \\n                  </div>\\n                  <form name=\\\"form\\\" (submit)=\\\"login()\\\" #formData=\\\"ngForm\\\"> \\n                      <div class=\\\"field\\\">\\n                          <div class=\\\"control\\\">\\n                              <input class=\\\"input is-large\\\"\\n                               type=\\\"email\\\" \\n                               placeholder=\\\"Seu Email\\\" \\n                               autofocus=\\\"\\\"\\n                               name=\\\"email\\\" \\n                               required\\n                               [(ngModel)]=\\\"usuario.email\\\" \\n                               #email=\\\"ngModel\\\"  \\n                              />\\n                          </div>\\n                      </div>\\n\\n                      <div class=\\\"field\\\">\\n                          <div class=\\\"control\\\">\\n                              <input class=\\\"input is-large\\\" \\n                              type=\\\"password\\\" \\n                              placeholder=\\\"Sua Senha\\\"\\n                              name=\\\"senha\\\" \\n                              required\\n                              [(ngModel)]=\\\"usuario.senha\\\" \\n                              #senha=\\\"ngModel\\\" \\n                             />\\n                          </div>\\n                      </div>\\n                      <div class=\\\"field\\\">\\n                          <label class=\\\"checkbox\\\">\\n                              <input type=\\\"checkbox\\\">\\n                                  Lembrar a Senha\\n                          </label>\\n                      </div>\\n                  <button type=\\\"submit\\\" class=\\\"button is-block is-info is-large is-fullwidth\\\" [disabled]=\\\"formData.invalid\\\">Entrar</button>\\n                  </form>\\n              </div>\\n              <p class=\\\"has-text-grey\\\">\\n                \\n                  <a href=\\\"../\\\">Esqueci minha Senha</a> &nbsp;·&nbsp;\\n                  <a href=\\\"../\\\">Ajuda?</a>\\n              </p>\\n          </div>\\n      </div>\\n  </div>\\n</section>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from '../usuario/usuario.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  usuario = {\n    email: '',\n    senha: ''\n  };\n  errors: any = {}\n  \n  constructor(\n    private router: Router,\n    private _usuarioService: UsuarioService) {}\n\n\n  ngOnInit() {\n    this.usuario = { email: \"\", senha: \"\"};\n    console.log('usuario logado? ', this._usuarioService.getUserLoggedIn());\n  }\n\n  login() {\n    this._usuarioService.login(this.usuario, (res) => { \n      if(res.errors) {\n        console.log('ERRO em login');\n        this.errors = res.errors;\n        this.router.navigate(['/']);\n      } else {\n        console.log('SUCESSO em login');\n        if (this.usuario.email == \"admin@torrenegra.com.br\") {\n          this.router.navigate(['/projetos']);\n        } else {\n          this.router.navigate(['/apontamentos']);\n        }\n      }\n    })\n}\n\n\n}\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  template: `<h2>Pagina não encontrada!</h2>\n             <div>\n                <button (click)=\"goBack()\">Retornar</button>\n\t     </div>\n        `\n})\nexport class PaginaNaoEncontradaComponent {\n\tconstructor(private location: Location) { }\n\tgoBack(): void {\n          this.location.back();\n        }\n}","module.exports = \"button {\\n    margin: 10px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"projetos\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.descricao\\\" >  {{ errors['descricao'].message }} </p>\\n      <p *ngIf=\\\"errors.cliente\\\" >  {{ errors['cliente'].message }} </p>\\n      <p *ngIf=\\\"errors.pedido\\\" >  {{ errors['pedido'].message }} </p>   \\n      <p *ngIf=\\\"errors.horasPLC\\\" >  {{ errors['horasPLC'].message }} </p>       \\n      <p *ngIf=\\\"errors.horasIHM\\\" >  {{ errors['horasIHM'].message }} </p>  \\n      <p *ngIf=\\\"errors.valorTerceiros\\\" >  {{ errors['valorTerceiros'].message }} </p>            \\n      <p *ngIf=\\\"errors.valorMateriais\\\" >  {{ errors['valorMateriais'].message }} </p>       \\n      <p *ngIf=\\\"errors.valorViagens\\\" >  {{ errors['valorViagens'].message }} </p>       \\n    </div>\\n\\n    <form (submit)='editarProjeto()' #projForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Código</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p style=\\\"margin-top: 7px;\\\" class=\\\"control\\\">\\n              {{ projeto.codigo }}\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Descrição</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"descricao\\\" \\n              minlength=8\\n              required\\n              [(ngModel)]=\\\"projeto.descricao\\\"\\n              #descricao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n      \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Cliente</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"cliente\\\" \\n              minlength=4\\n              required\\n              [(ngModel)]=\\\"projeto.cliente\\\"\\n              #cliente=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Pedido</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input\\\" \\n              type=\\\"text\\\" \\n              name=\\\"pedido\\\" \\n              required\\n              [(ngModel)]=\\\"projeto.pedido\\\"\\n              #pedido=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Horas PLC</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"horasPLC\\\" \\n              [(ngModel)]=\\\"projeto.horasPLC\\\"\\n              #horasPLC=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!horasPLC.valid\\\" class=\\\"purple\\\">horasPLC precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Horas IHM</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"horasIHM\\\" \\n              [(ngModel)]=\\\"projeto.horasIHM\\\"\\n              #descricao=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!horasIHM.valid\\\" class=\\\"purple\\\">horasIHM do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Valor Terceiros</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorTerceiros\\\" \\n              [(ngModel)]=\\\"projeto.valorTerceiros\\\"\\n              #valorTerceiros=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!valorTerceiros.valid\\\" class=\\\"purple\\\">valorTerceiros precisar ter no mínimo 4 caracteres!</div> -->\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Materiais</label>\\n        </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input \\\" \\n                type=\\\"text\\\" \\n                name=\\\"valorMateriais\\\" \\n                [(ngModel)]=\\\"projeto.valorMateriais\\\"\\n                #valorMateriais=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Viagens</label>\\n        </div>\\n          <div class=\\\"field-body\\\">\\n            <div class=\\\"field\\\">\\n              <p class=\\\"control\\\">\\n                <input \\n                class=\\\"input \\\" \\n                type=\\\"text\\\" \\n                name=\\\"valorViagens\\\" \\n                [(ngModel)]=\\\"projeto.valorViagens\\\"\\n                #valorViagens=\\\"ngModel\\\"\\n                />\\n              </p>\\n            </div>\\n        </div>\\n      </div>\\n    \\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/projetos']\\\">Cancela</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"  [disabled]=\\\"projForm.invalid\\\">Confirma</button>\\n    \\n    </form>\\n  </div>  \"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ProjetoService } from '../projeto.service';\nimport { Router, ActivatedRoute } from '../../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-projeto-edit',\n  templateUrl: './projeto-edit.component.html',\n  styleUrls: ['./projeto-edit.component.css']\n})\nexport class ProjetoEditComponent implements OnInit {\n  usuario: any;\n  errors: any;\n  projeto = {\n    codigo: \"\",\n    descricao: \"\",\n    cliente:  \"\",\n    pedido:  0,\n    horasPLC:  0,\n    horasIHM:  0,\n    valorTerceiros:  0,\n    valorMateriais:  0,\n    valorViagens:  0\n  };\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoEditComponent > usuario: ', this.usuario);\n    this.obterProjeto(this._route.snapshot.params['id']);\n\n  }\n\n  obterProjeto(id){\n    console.log('ProjetoEditComponent > obterProjeto'); \n      const observable = this._projetoService.obterProjetoById(id);\n      observable.subscribe((response) => {\n        this.projeto = response.json();\n        console.log('ProjetoEditComponent > returning', this.projeto);\n    });\n  }\n\n\n  editarProjeto() {\n      console.log('ProjetoEditComponent > obterProjeto(projForm)', this.projeto); \n      this._projetoService.editarProjeto(this.projeto)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu editando projeto ', this.errors);\n          this._router.navigate(['/projeto/edit/', this.projeto['_id']]);\n        } else {\n          this._router.navigate(['/projetos']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n  }\n\n\n}\n","module.exports = \".right {\\n    text-align: right;\\n}\\np {\\n    font-size: 0.9em;\\n}\\n.errors{\\n    width: inherit;\\n    height: 40px;\\n    display: block;\\n    margin: 0px auto;\\n    color: red;\\n}\\nbutton {\\n    margin: 10px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Cadastro\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/usuarios']\\\">Usuário</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/clientes']\\\">Cliente</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"apontamento\\\">Apontamento</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"financeiro\\\">Financeiro</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Relatório\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"relatorio/financeiro\\\">Financeiro</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Total de horas por projeto</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Total de horas por funcionário</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Custo por pedido</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Projetos encerrados</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Sair <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"box\\\">\\n  <nav class=\\\"level\\\">\\n    <div class=\\\"level-left\\\">\\n        <div class=\\\"title is-4\\\">Projetos</div> \\n    </div>\\n    <div class=\\\"level-right\\\">\\n        <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/projeto/novo']\\\">Novo projeto</button>\\n    </div> \\n  </nav>\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-1\\\">Código</th>\\n                  <th class=\\\"col-3\\\">Descrição</th>\\n                  <th class=\\\"col-2\\\">Cliente</th>\\n                  <th class=\\\"col-2\\\">Pedido</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <th class=\\\"col-1\\\"> </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n\\n                <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                  <td class=\\\"col-1\\\">{{ projeto['codigo'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['cliente'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" (click)=\\\"encerrar()\\\"  class=\\\"button is-danger\\\">Encerrar</button></td>\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProjetoService } from '../projeto.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-projeto-list',\n  templateUrl: './projeto-list.component.html',\n  styleUrls: ['./projeto-list.component.css']\n})\nexport class ProjetoListComponent implements OnInit {\n  \n  projetos: any;\n\n  constructor(\n    private _projetoService: ProjetoService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.obterProjetoList();\n  }\n\n  obterProjetoList() {\n    console.log('ProjetoListComponent > obterProjetoList()')\n    const projetoObservable = this._projetoService.obterTodos();\n    projetoObservable.subscribe(\n      (projetos) => { \n        this.projetos = projetos.json();\n      },\n      (err) => { },\n        () => { }\n    )\n  }\n\n  encerrar() {\n    console.log('ProjetoListComponent > encerrar()')\n\n  }\n\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\\n.purple {\\n    color: purple;\\n    margin: 0px 0px 30px 60px;\\n}\\n.errors {\\n    color: brown;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"projetos\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"errors\\\" *ngIf=\\\"errors\\\">\\n      <p *ngIf=\\\"errors.codigo\\\" >  {{ errors['codigo'].message }} </p>\\n      <p *ngIf=\\\"errors.descricao\\\" >  {{ errors['descricao'].message }} </p>\\n      <p *ngIf=\\\"errors.cliente\\\" >  {{ errors['cliente'].message }} </p>\\n      <p *ngIf=\\\"errors.pedido\\\" >  {{ errors['pedido'].message }} </p>   \\n      <p *ngIf=\\\"errors.horasPLC\\\" >  {{ errors['horasPLC'].message }} </p>       \\n    </div>\\n\\n    <form (submit)='criarProjeto(projCreateForm)' #projCreateForm='ngForm'>\\n      <div class=\\\"field is-horizontal\\\">\\n        <div class=\\\"field-label is-normal\\\">\\n          <label class=\\\"label\\\">Código</label>\\n        </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input is-focused\\\" \\n              type=\\\"text\\\" \\n              name=\\\"codigo\\\" \\n              minlength=4\\n              required\\n              [(ngModel)]=\\\"projeto.codigo\\\"\\n              #codigo=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div *ngIf=\\\"!projeto.codigo.valid\\\" class=\\\"purple\\\">* Código precisar ter 7 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Descrição</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"descricao\\\" \\n            minlength=8\\n            required\\n            [(ngModel)]=\\\"projeto.descricao\\\"\\n            #descricao=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.descricao.valid\\\" class=\\\"purple\\\">Descrição do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Cliente</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"cliente\\\" \\n            minlength=4\\n            required\\n            [(ngModel)]=\\\"projeto.cliente\\\"\\n            #cliente=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.cliente.valid\\\" class=\\\"purple\\\">Cliente precisar ter no mínimo 6 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Pedido</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input\\\" \\n            type=\\\"text\\\" \\n            name=\\\"pedido\\\" \\n            required\\n            [(ngModel)]=\\\"projeto.pedido\\\"\\n            #pedido=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!projeto.pedido.valid\\\" class=\\\"purple\\\">Pedido do projeto precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Horas PLC</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"horasPLC\\\" \\n            [(ngModel)]=\\\"projeto.horasPLC\\\"\\n            #horasPLC=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!horasPLC.valid\\\" class=\\\"purple\\\">horasPLC precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Horas IHM</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"horasIHM\\\" \\n            [(ngModel)]=\\\"projeto.horasIHM\\\"\\n            #descricao=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!horasIHM.valid\\\" class=\\\"purple\\\">horasIHM do projeto precisar ter no mínimo 8 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Valor Terceiros</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input \\\" \\n            type=\\\"text\\\" \\n            name=\\\"valorTerceiros\\\" \\n            [(ngModel)]=\\\"projeto.valorTerceiros\\\"\\n            #valorTerceiros=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!valorTerceiros.valid\\\" class=\\\"purple\\\">valorTerceiros precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Valor Materiais</label>\\n      </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorMateriais\\\" \\n              [(ngModel)]=\\\"projeto.valorMateriais\\\"\\n              #valorMateriais=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Valor Viagens</label>\\n      </div>\\n        <div class=\\\"field-body\\\">\\n          <div class=\\\"field\\\">\\n            <p class=\\\"control\\\">\\n              <input \\n              class=\\\"input \\\" \\n              type=\\\"text\\\" \\n              name=\\\"valorViagens\\\" \\n              [(ngModel)]=\\\"projeto.valorViagens\\\"\\n              #valorViagens=\\\"ngModel\\\"\\n              />\\n            </p>\\n          </div>\\n      </div>\\n    </div>\\n  \\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/projetos']\\\">Cancela</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"projCreateForm.invalid\\\">Confirma</button>\\n  \\n    </form>\\n  </div>  \"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioService } from '../../usuario/usuario.service';\nimport { ProjetoService } from '../projeto.service';\nimport { Router } from '../../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-projeto-novo',\n  templateUrl: './projeto-novo.component.html',\n  styleUrls: ['./projeto-novo.component.css']\n})\nexport class ProjetoNovoComponent implements OnInit {\n  usuario: any;\n  errors: any;\n  projetos: any;\n  projeto = {\n    codigo: \"\",\n    descricao: \"\",\n    cliente:  \"\",\n    pedido:  0,\n    horasPLC:  0,\n    horasIHM:  0,\n    valorTerceiros:  0,\n    valorMateriais:  0,\n    valorViagens:  0\n  };\n\n  constructor(\n    private _usuarioService: UsuarioService,\n    private _projetoService: ProjetoService,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.usuario = this._usuarioService.usuario;\n    console.log('ProjetoNovoComponent > ', this.usuario);\n  }\n\n  criarProjeto(projForm: NgForm) {\n    console.log('ProjetoNovoComponent > novoProjeto(nProjForm)', projForm); \n    this._projetoService.criarProjeto(projForm.value)\n      .subscribe(observable => {\n        if(observable.json().errors) {\n          this.errors = observable.json().errors;\n          console.log('Algum erro ocorreu salvando projeto ', this.errors);\n          this._router.navigate(['/projeto/novo']);\n        } else {\n          this._router.navigate(['/projetos']);\n        }\n      },\n      err => {\n        throw err;\n      }\n    );\n    projForm.resetForm();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"projeto/list\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n  <article class=\\\"media\\\">\\n    <div class=\\\"media-content\\\">\\n      <div class=\\\"content\\\">\\n\\n        <br>\\n        <div id=\\\"scroll\\\">\\n          <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n            <thead>\\n                <tr class=\\\"table-primary d-flex\\\">\\n                  <th class=\\\"col-1\\\">Código</th>\\n                  <th class=\\\"col-3\\\">Descrição</th>\\n                  <th class=\\\"col-2\\\">Cliente</th>\\n                  <th class=\\\"col-2\\\">Pedido</th>\\n                  <th class=\\\"col-1\\\">Ação</th>\\n                  <th class=\\\"col-1\\\"> </th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let projeto of projetos\\\" class=\\\"d-flex\\\">\\n                  <td class=\\\"col-1\\\">{{ projeto['codigo'] }}</td>\\n                  <td class=\\\"col-3\\\">{{ projeto['descricao'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['cliente'] }}</td>\\n                  <td class=\\\"col-2\\\">{{ projeto['pedido'] }}</td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/edit/', projeto['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                  <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/projeto/show', projeto['_id'] ]\\\"  class=\\\"button is-danger\\\">Encerrar</button></td>\\n                </tr>\\n              </tbody>\\n            </table> \\n          </div>    \\n        </div>\\n      </div>\\n    </article>\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"(click)=\\\"encerrar()\\\">Confirma</button>\\n\\n        <!-- <div class=\\\"errors\\\">\\n          <p *ngIf=\\\"errors.name\\\" >  {{ errors.name.message }} </p>\\n          <p *ngIf=\\\"errors.cuisine\\\"> {{ errors.cuisine.message }} </p>        \\n        </div> -->\\n</div>  \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProjetoService } from '../projeto.service';\n\n@Component({\n  selector: 'app-projeto-show',\n  templateUrl: './projeto-show.component.html',\n  styleUrls: ['./projeto-show.component.css']\n})\nexport class ProjetoShowComponent implements OnInit {\n  projeto: any;\n\n  constructor(\n    private _router: Router,\n    private _projetoService: ProjetoService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // encerrar() {\n  //   console.log('projeto em showProjeto: ', this.projeto); \n  //   this._projetoService.encerrarProjeto(this.projeto, (res) => {\n  //     this._router.navigate(['projeto/list', res]);\n  //   });\n  // }\n\n  cancel() {\n    this._router.navigate(['/projeto/list']);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class ProjetoService {\n  projeto: any;\n  projetos: any;\n  apontamentos: any;\n\n  constructor(private _http: Http) { }\n\n  obterApontamentos(apontamentos) {\n    this._http.get('/apontamento/list').subscribe(\n      (res) => {\n        console.log('SUCESSO lendo apontamento: ', res.json());\n        apontamentos(res.json());\n      },\n      (err) => {\n        console.log('ERRO lendo apontamento: ', err);\n      }\n    );\n  }\n\n  obterTodos() {\n    console.log('ProjetoService > obterTodos()');\n    return this._http.get('/projetos');\n  }\n\n  criarProjeto(projeto) {\n    console.log('ProjetoService > criarProjeto(projeto)', projeto);\n    return this._http.post('projeto/novo', projeto);\n  }\n\n  editarProjeto(projeto) {\n    console.log('ProjetoService > editarProjeto(projeto)', projeto);\n    return this._http.put('projeto/edit/' + projeto['_id'], projeto);\n  }\n\n  encerrarProjeto(id) {\n    this._http.put('/projeto/encerrar,' + id, this.projeto).subscribe(\n      (res) => {\n        console.log('SUCESSO no encerramento do projeto: ', res.json());\n        this.projeto(res.json());\n      },\n      (err) => {\n        console.log('ERRO no encerramento do projeto: ', err);\n      }\n    );\n  }\n\n  obterProjetoById(id) {\n    console.log('ProjetoService > obterProjetoById', id);\n    return this._http.get('/projeto/' + id );\n  }\n  \n  // getOne(recipie, id) {\n  //   this._http.get('/recipie').subscribe(\n  //   id => id.json());\n  //   console.log('services-recipie in getOne:', id)\n  // }\n\n\n\n  // updateRecipie(ingredients, callback) {\n  //   this._http.put('/recipie/update', ingredients).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS updating recipie: ', res.json());\n  //       callback(res.json());\n  //     },\n  //     (err) => {\n  //       console.log('ERROR updating recipie: ', err);\n  //     }\n  //   );\n  // }\n\n  // likeRecipie(id, callback) {\n  //   this._http.put('/recipie/like/' + id, this.recipie ).subscribe(\n  //     (res) => {\n  //       console.log('SUCCESS Like recipie: ', res.json());\n  //       res.json();\n  //     },\n  //     (err) => {\n  //       console.log('ERROR like recipie: ', err);\n  //     }\n  //   );\n  // }\n\n\n\n  \n}\n","module.exports = \"\"","module.exports = \"<p>\\n  relatorio-financeiro works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-relatorio-financeiro',\n  templateUrl: './relatorio-financeiro.component.html',\n  styleUrls: ['./relatorio-financeiro.component.css']\n})\nexport class RelatorioFinanceiroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  usuario-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-edit',\n  templateUrl: './usuario-edit.component.html',\n  styleUrls: ['./usuario-edit.component.css']\n})\nexport class UsuarioEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/projetos']\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n      <nav class=\\\"level\\\">\\n        <div class=\\\"level-left\\\">\\n            <div class=\\\"title is-4\\\">Usuário</div> \\n        </div>\\n        <div class=\\\"level-right\\\">\\n            <button type=\\\"button\\\" class=\\\"button is-light\\\" [routerLink]=\\\"['/usuario/novo']\\\">Novo usuário</button>\\n        </div> \\n      </nav>\\n    <article class=\\\"media\\\">\\n      <div class=\\\"media-content\\\">\\n        <div class=\\\"content\\\">\\n  \\n          <br>\\n          <div id=\\\"scroll\\\">\\n            <table class=\\\"table table-hover\\\" align=\\\"left\\\">\\n              <thead>\\n                  <tr class=\\\"table-primary d-flex\\\">\\n                    <th class=\\\"col-3\\\">Nome</th>\\n                    <th class=\\\"col-3\\\">Função</th>\\n                    <th class=\\\"col-2\\\">Custo/hora</th>\\n                    <th class=\\\"col-2\\\">Admin</th>\\n                    <th class=\\\"col-1\\\">Ação</th>\\n                    <th class=\\\"col-1\\\"> </th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let usuario of usuarios\\\" class=\\\"d-flex\\\">\\n                    <td class=\\\"col-3\\\">{{ usuario['nome'] }}</td>\\n                    <td class=\\\"col-3\\\">{{ usuario['funcao'] }}</td>\\n                    <td class=\\\"col-2\\\">{{ usuario['custo'] | number : '1.2-2' }}</td>\\n                    <td class=\\\"col-2\\\">{{ usuario['admin'] }}</td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/usuario/edit/', usuario['_id'] ]\\\" class=\\\"button is-warning\\\">Editar</button></td>\\n                    <td class=\\\"col-1\\\"><button type=\\\"button\\\" [routerLink]=\\\"['/usuario/show', usuario['_id'] ]\\\"  class=\\\"button is-danger\\\">Detalhes</button></td>\\n                  </tr>\\n                </tbody>\\n              </table> \\n            </div>    \\n          </div>\\n        </div>\\n      </article>\\n  </div>\\n    \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-list',\n  templateUrl: './usuario-list.component.html',\n  styleUrls: ['./usuario-list.component.css']\n})\nexport class UsuarioListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"button {\\n    margin: 10px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Torre Negra</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"usuario/list\\\">Retornar <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  \\n  <div class=\\\"container\\\">\\n  \\n  <form (submit)=\\\"addUsuario()\\\" #formData=\\\"ngForm\\\" id=\\\"newUsuarioForm\\\">\\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">Nome</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input is-focused\\\" \\n            type=\\\"text\\\" \\n            name=\\\"nome\\\" \\n            minlength=4\\n            required\\n            [(ngModel)]=\\\"usuario.nome\\\"\\n            #nome=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- <div *ngIf=\\\"!codigo.valid\\\" class=\\\"purple\\\">Código precisar ter no mínimo 4 caracteres!</div> -->\\n   \\n    <div class=\\\"field is-horizontal\\\">\\n      <div class=\\\"field-label is-normal\\\">\\n        <label class=\\\"label\\\">e-mail</label>\\n      </div>\\n      <div class=\\\"field-body\\\">\\n        <div class=\\\"field\\\">\\n          <p class=\\\"control\\\">\\n            <input \\n            class=\\\"input is-focused\\\" \\n            type=\\\"text\\\" \\n            name=\\\"email\\\" \\n            minlength=6\\n            required\\n            pattern=\\\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\\\"\\n            [(ngModel)]=\\\"usuario.email\\\"\\n            #email=\\\"ngModel\\\"\\n            />\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n<!-- <div *ngIf=\\\"!codigo.valid\\\" class=\\\"purple\\\">Código precisar ter no mínimo 4 caracteres!</div> -->\\n\\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Função</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"funcao\\\" \\n          minlength=4\\n          required\\n          [(ngModel)]=\\\"usuario.funcao\\\"\\n          #funcao=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- <div *ngIf=\\\"!cliente.valid\\\" class=\\\"purple\\\">Função precisar ter no mínimo 4 caracteres!</div> -->\\n  \\n  \\n  <div class=\\\"field is-horizontal\\\">\\n    <div class=\\\"field-label is-normal\\\">\\n      <label class=\\\"label\\\">Custo hora</label>\\n    </div>\\n    <div class=\\\"field-body\\\">\\n      <div class=\\\"field\\\">\\n        <p class=\\\"control\\\">\\n          <input \\n          class=\\\"input\\\" \\n          type=\\\"text\\\" \\n          name=\\\"custoHora\\\" \\n          minlength=8\\n          required\\n          [(ngModel)]=\\\"usuario.custoHora\\\"\\n          #custoHora=\\\"ngModel\\\"\\n          />\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"field is-horizontal\\\">\\n    <label class=\\\"checkbox\\\">\\n        <input type=\\\"checkbox\\\">\\n       &nbsp; Adminstrador  \\n    </label>\\n  </div>\\n  \\n  \\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancela</button>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"formData.invalid\\\">Confirma</button>\\n  \\n        <!-- <div class=\\\"errors\\\">\\n          <p *ngIf=\\\"errors.name\\\" >  {{ errors.name.message }} </p>\\n          <p *ngIf=\\\"errors.cuisine\\\"> {{ errors.cuisine.message }} </p>        \\n        </div> -->\\n  \\n  </form>\\n  \\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-novo',\n  templateUrl: './usuario-novo.component.html',\n  styleUrls: ['./usuario-novo.component.css']\n})\nexport class UsuarioNovoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  usuario-show works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usuario-show',\n  templateUrl: './usuario-show.component.html',\n  styleUrls: ['./usuario-show.component.css']\n})\nexport class UsuarioShowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  private isUserLoggedIn;\n  public usuario;\n\n\n  constructor(private _http: Http) { \n    this.isUserLoggedIn = false;\n  }\n\n  login(usuario, callback) {\n    this.usuario = usuario;\n    console.log('LOGIN success: ', this.usuario);\n    callback(this.usuario);\n  }\n\n  setUserLoggedIn() {\n    this.isUserLoggedIn = true;\n  }\n\n  getUserLoggedIn() {\n    return this.isUserLoggedIn;\n  }\n\n  // login(user, callback) {\n  //   this._http.post('/login/', user).subscribe(\n  //     (res) => {\n  //       if (!callback) {\n  //         console.log('Email nao cadastrado, tente novamente!');\n  //       } else {\n  //         console.log('SUCCESS in login: ', res);\n  //         callback(res.json());\n  //       }\n  //     },\n  //     (err) => {\n  //       console.log('ERROR in login: ', err.json());\n  //     }\n  //   );\n  // }\n\n\n\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}